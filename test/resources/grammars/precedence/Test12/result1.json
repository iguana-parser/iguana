{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "startSymbol" : "S"
  },
  "child" : {
    "kind" : "NonterminalNode",
    "rule" : {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "hasPostfixUnaryBelow" : false,
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    "children" : [
      {
        "kind" : "NonterminalNode",
        "rule" : {
          "head" : {
            "kind" : "Nonterminal",
            "name" : "E",
            "parameters" : [
              "p"
            ]
          },
          "body" : [
            {
              "kind" : "Nonterminal",
              "name" : "E",
              "preConditions" : [
                {
                  "kind" : "DataDependentCondition",
                  "type" : "DATA_DEPENDENT",
                  "expression" : {
                    "kind" : "GreaterThanEqual",
                    "lhs" : {
                      "kind" : "Integer",
                      "value" : 2
                    },
                    "rhs" : {
                      "kind" : "Name",
                      "name" : "p",
                      "i" : -1
                    }
                  }
                }
              ],
              "postConditions" : [
                {
                  "kind" : "DataDependentCondition",
                  "type" : "DATA_DEPENDENT",
                  "expression" : {
                    "kind" : "Or",
                    "lhs" : {
                      "kind" : "LessThanEqual",
                      "lhs" : {
                        "kind" : "Name",
                        "name" : "l",
                        "i" : -1
                      },
                      "rhs" : {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    },
                    "rhs" : {
                      "kind" : "GreaterThanEqual",
                      "lhs" : {
                        "kind" : "Name",
                        "name" : "l",
                        "i" : -1
                      },
                      "rhs" : {
                        "kind" : "Integer",
                        "value" : 2
                      }
                    }
                  }
                }
              ],
              "variable" : "l",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              ]
            },
            {
              "kind" : "Terminal",
              "name" : "'-'",
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "val" : 45
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "E",
              "variable" : "r",
              "arguments" : [
                {
                  "kind" : "Integer",
                  "value" : 3
                }
              ]
            },
            {
              "kind" : "Return",
              "name" : "{(r <= 0)? 2 : min(r,2)}",
              "expression" : {
                "kind" : "IfThenElse",
                "condition" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "r",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "thenPart" : {
                  "kind" : "Integer",
                  "value" : 2
                },
                "elsePart" : {
                  "kind" : "Min",
                  "arguments" : [
                    {
                      "kind" : "Name",
                      "name" : "r",
                      "i" : -1
                    },
                    {
                      "kind" : "Integer",
                      "value" : 2
                    }
                  ],
                  "fun" : "min"
                }
              }
            }
          ],
          "recursion" : "LEFT_RIGHT_REC",
          "irecursion" : "NON_REC",
          "associativity" : "UNDEFINED",
          "associativityGroup" : {
            "associativity" : "LEFT",
            "precedenceLevel" : {
              "lhs" : 2,
              "rhs" : 2,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : true,
              "prefixUnaryBelow" : [
                1
              ],
              "hasPostfixUnaryBelow" : false,
              "index" : 3,
              "containsAssociativityGroup" : true,
              "assoc_lhs" : 2,
              "assoc_rhs" : 2
            },
            "lhs" : 2,
            "rhs" : 2,
            "precedence" : 2
          },
          "precedence" : 2,
          "precedenceLevel" : {
            "lhs" : 2,
            "rhs" : 2,
            "undefined" : -1,
            "hasPrefixUnary" : false,
            "hasPostfixUnary" : false,
            "hasPrefixUnaryBelow" : true,
            "prefixUnaryBelow" : [
              1
            ],
            "hasPostfixUnaryBelow" : false,
            "index" : 3,
            "containsAssociativityGroup" : true,
            "assoc_lhs" : 2,
            "assoc_rhs" : 2
          }
        },
        "children" : [
          {
            "kind" : "NonterminalNode",
            "rule" : {
              "head" : {
                "kind" : "Nonterminal",
                "name" : "E",
                "parameters" : [
                  "p"
                ]
              },
              "body" : [
                {
                  "kind" : "Nonterminal",
                  "name" : "E",
                  "preConditions" : [
                    {
                      "kind" : "DataDependentCondition",
                      "type" : "DATA_DEPENDENT",
                      "expression" : {
                        "kind" : "GreaterThanEqual",
                        "lhs" : {
                          "kind" : "Integer",
                          "value" : 2
                        },
                        "rhs" : {
                          "kind" : "Name",
                          "name" : "p",
                          "i" : -1
                        }
                      }
                    }
                  ],
                  "postConditions" : [
                    {
                      "kind" : "DataDependentCondition",
                      "type" : "DATA_DEPENDENT",
                      "expression" : {
                        "kind" : "Or",
                        "lhs" : {
                          "kind" : "LessThanEqual",
                          "lhs" : {
                            "kind" : "Name",
                            "name" : "l",
                            "i" : -1
                          },
                          "rhs" : {
                            "kind" : "Integer",
                            "value" : 0
                          }
                        },
                        "rhs" : {
                          "kind" : "GreaterThanEqual",
                          "lhs" : {
                            "kind" : "Name",
                            "name" : "l",
                            "i" : -1
                          },
                          "rhs" : {
                            "kind" : "Integer",
                            "value" : 2
                          }
                        }
                      }
                    }
                  ],
                  "variable" : "l",
                  "arguments" : [
                    {
                      "kind" : "Name",
                      "name" : "p",
                      "i" : -1
                    }
                  ]
                },
                {
                  "kind" : "Terminal",
                  "name" : "'+'",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 43
                  }
                },
                {
                  "kind" : "Nonterminal",
                  "name" : "E",
                  "variable" : "r",
                  "arguments" : [
                    {
                      "kind" : "Integer",
                      "value" : 3
                    }
                  ]
                },
                {
                  "kind" : "Return",
                  "name" : "{(r <= 0)? 2 : min(r,2)}",
                  "expression" : {
                    "kind" : "IfThenElse",
                    "condition" : {
                      "kind" : "LessThanEqual",
                      "lhs" : {
                        "kind" : "Name",
                        "name" : "r",
                        "i" : -1
                      },
                      "rhs" : {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    },
                    "thenPart" : {
                      "kind" : "Integer",
                      "value" : 2
                    },
                    "elsePart" : {
                      "kind" : "Min",
                      "arguments" : [
                        {
                          "kind" : "Name",
                          "name" : "r",
                          "i" : -1
                        },
                        {
                          "kind" : "Integer",
                          "value" : 2
                        }
                      ],
                      "fun" : "min"
                    }
                  }
                }
              ],
              "recursion" : "LEFT_RIGHT_REC",
              "irecursion" : "NON_REC",
              "associativity" : "UNDEFINED",
              "associativityGroup" : {
                "associativity" : "LEFT",
                "precedenceLevel" : {
                  "lhs" : 2,
                  "rhs" : 2,
                  "undefined" : -1,
                  "hasPrefixUnary" : false,
                  "hasPostfixUnary" : false,
                  "hasPrefixUnaryBelow" : true,
                  "prefixUnaryBelow" : [
                    1
                  ],
                  "hasPostfixUnaryBelow" : false,
                  "index" : 3,
                  "containsAssociativityGroup" : true,
                  "assoc_lhs" : 2,
                  "assoc_rhs" : 2
                },
                "lhs" : 2,
                "rhs" : 2,
                "precedence" : 2
              },
              "precedence" : 2,
              "precedenceLevel" : {
                "lhs" : 2,
                "rhs" : 2,
                "undefined" : -1,
                "hasPrefixUnary" : false,
                "hasPostfixUnary" : false,
                "hasPrefixUnaryBelow" : true,
                "prefixUnaryBelow" : [
                  1
                ],
                "hasPostfixUnaryBelow" : false,
                "index" : 3,
                "containsAssociativityGroup" : true,
                "assoc_lhs" : 2,
                "assoc_rhs" : 2
              }
            },
            "children" : [
              {
                "kind" : "NonterminalNode",
                "rule" : {
                  "head" : {
                    "kind" : "Nonterminal",
                    "name" : "E",
                    "parameters" : [
                      "p"
                    ]
                  },
                  "body" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'a'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    {
                      "kind" : "Return",
                      "name" : "{0}",
                      "expression" : {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    }
                  ],
                  "recursion" : "NON_REC",
                  "irecursion" : "NON_REC",
                  "associativity" : "UNDEFINED",
                  "precedence" : -1,
                  "precedenceLevel" : {
                    "lhs" : 1,
                    "rhs" : 1,
                    "undefined" : 1,
                    "hasPrefixUnary" : true,
                    "hasPostfixUnary" : false,
                    "hasPrefixUnaryBelow" : false,
                    "hasPostfixUnaryBelow" : false,
                    "index" : 2,
                    "containsAssociativityGroup" : false,
                    "assoc_lhs" : -1,
                    "assoc_rhs" : -1
                  }
                },
                "children" : [
                  {
                    "kind" : "KeywordTerminalNode",
                    "terminal" : {
                      "kind" : "Terminal",
                      "name" : "'a'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    "start" : 0,
                    "end" : 1
                  }
                ],
                "start" : 0,
                "end" : 1
              },
              {
                "kind" : "KeywordTerminalNode",
                "terminal" : {
                  "kind" : "Terminal",
                  "name" : "'+'",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 43
                  }
                },
                "start" : 1,
                "end" : 2
              },
              {
                "kind" : "NonterminalNode",
                "rule" : {
                  "head" : {
                    "kind" : "Nonterminal",
                    "name" : "E",
                    "parameters" : [
                      "p"
                    ]
                  },
                  "body" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'a'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    {
                      "kind" : "Return",
                      "name" : "{0}",
                      "expression" : {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    }
                  ],
                  "recursion" : "NON_REC",
                  "irecursion" : "NON_REC",
                  "associativity" : "UNDEFINED",
                  "precedence" : -1,
                  "precedenceLevel" : {
                    "lhs" : 1,
                    "rhs" : 1,
                    "undefined" : 1,
                    "hasPrefixUnary" : true,
                    "hasPostfixUnary" : false,
                    "hasPrefixUnaryBelow" : false,
                    "hasPostfixUnaryBelow" : false,
                    "index" : 2,
                    "containsAssociativityGroup" : false,
                    "assoc_lhs" : -1,
                    "assoc_rhs" : -1
                  }
                },
                "children" : [
                  {
                    "kind" : "KeywordTerminalNode",
                    "terminal" : {
                      "kind" : "Terminal",
                      "name" : "'a'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    "start" : 2,
                    "end" : 3
                  }
                ],
                "start" : 2,
                "end" : 3
              }
            ],
            "start" : 0,
            "end" : 3
          },
          {
            "kind" : "KeywordTerminalNode",
            "terminal" : {
              "kind" : "Terminal",
              "name" : "'-'",
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "val" : 45
              }
            },
            "start" : 3,
            "end" : 4
          },
          {
            "kind" : "NonterminalNode",
            "rule" : {
              "head" : {
                "kind" : "Nonterminal",
                "name" : "E",
                "parameters" : [
                  "p"
                ]
              },
              "body" : [
                {
                  "kind" : "Terminal",
                  "name" : "'-'",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 45
                  }
                },
                {
                  "kind" : "Nonterminal",
                  "name" : "E",
                  "arguments" : [
                    {
                      "kind" : "Integer",
                      "value" : 0
                    }
                  ]
                },
                {
                  "kind" : "Return",
                  "name" : "{1}",
                  "expression" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              ],
              "recursion" : "RIGHT_REC",
              "irecursion" : "NON_REC",
              "associativity" : "UNDEFINED",
              "precedence" : 1,
              "precedenceLevel" : {
                "lhs" : 1,
                "rhs" : 1,
                "undefined" : 1,
                "hasPrefixUnary" : true,
                "hasPostfixUnary" : false,
                "hasPrefixUnaryBelow" : false,
                "hasPostfixUnaryBelow" : false,
                "index" : 2,
                "containsAssociativityGroup" : false,
                "assoc_lhs" : -1,
                "assoc_rhs" : -1
              }
            },
            "children" : [
              {
                "kind" : "KeywordTerminalNode",
                "terminal" : {
                  "kind" : "Terminal",
                  "name" : "'-'",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 45
                  }
                },
                "start" : 4,
                "end" : 5
              },
              {
                "kind" : "NonterminalNode",
                "rule" : {
                  "head" : {
                    "kind" : "Nonterminal",
                    "name" : "E",
                    "parameters" : [
                      "p"
                    ]
                  },
                  "body" : [
                    {
                      "kind" : "Nonterminal",
                      "name" : "E",
                      "preConditions" : [
                        {
                          "kind" : "DataDependentCondition",
                          "type" : "DATA_DEPENDENT",
                          "expression" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Integer",
                              "value" : 2
                            },
                            "rhs" : {
                              "kind" : "Name",
                              "name" : "p",
                              "i" : -1
                            }
                          }
                        }
                      ],
                      "postConditions" : [
                        {
                          "kind" : "DataDependentCondition",
                          "type" : "DATA_DEPENDENT",
                          "expression" : {
                            "kind" : "Or",
                            "lhs" : {
                              "kind" : "LessThanEqual",
                              "lhs" : {
                                "kind" : "Name",
                                "name" : "l",
                                "i" : -1
                              },
                              "rhs" : {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            },
                            "rhs" : {
                              "kind" : "GreaterThanEqual",
                              "lhs" : {
                                "kind" : "Name",
                                "name" : "l",
                                "i" : -1
                              },
                              "rhs" : {
                                "kind" : "Integer",
                                "value" : 2
                              }
                            }
                          }
                        }
                      ],
                      "variable" : "l",
                      "arguments" : [
                        {
                          "kind" : "Name",
                          "name" : "p",
                          "i" : -1
                        }
                      ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "'+'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 43
                      }
                    },
                    {
                      "kind" : "Nonterminal",
                      "name" : "E",
                      "variable" : "r",
                      "arguments" : [
                        {
                          "kind" : "Integer",
                          "value" : 3
                        }
                      ]
                    },
                    {
                      "kind" : "Return",
                      "name" : "{(r <= 0)? 2 : min(r,2)}",
                      "expression" : {
                        "kind" : "IfThenElse",
                        "condition" : {
                          "kind" : "LessThanEqual",
                          "lhs" : {
                            "kind" : "Name",
                            "name" : "r",
                            "i" : -1
                          },
                          "rhs" : {
                            "kind" : "Integer",
                            "value" : 0
                          }
                        },
                        "thenPart" : {
                          "kind" : "Integer",
                          "value" : 2
                        },
                        "elsePart" : {
                          "kind" : "Min",
                          "arguments" : [
                            {
                              "kind" : "Name",
                              "name" : "r",
                              "i" : -1
                            },
                            {
                              "kind" : "Integer",
                              "value" : 2
                            }
                          ],
                          "fun" : "min"
                        }
                      }
                    }
                  ],
                  "recursion" : "LEFT_RIGHT_REC",
                  "irecursion" : "NON_REC",
                  "associativity" : "UNDEFINED",
                  "associativityGroup" : {
                    "associativity" : "LEFT",
                    "precedenceLevel" : {
                      "lhs" : 2,
                      "rhs" : 2,
                      "undefined" : -1,
                      "hasPrefixUnary" : false,
                      "hasPostfixUnary" : false,
                      "hasPrefixUnaryBelow" : true,
                      "prefixUnaryBelow" : [
                        1
                      ],
                      "hasPostfixUnaryBelow" : false,
                      "index" : 3,
                      "containsAssociativityGroup" : true,
                      "assoc_lhs" : 2,
                      "assoc_rhs" : 2
                    },
                    "lhs" : 2,
                    "rhs" : 2,
                    "precedence" : 2
                  },
                  "precedence" : 2,
                  "precedenceLevel" : {
                    "lhs" : 2,
                    "rhs" : 2,
                    "undefined" : -1,
                    "hasPrefixUnary" : false,
                    "hasPostfixUnary" : false,
                    "hasPrefixUnaryBelow" : true,
                    "prefixUnaryBelow" : [
                      1
                    ],
                    "hasPostfixUnaryBelow" : false,
                    "index" : 3,
                    "containsAssociativityGroup" : true,
                    "assoc_lhs" : 2,
                    "assoc_rhs" : 2
                  }
                },
                "children" : [
                  {
                    "kind" : "NonterminalNode",
                    "rule" : {
                      "head" : {
                        "kind" : "Nonterminal",
                        "name" : "E",
                        "parameters" : [
                          "p"
                        ]
                      },
                      "body" : [
                        {
                          "kind" : "Terminal",
                          "name" : "'a'",
                          "nodeType" : "Literal",
                          "regex" : {
                            "kind" : "Char",
                            "val" : 97
                          }
                        },
                        {
                          "kind" : "Return",
                          "name" : "{0}",
                          "expression" : {
                            "kind" : "Integer",
                            "value" : 0
                          }
                        }
                      ],
                      "recursion" : "NON_REC",
                      "irecursion" : "NON_REC",
                      "associativity" : "UNDEFINED",
                      "precedence" : -1,
                      "precedenceLevel" : {
                        "lhs" : 1,
                        "rhs" : 1,
                        "undefined" : 1,
                        "hasPrefixUnary" : true,
                        "hasPostfixUnary" : false,
                        "hasPrefixUnaryBelow" : false,
                        "hasPostfixUnaryBelow" : false,
                        "index" : 2,
                        "containsAssociativityGroup" : false,
                        "assoc_lhs" : -1,
                        "assoc_rhs" : -1
                      }
                    },
                    "children" : [
                      {
                        "kind" : "KeywordTerminalNode",
                        "terminal" : {
                          "kind" : "Terminal",
                          "name" : "'a'",
                          "nodeType" : "Literal",
                          "regex" : {
                            "kind" : "Char",
                            "val" : 97
                          }
                        },
                        "start" : 5,
                        "end" : 6
                      }
                    ],
                    "start" : 5,
                    "end" : 6
                  },
                  {
                    "kind" : "KeywordTerminalNode",
                    "terminal" : {
                      "kind" : "Terminal",
                      "name" : "'+'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 43
                      }
                    },
                    "start" : 6,
                    "end" : 7
                  },
                  {
                    "kind" : "NonterminalNode",
                    "rule" : {
                      "head" : {
                        "kind" : "Nonterminal",
                        "name" : "E",
                        "parameters" : [
                          "p"
                        ]
                      },
                      "body" : [
                        {
                          "kind" : "Terminal",
                          "name" : "'-'",
                          "nodeType" : "Literal",
                          "regex" : {
                            "kind" : "Char",
                            "val" : 45
                          }
                        },
                        {
                          "kind" : "Nonterminal",
                          "name" : "E",
                          "arguments" : [
                            {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          ]
                        },
                        {
                          "kind" : "Return",
                          "name" : "{1}",
                          "expression" : {
                            "kind" : "Integer",
                            "value" : 1
                          }
                        }
                      ],
                      "recursion" : "RIGHT_REC",
                      "irecursion" : "NON_REC",
                      "associativity" : "UNDEFINED",
                      "precedence" : 1,
                      "precedenceLevel" : {
                        "lhs" : 1,
                        "rhs" : 1,
                        "undefined" : 1,
                        "hasPrefixUnary" : true,
                        "hasPostfixUnary" : false,
                        "hasPrefixUnaryBelow" : false,
                        "hasPostfixUnaryBelow" : false,
                        "index" : 2,
                        "containsAssociativityGroup" : false,
                        "assoc_lhs" : -1,
                        "assoc_rhs" : -1
                      }
                    },
                    "children" : [
                      {
                        "kind" : "KeywordTerminalNode",
                        "terminal" : {
                          "kind" : "Terminal",
                          "name" : "'-'",
                          "nodeType" : "Literal",
                          "regex" : {
                            "kind" : "Char",
                            "val" : 45
                          }
                        },
                        "start" : 7,
                        "end" : 8
                      },
                      {
                        "kind" : "NonterminalNode",
                        "rule" : {
                          "head" : {
                            "kind" : "Nonterminal",
                            "name" : "E",
                            "parameters" : [
                              "p"
                            ]
                          },
                          "body" : [
                            {
                              "kind" : "Nonterminal",
                              "name" : "E",
                              "preConditions" : [
                                {
                                  "kind" : "DataDependentCondition",
                                  "type" : "DATA_DEPENDENT",
                                  "expression" : {
                                    "kind" : "GreaterThanEqual",
                                    "lhs" : {
                                      "kind" : "Integer",
                                      "value" : 2
                                    },
                                    "rhs" : {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    }
                                  }
                                }
                              ],
                              "postConditions" : [
                                {
                                  "kind" : "DataDependentCondition",
                                  "type" : "DATA_DEPENDENT",
                                  "expression" : {
                                    "kind" : "Or",
                                    "lhs" : {
                                      "kind" : "LessThanEqual",
                                      "lhs" : {
                                        "kind" : "Name",
                                        "name" : "l",
                                        "i" : -1
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    },
                                    "rhs" : {
                                      "kind" : "GreaterThanEqual",
                                      "lhs" : {
                                        "kind" : "Name",
                                        "name" : "l",
                                        "i" : -1
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 2
                                      }
                                    }
                                  }
                                }
                              ],
                              "variable" : "l",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "p",
                                  "i" : -1
                                }
                              ]
                            },
                            {
                              "kind" : "Terminal",
                              "name" : "'+'",
                              "nodeType" : "Literal",
                              "regex" : {
                                "kind" : "Char",
                                "val" : 43
                              }
                            },
                            {
                              "kind" : "Nonterminal",
                              "name" : "E",
                              "variable" : "r",
                              "arguments" : [
                                {
                                  "kind" : "Integer",
                                  "value" : 3
                                }
                              ]
                            },
                            {
                              "kind" : "Return",
                              "name" : "{(r <= 0)? 2 : min(r,2)}",
                              "expression" : {
                                "kind" : "IfThenElse",
                                "condition" : {
                                  "kind" : "LessThanEqual",
                                  "lhs" : {
                                    "kind" : "Name",
                                    "name" : "r",
                                    "i" : -1
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                },
                                "thenPart" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                },
                                "elsePart" : {
                                  "kind" : "Min",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "r",
                                      "i" : -1
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 2
                                    }
                                  ],
                                  "fun" : "min"
                                }
                              }
                            }
                          ],
                          "recursion" : "LEFT_RIGHT_REC",
                          "irecursion" : "NON_REC",
                          "associativity" : "UNDEFINED",
                          "associativityGroup" : {
                            "associativity" : "LEFT",
                            "precedenceLevel" : {
                              "lhs" : 2,
                              "rhs" : 2,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : true,
                              "prefixUnaryBelow" : [
                                1
                              ],
                              "hasPostfixUnaryBelow" : false,
                              "index" : 3,
                              "containsAssociativityGroup" : true,
                              "assoc_lhs" : 2,
                              "assoc_rhs" : 2
                            },
                            "lhs" : 2,
                            "rhs" : 2,
                            "precedence" : 2
                          },
                          "precedence" : 2,
                          "precedenceLevel" : {
                            "lhs" : 2,
                            "rhs" : 2,
                            "undefined" : -1,
                            "hasPrefixUnary" : false,
                            "hasPostfixUnary" : false,
                            "hasPrefixUnaryBelow" : true,
                            "prefixUnaryBelow" : [
                              1
                            ],
                            "hasPostfixUnaryBelow" : false,
                            "index" : 3,
                            "containsAssociativityGroup" : true,
                            "assoc_lhs" : 2,
                            "assoc_rhs" : 2
                          }
                        },
                        "children" : [
                          {
                            "kind" : "NonterminalNode",
                            "rule" : {
                              "head" : {
                                "kind" : "Nonterminal",
                                "name" : "E",
                                "parameters" : [
                                  "p"
                                ]
                              },
                              "body" : [
                                {
                                  "kind" : "Nonterminal",
                                  "name" : "E",
                                  "preConditions" : [
                                    {
                                      "kind" : "DataDependentCondition",
                                      "type" : "DATA_DEPENDENT",
                                      "expression" : {
                                        "kind" : "GreaterThanEqual",
                                        "lhs" : {
                                          "kind" : "Integer",
                                          "value" : 2
                                        },
                                        "rhs" : {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        }
                                      }
                                    }
                                  ],
                                  "postConditions" : [
                                    {
                                      "kind" : "DataDependentCondition",
                                      "type" : "DATA_DEPENDENT",
                                      "expression" : {
                                        "kind" : "Or",
                                        "lhs" : {
                                          "kind" : "LessThanEqual",
                                          "lhs" : {
                                            "kind" : "Name",
                                            "name" : "l",
                                            "i" : -1
                                          },
                                          "rhs" : {
                                            "kind" : "Integer",
                                            "value" : 0
                                          }
                                        },
                                        "rhs" : {
                                          "kind" : "GreaterThanEqual",
                                          "lhs" : {
                                            "kind" : "Name",
                                            "name" : "l",
                                            "i" : -1
                                          },
                                          "rhs" : {
                                            "kind" : "Integer",
                                            "value" : 2
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "variable" : "l",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    }
                                  ]
                                },
                                {
                                  "kind" : "Terminal",
                                  "name" : "'-'",
                                  "nodeType" : "Literal",
                                  "regex" : {
                                    "kind" : "Char",
                                    "val" : 45
                                  }
                                },
                                {
                                  "kind" : "Nonterminal",
                                  "name" : "E",
                                  "variable" : "r",
                                  "arguments" : [
                                    {
                                      "kind" : "Integer",
                                      "value" : 3
                                    }
                                  ]
                                },
                                {
                                  "kind" : "Return",
                                  "name" : "{(r <= 0)? 2 : min(r,2)}",
                                  "expression" : {
                                    "kind" : "IfThenElse",
                                    "condition" : {
                                      "kind" : "LessThanEqual",
                                      "lhs" : {
                                        "kind" : "Name",
                                        "name" : "r",
                                        "i" : -1
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    },
                                    "thenPart" : {
                                      "kind" : "Integer",
                                      "value" : 2
                                    },
                                    "elsePart" : {
                                      "kind" : "Min",
                                      "arguments" : [
                                        {
                                          "kind" : "Name",
                                          "name" : "r",
                                          "i" : -1
                                        },
                                        {
                                          "kind" : "Integer",
                                          "value" : 2
                                        }
                                      ],
                                      "fun" : "min"
                                    }
                                  }
                                }
                              ],
                              "recursion" : "LEFT_RIGHT_REC",
                              "irecursion" : "NON_REC",
                              "associativity" : "UNDEFINED",
                              "associativityGroup" : {
                                "associativity" : "LEFT",
                                "precedenceLevel" : {
                                  "lhs" : 2,
                                  "rhs" : 2,
                                  "undefined" : -1,
                                  "hasPrefixUnary" : false,
                                  "hasPostfixUnary" : false,
                                  "hasPrefixUnaryBelow" : true,
                                  "prefixUnaryBelow" : [
                                    1
                                  ],
                                  "hasPostfixUnaryBelow" : false,
                                  "index" : 3,
                                  "containsAssociativityGroup" : true,
                                  "assoc_lhs" : 2,
                                  "assoc_rhs" : 2
                                },
                                "lhs" : 2,
                                "rhs" : 2,
                                "precedence" : 2
                              },
                              "precedence" : 2,
                              "precedenceLevel" : {
                                "lhs" : 2,
                                "rhs" : 2,
                                "undefined" : -1,
                                "hasPrefixUnary" : false,
                                "hasPostfixUnary" : false,
                                "hasPrefixUnaryBelow" : true,
                                "prefixUnaryBelow" : [
                                  1
                                ],
                                "hasPostfixUnaryBelow" : false,
                                "index" : 3,
                                "containsAssociativityGroup" : true,
                                "assoc_lhs" : 2,
                                "assoc_rhs" : 2
                              }
                            },
                            "children" : [
                              {
                                "kind" : "NonterminalNode",
                                "rule" : {
                                  "head" : {
                                    "kind" : "Nonterminal",
                                    "name" : "E",
                                    "parameters" : [
                                      "p"
                                    ]
                                  },
                                  "body" : [
                                    {
                                      "kind" : "Nonterminal",
                                      "name" : "E",
                                      "preConditions" : [
                                        {
                                          "kind" : "DataDependentCondition",
                                          "type" : "DATA_DEPENDENT",
                                          "expression" : {
                                            "kind" : "GreaterThanEqual",
                                            "lhs" : {
                                              "kind" : "Integer",
                                              "value" : 2
                                            },
                                            "rhs" : {
                                              "kind" : "Name",
                                              "name" : "p",
                                              "i" : -1
                                            }
                                          }
                                        }
                                      ],
                                      "postConditions" : [
                                        {
                                          "kind" : "DataDependentCondition",
                                          "type" : "DATA_DEPENDENT",
                                          "expression" : {
                                            "kind" : "Or",
                                            "lhs" : {
                                              "kind" : "LessThanEqual",
                                              "lhs" : {
                                                "kind" : "Name",
                                                "name" : "l",
                                                "i" : -1
                                              },
                                              "rhs" : {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            },
                                            "rhs" : {
                                              "kind" : "GreaterThanEqual",
                                              "lhs" : {
                                                "kind" : "Name",
                                                "name" : "l",
                                                "i" : -1
                                              },
                                              "rhs" : {
                                                "kind" : "Integer",
                                                "value" : 2
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "variable" : "l",
                                      "arguments" : [
                                        {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        }
                                      ]
                                    },
                                    {
                                      "kind" : "Terminal",
                                      "name" : "'-'",
                                      "nodeType" : "Literal",
                                      "regex" : {
                                        "kind" : "Char",
                                        "val" : 45
                                      }
                                    },
                                    {
                                      "kind" : "Nonterminal",
                                      "name" : "E",
                                      "variable" : "r",
                                      "arguments" : [
                                        {
                                          "kind" : "Integer",
                                          "value" : 3
                                        }
                                      ]
                                    },
                                    {
                                      "kind" : "Return",
                                      "name" : "{(r <= 0)? 2 : min(r,2)}",
                                      "expression" : {
                                        "kind" : "IfThenElse",
                                        "condition" : {
                                          "kind" : "LessThanEqual",
                                          "lhs" : {
                                            "kind" : "Name",
                                            "name" : "r",
                                            "i" : -1
                                          },
                                          "rhs" : {
                                            "kind" : "Integer",
                                            "value" : 0
                                          }
                                        },
                                        "thenPart" : {
                                          "kind" : "Integer",
                                          "value" : 2
                                        },
                                        "elsePart" : {
                                          "kind" : "Min",
                                          "arguments" : [
                                            {
                                              "kind" : "Name",
                                              "name" : "r",
                                              "i" : -1
                                            },
                                            {
                                              "kind" : "Integer",
                                              "value" : 2
                                            }
                                          ],
                                          "fun" : "min"
                                        }
                                      }
                                    }
                                  ],
                                  "recursion" : "LEFT_RIGHT_REC",
                                  "irecursion" : "NON_REC",
                                  "associativity" : "UNDEFINED",
                                  "associativityGroup" : {
                                    "associativity" : "LEFT",
                                    "precedenceLevel" : {
                                      "lhs" : 2,
                                      "rhs" : 2,
                                      "undefined" : -1,
                                      "hasPrefixUnary" : false,
                                      "hasPostfixUnary" : false,
                                      "hasPrefixUnaryBelow" : true,
                                      "prefixUnaryBelow" : [
                                        1
                                      ],
                                      "hasPostfixUnaryBelow" : false,
                                      "index" : 3,
                                      "containsAssociativityGroup" : true,
                                      "assoc_lhs" : 2,
                                      "assoc_rhs" : 2
                                    },
                                    "lhs" : 2,
                                    "rhs" : 2,
                                    "precedence" : 2
                                  },
                                  "precedence" : 2,
                                  "precedenceLevel" : {
                                    "lhs" : 2,
                                    "rhs" : 2,
                                    "undefined" : -1,
                                    "hasPrefixUnary" : false,
                                    "hasPostfixUnary" : false,
                                    "hasPrefixUnaryBelow" : true,
                                    "prefixUnaryBelow" : [
                                      1
                                    ],
                                    "hasPostfixUnaryBelow" : false,
                                    "index" : 3,
                                    "containsAssociativityGroup" : true,
                                    "assoc_lhs" : 2,
                                    "assoc_rhs" : 2
                                  }
                                },
                                "children" : [
                                  {
                                    "kind" : "NonterminalNode",
                                    "rule" : {
                                      "head" : {
                                        "kind" : "Nonterminal",
                                        "name" : "E",
                                        "parameters" : [
                                          "p"
                                        ]
                                      },
                                      "body" : [
                                        {
                                          "kind" : "Nonterminal",
                                          "name" : "E",
                                          "preConditions" : [
                                            {
                                              "kind" : "DataDependentCondition",
                                              "type" : "DATA_DEPENDENT",
                                              "expression" : {
                                                "kind" : "GreaterThanEqual",
                                                "lhs" : {
                                                  "kind" : "Integer",
                                                  "value" : 2
                                                },
                                                "rhs" : {
                                                  "kind" : "Name",
                                                  "name" : "p",
                                                  "i" : -1
                                                }
                                              }
                                            }
                                          ],
                                          "postConditions" : [
                                            {
                                              "kind" : "DataDependentCondition",
                                              "type" : "DATA_DEPENDENT",
                                              "expression" : {
                                                "kind" : "Or",
                                                "lhs" : {
                                                  "kind" : "LessThanEqual",
                                                  "lhs" : {
                                                    "kind" : "Name",
                                                    "name" : "l",
                                                    "i" : -1
                                                  },
                                                  "rhs" : {
                                                    "kind" : "Integer",
                                                    "value" : 0
                                                  }
                                                },
                                                "rhs" : {
                                                  "kind" : "GreaterThanEqual",
                                                  "lhs" : {
                                                    "kind" : "Name",
                                                    "name" : "l",
                                                    "i" : -1
                                                  },
                                                  "rhs" : {
                                                    "kind" : "Integer",
                                                    "value" : 2
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "variable" : "l",
                                          "arguments" : [
                                            {
                                              "kind" : "Name",
                                              "name" : "p",
                                              "i" : -1
                                            }
                                          ]
                                        },
                                        {
                                          "kind" : "Terminal",
                                          "name" : "'+'",
                                          "nodeType" : "Literal",
                                          "regex" : {
                                            "kind" : "Char",
                                            "val" : 43
                                          }
                                        },
                                        {
                                          "kind" : "Nonterminal",
                                          "name" : "E",
                                          "variable" : "r",
                                          "arguments" : [
                                            {
                                              "kind" : "Integer",
                                              "value" : 3
                                            }
                                          ]
                                        },
                                        {
                                          "kind" : "Return",
                                          "name" : "{(r <= 0)? 2 : min(r,2)}",
                                          "expression" : {
                                            "kind" : "IfThenElse",
                                            "condition" : {
                                              "kind" : "LessThanEqual",
                                              "lhs" : {
                                                "kind" : "Name",
                                                "name" : "r",
                                                "i" : -1
                                              },
                                              "rhs" : {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            },
                                            "thenPart" : {
                                              "kind" : "Integer",
                                              "value" : 2
                                            },
                                            "elsePart" : {
                                              "kind" : "Min",
                                              "arguments" : [
                                                {
                                                  "kind" : "Name",
                                                  "name" : "r",
                                                  "i" : -1
                                                },
                                                {
                                                  "kind" : "Integer",
                                                  "value" : 2
                                                }
                                              ],
                                              "fun" : "min"
                                            }
                                          }
                                        }
                                      ],
                                      "recursion" : "LEFT_RIGHT_REC",
                                      "irecursion" : "NON_REC",
                                      "associativity" : "UNDEFINED",
                                      "associativityGroup" : {
                                        "associativity" : "LEFT",
                                        "precedenceLevel" : {
                                          "lhs" : 2,
                                          "rhs" : 2,
                                          "undefined" : -1,
                                          "hasPrefixUnary" : false,
                                          "hasPostfixUnary" : false,
                                          "hasPrefixUnaryBelow" : true,
                                          "prefixUnaryBelow" : [
                                            1
                                          ],
                                          "hasPostfixUnaryBelow" : false,
                                          "index" : 3,
                                          "containsAssociativityGroup" : true,
                                          "assoc_lhs" : 2,
                                          "assoc_rhs" : 2
                                        },
                                        "lhs" : 2,
                                        "rhs" : 2,
                                        "precedence" : 2
                                      },
                                      "precedence" : 2,
                                      "precedenceLevel" : {
                                        "lhs" : 2,
                                        "rhs" : 2,
                                        "undefined" : -1,
                                        "hasPrefixUnary" : false,
                                        "hasPostfixUnary" : false,
                                        "hasPrefixUnaryBelow" : true,
                                        "prefixUnaryBelow" : [
                                          1
                                        ],
                                        "hasPostfixUnaryBelow" : false,
                                        "index" : 3,
                                        "containsAssociativityGroup" : true,
                                        "assoc_lhs" : 2,
                                        "assoc_rhs" : 2
                                      }
                                    },
                                    "children" : [
                                      {
                                        "kind" : "NonterminalNode",
                                        "rule" : {
                                          "head" : {
                                            "kind" : "Nonterminal",
                                            "name" : "E",
                                            "parameters" : [
                                              "p"
                                            ]
                                          },
                                          "body" : [
                                            {
                                              "kind" : "Terminal",
                                              "name" : "'a'",
                                              "nodeType" : "Literal",
                                              "regex" : {
                                                "kind" : "Char",
                                                "val" : 97
                                              }
                                            },
                                            {
                                              "kind" : "Return",
                                              "name" : "{0}",
                                              "expression" : {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            }
                                          ],
                                          "recursion" : "NON_REC",
                                          "irecursion" : "NON_REC",
                                          "associativity" : "UNDEFINED",
                                          "precedence" : -1,
                                          "precedenceLevel" : {
                                            "lhs" : 1,
                                            "rhs" : 1,
                                            "undefined" : 1,
                                            "hasPrefixUnary" : true,
                                            "hasPostfixUnary" : false,
                                            "hasPrefixUnaryBelow" : false,
                                            "hasPostfixUnaryBelow" : false,
                                            "index" : 2,
                                            "containsAssociativityGroup" : false,
                                            "assoc_lhs" : -1,
                                            "assoc_rhs" : -1
                                          }
                                        },
                                        "children" : [
                                          {
                                            "kind" : "KeywordTerminalNode",
                                            "terminal" : {
                                              "kind" : "Terminal",
                                              "name" : "'a'",
                                              "nodeType" : "Literal",
                                              "regex" : {
                                                "kind" : "Char",
                                                "val" : 97
                                              }
                                            },
                                            "start" : 8,
                                            "end" : 9
                                          }
                                        ],
                                        "start" : 8,
                                        "end" : 9
                                      },
                                      {
                                        "kind" : "KeywordTerminalNode",
                                        "terminal" : {
                                          "kind" : "Terminal",
                                          "name" : "'+'",
                                          "nodeType" : "Literal",
                                          "regex" : {
                                            "kind" : "Char",
                                            "val" : 43
                                          }
                                        },
                                        "start" : 9,
                                        "end" : 10
                                      },
                                      {
                                        "kind" : "NonterminalNode",
                                        "rule" : {
                                          "head" : {
                                            "kind" : "Nonterminal",
                                            "name" : "E",
                                            "parameters" : [
                                              "p"
                                            ]
                                          },
                                          "body" : [
                                            {
                                              "kind" : "Terminal",
                                              "name" : "'a'",
                                              "nodeType" : "Literal",
                                              "regex" : {
                                                "kind" : "Char",
                                                "val" : 97
                                              }
                                            },
                                            {
                                              "kind" : "Return",
                                              "name" : "{0}",
                                              "expression" : {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            }
                                          ],
                                          "recursion" : "NON_REC",
                                          "irecursion" : "NON_REC",
                                          "associativity" : "UNDEFINED",
                                          "precedence" : -1,
                                          "precedenceLevel" : {
                                            "lhs" : 1,
                                            "rhs" : 1,
                                            "undefined" : 1,
                                            "hasPrefixUnary" : true,
                                            "hasPostfixUnary" : false,
                                            "hasPrefixUnaryBelow" : false,
                                            "hasPostfixUnaryBelow" : false,
                                            "index" : 2,
                                            "containsAssociativityGroup" : false,
                                            "assoc_lhs" : -1,
                                            "assoc_rhs" : -1
                                          }
                                        },
                                        "children" : [
                                          {
                                            "kind" : "KeywordTerminalNode",
                                            "terminal" : {
                                              "kind" : "Terminal",
                                              "name" : "'a'",
                                              "nodeType" : "Literal",
                                              "regex" : {
                                                "kind" : "Char",
                                                "val" : 97
                                              }
                                            },
                                            "start" : 10,
                                            "end" : 11
                                          }
                                        ],
                                        "start" : 10,
                                        "end" : 11
                                      }
                                    ],
                                    "start" : 8,
                                    "end" : 11
                                  },
                                  {
                                    "kind" : "KeywordTerminalNode",
                                    "terminal" : {
                                      "kind" : "Terminal",
                                      "name" : "'-'",
                                      "nodeType" : "Literal",
                                      "regex" : {
                                        "kind" : "Char",
                                        "val" : 45
                                      }
                                    },
                                    "start" : 11,
                                    "end" : 12
                                  },
                                  {
                                    "kind" : "NonterminalNode",
                                    "rule" : {
                                      "head" : {
                                        "kind" : "Nonterminal",
                                        "name" : "E",
                                        "parameters" : [
                                          "p"
                                        ]
                                      },
                                      "body" : [
                                        {
                                          "kind" : "Terminal",
                                          "name" : "'a'",
                                          "nodeType" : "Literal",
                                          "regex" : {
                                            "kind" : "Char",
                                            "val" : 97
                                          }
                                        },
                                        {
                                          "kind" : "Return",
                                          "name" : "{0}",
                                          "expression" : {
                                            "kind" : "Integer",
                                            "value" : 0
                                          }
                                        }
                                      ],
                                      "recursion" : "NON_REC",
                                      "irecursion" : "NON_REC",
                                      "associativity" : "UNDEFINED",
                                      "precedence" : -1,
                                      "precedenceLevel" : {
                                        "lhs" : 1,
                                        "rhs" : 1,
                                        "undefined" : 1,
                                        "hasPrefixUnary" : true,
                                        "hasPostfixUnary" : false,
                                        "hasPrefixUnaryBelow" : false,
                                        "hasPostfixUnaryBelow" : false,
                                        "index" : 2,
                                        "containsAssociativityGroup" : false,
                                        "assoc_lhs" : -1,
                                        "assoc_rhs" : -1
                                      }
                                    },
                                    "children" : [
                                      {
                                        "kind" : "KeywordTerminalNode",
                                        "terminal" : {
                                          "kind" : "Terminal",
                                          "name" : "'a'",
                                          "nodeType" : "Literal",
                                          "regex" : {
                                            "kind" : "Char",
                                            "val" : 97
                                          }
                                        },
                                        "start" : 12,
                                        "end" : 13
                                      }
                                    ],
                                    "start" : 12,
                                    "end" : 13
                                  }
                                ],
                                "start" : 8,
                                "end" : 13
                              },
                              {
                                "kind" : "KeywordTerminalNode",
                                "terminal" : {
                                  "kind" : "Terminal",
                                  "name" : "'-'",
                                  "nodeType" : "Literal",
                                  "regex" : {
                                    "kind" : "Char",
                                    "val" : 45
                                  }
                                },
                                "start" : 13,
                                "end" : 14
                              },
                              {
                                "kind" : "NonterminalNode",
                                "rule" : {
                                  "head" : {
                                    "kind" : "Nonterminal",
                                    "name" : "E",
                                    "parameters" : [
                                      "p"
                                    ]
                                  },
                                  "body" : [
                                    {
                                      "kind" : "Terminal",
                                      "name" : "'a'",
                                      "nodeType" : "Literal",
                                      "regex" : {
                                        "kind" : "Char",
                                        "val" : 97
                                      }
                                    },
                                    {
                                      "kind" : "Return",
                                      "name" : "{0}",
                                      "expression" : {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    }
                                  ],
                                  "recursion" : "NON_REC",
                                  "irecursion" : "NON_REC",
                                  "associativity" : "UNDEFINED",
                                  "precedence" : -1,
                                  "precedenceLevel" : {
                                    "lhs" : 1,
                                    "rhs" : 1,
                                    "undefined" : 1,
                                    "hasPrefixUnary" : true,
                                    "hasPostfixUnary" : false,
                                    "hasPrefixUnaryBelow" : false,
                                    "hasPostfixUnaryBelow" : false,
                                    "index" : 2,
                                    "containsAssociativityGroup" : false,
                                    "assoc_lhs" : -1,
                                    "assoc_rhs" : -1
                                  }
                                },
                                "children" : [
                                  {
                                    "kind" : "KeywordTerminalNode",
                                    "terminal" : {
                                      "kind" : "Terminal",
                                      "name" : "'a'",
                                      "nodeType" : "Literal",
                                      "regex" : {
                                        "kind" : "Char",
                                        "val" : 97
                                      }
                                    },
                                    "start" : 14,
                                    "end" : 15
                                  }
                                ],
                                "start" : 14,
                                "end" : 15
                              }
                            ],
                            "start" : 8,
                            "end" : 15
                          },
                          {
                            "kind" : "KeywordTerminalNode",
                            "terminal" : {
                              "kind" : "Terminal",
                              "name" : "'+'",
                              "nodeType" : "Literal",
                              "regex" : {
                                "kind" : "Char",
                                "val" : 43
                              }
                            },
                            "start" : 15,
                            "end" : 16
                          },
                          {
                            "kind" : "NonterminalNode",
                            "rule" : {
                              "head" : {
                                "kind" : "Nonterminal",
                                "name" : "E",
                                "parameters" : [
                                  "p"
                                ]
                              },
                              "body" : [
                                {
                                  "kind" : "Terminal",
                                  "name" : "'a'",
                                  "nodeType" : "Literal",
                                  "regex" : {
                                    "kind" : "Char",
                                    "val" : 97
                                  }
                                },
                                {
                                  "kind" : "Return",
                                  "name" : "{0}",
                                  "expression" : {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                }
                              ],
                              "recursion" : "NON_REC",
                              "irecursion" : "NON_REC",
                              "associativity" : "UNDEFINED",
                              "precedence" : -1,
                              "precedenceLevel" : {
                                "lhs" : 1,
                                "rhs" : 1,
                                "undefined" : 1,
                                "hasPrefixUnary" : true,
                                "hasPostfixUnary" : false,
                                "hasPrefixUnaryBelow" : false,
                                "hasPostfixUnaryBelow" : false,
                                "index" : 2,
                                "containsAssociativityGroup" : false,
                                "assoc_lhs" : -1,
                                "assoc_rhs" : -1
                              }
                            },
                            "children" : [
                              {
                                "kind" : "KeywordTerminalNode",
                                "terminal" : {
                                  "kind" : "Terminal",
                                  "name" : "'a'",
                                  "nodeType" : "Literal",
                                  "regex" : {
                                    "kind" : "Char",
                                    "val" : 97
                                  }
                                },
                                "start" : 16,
                                "end" : 17
                              }
                            ],
                            "start" : 16,
                            "end" : 17
                          }
                        ],
                        "start" : 8,
                        "end" : 17
                      }
                    ],
                    "start" : 7,
                    "end" : 17
                  }
                ],
                "start" : 5,
                "end" : 17
              }
            ],
            "start" : 4,
            "end" : 17
          }
        ],
        "start" : 0,
        "end" : 17
      }
    ],
    "start" : 0,
    "end" : 17
  },
  "start" : 0,
  "end" : 17
}