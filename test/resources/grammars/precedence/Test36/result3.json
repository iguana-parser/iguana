{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "startSymbol" : "S"
  },
  "children" : [
    {
      "kind" : "NonterminalNode",
      "rule" : {
        "head" : {
          "kind" : "Nonterminal",
          "name" : "S"
        },
        "body" : [
          {
            "kind" : "Nonterminal",
            "name" : "E",
            "arguments" : [
              {
                "kind" : "Tuple",
                "elements" : [
                  {
                    "kind" : "Integer",
                    "value" : 0
                  },
                  {
                    "kind" : "Integer",
                    "value" : 0
                  }
                ],
                "length" : 2
              }
            ]
          }
        ],
        "recursion" : "NON_REC",
        "irecursion" : "NON_REC",
        "associativity" : "UNDEFINED",
        "precedence" : -1,
        "precedenceLevel" : {
          "lhs" : 1,
          "rhs" : 1,
          "undefined" : -1,
          "hasPrefixUnary" : false,
          "hasPostfixUnary" : false,
          "hasPrefixUnaryBelow" : false,
          "hasPostfixUnaryBelow" : false,
          "index" : 1,
          "containsAssociativityGroup" : false,
          "assoc_lhs" : -1,
          "assoc_rhs" : -1
        }
      },
      "children" : [
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "E",
              "parameters" : [
                "p"
              ]
            },
            "body" : [
              {
                "kind" : "Nonterminal",
                "name" : "E",
                "preConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "And",
                      "lhs" : {
                        "kind" : "GreaterThanEqual",
                        "lhs" : {
                          "kind" : "Integer",
                          "value" : 2
                        },
                        "rhs" : {
                          "kind" : "Get",
                          "arg1" : {
                            "kind" : "Name",
                            "name" : "p",
                            "i" : -1
                          },
                          "arg2" : 0,
                          "fun" : "get",
                          "arguments" : [
                            {
                              "kind" : "Name",
                              "name" : "p",
                              "i" : -1
                            },
                            {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          ]
                        }
                      },
                      "rhs" : {
                        "kind" : "Not",
                        "exp" : {
                          "kind" : "And",
                          "lhs" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Integer",
                              "value" : 2
                            },
                            "rhs" : {
                              "kind" : "Get",
                              "arg1" : {
                                "kind" : "Name",
                                "name" : "p",
                                "i" : -1
                              },
                              "arg2" : 1,
                              "fun" : "get",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "p",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              ]
                            }
                          },
                          "rhs" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Get",
                              "arg1" : {
                                "kind" : "Name",
                                "name" : "p",
                                "i" : -1
                              },
                              "arg2" : 1,
                              "fun" : "get",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "p",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              ]
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 1
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "postConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "Or",
                      "lhs" : {
                        "kind" : "LessThanEqual",
                        "lhs" : {
                          "kind" : "Get",
                          "arg1" : {
                            "kind" : "Name",
                            "name" : "l",
                            "i" : -1
                          },
                          "arg2" : 0,
                          "fun" : "get",
                          "arguments" : [
                            {
                              "kind" : "Name",
                              "name" : "l",
                              "i" : -1
                            },
                            {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          ]
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 0
                        }
                      },
                      "rhs" : {
                        "kind" : "GreaterThanEqual",
                        "lhs" : {
                          "kind" : "Get",
                          "arg1" : {
                            "kind" : "Name",
                            "name" : "l",
                            "i" : -1
                          },
                          "arg2" : 0,
                          "fun" : "get",
                          "arguments" : [
                            {
                              "kind" : "Name",
                              "name" : "l",
                              "i" : -1
                            },
                            {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          ]
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 1
                        }
                      }
                    }
                  }
                ],
                "variable" : "l",
                "arguments" : [
                  {
                    "kind" : "Tuple",
                    "elements" : [
                      {
                        "kind" : "Get",
                        "arg1" : {
                          "kind" : "Name",
                          "name" : "p",
                          "i" : -1
                        },
                        "arg2" : 0,
                        "fun" : "get",
                        "arguments" : [
                          {
                            "kind" : "Name",
                            "name" : "p",
                            "i" : -1
                          },
                          {
                            "kind" : "Integer",
                            "value" : 0
                          }
                        ]
                      },
                      {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    ],
                    "length" : 2
                  }
                ]
              },
              {
                "kind" : "Terminal",
                "name" : "'+'",
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "val" : 43
                }
              },
              {
                "kind" : "Nonterminal",
                "name" : "E",
                "arguments" : [
                  {
                    "kind" : "Tuple",
                    "elements" : [
                      {
                        "kind" : "Integer",
                        "value" : 2
                      },
                      {
                        "kind" : "Integer",
                        "value" : 2
                      }
                    ],
                    "length" : 2
                  }
                ]
              },
              {
                "kind" : "Return",
                "name" : "{(1,0)}",
                "expression" : {
                  "kind" : "Tuple",
                  "elements" : [
                    {
                      "kind" : "Integer",
                      "value" : 1
                    },
                    {
                      "kind" : "Integer",
                      "value" : 0
                    }
                  ],
                  "length" : 2
                }
              }
            ],
            "recursion" : "LEFT_RIGHT_REC",
            "irecursion" : "NON_REC",
            "associativity" : "LEFT",
            "associativityGroup" : {
              "associativity" : "LEFT",
              "precedenceLevel" : {
                "lhs" : 1,
                "rhs" : 2,
                "undefined" : -1,
                "hasPrefixUnary" : false,
                "hasPostfixUnary" : false,
                "hasPrefixUnaryBelow" : false,
                "hasPostfixUnaryBelow" : false,
                "index" : 3,
                "containsAssociativityGroup" : true,
                "assoc_lhs" : 1,
                "assoc_rhs" : 2
              },
              "lhs" : 1,
              "rhs" : 2,
              "precedence" : 2,
              "map" : {
                "1" : "RIGHT"
              }
            },
            "precedence" : 2,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 2,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "hasPostfixUnaryBelow" : false,
              "index" : 3,
              "containsAssociativityGroup" : true,
              "assoc_lhs" : 1,
              "assoc_rhs" : 2
            }
          },
          "children" : [
            {
              "kind" : "NonterminalNode",
              "rule" : {
                "head" : {
                  "kind" : "Nonterminal",
                  "name" : "E",
                  "parameters" : [
                    "p"
                  ]
                },
                "body" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "E",
                    "preConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "And",
                          "lhs" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Integer",
                              "value" : 2
                            },
                            "rhs" : {
                              "kind" : "Get",
                              "arg1" : {
                                "kind" : "Name",
                                "name" : "p",
                                "i" : -1
                              },
                              "arg2" : 0,
                              "fun" : "get",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "p",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              ]
                            }
                          },
                          "rhs" : {
                            "kind" : "Not",
                            "exp" : {
                              "kind" : "And",
                              "lhs" : {
                                "kind" : "GreaterThanEqual",
                                "lhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                },
                                "rhs" : {
                                  "kind" : "Get",
                                  "arg1" : {
                                    "kind" : "Name",
                                    "name" : "p",
                                    "i" : -1
                                  },
                                  "arg2" : 1,
                                  "fun" : "get",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 1
                                    }
                                  ]
                                }
                              },
                              "rhs" : {
                                "kind" : "GreaterThanEqual",
                                "lhs" : {
                                  "kind" : "Get",
                                  "arg1" : {
                                    "kind" : "Name",
                                    "name" : "p",
                                    "i" : -1
                                  },
                                  "arg2" : 1,
                                  "fun" : "get",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 1
                                    }
                                  ]
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "postConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "Or",
                          "lhs" : {
                            "kind" : "LessThanEqual",
                            "lhs" : {
                              "kind" : "Get",
                              "arg1" : {
                                "kind" : "Name",
                                "name" : "l",
                                "i" : -1
                              },
                              "arg2" : 0,
                              "fun" : "get",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "l",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              ]
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          },
                          "rhs" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Get",
                              "arg1" : {
                                "kind" : "Name",
                                "name" : "l",
                                "i" : -1
                              },
                              "arg2" : 0,
                              "fun" : "get",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "l",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              ]
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 1
                            }
                          }
                        }
                      }
                    ],
                    "variable" : "l",
                    "arguments" : [
                      {
                        "kind" : "Tuple",
                        "elements" : [
                          {
                            "kind" : "Get",
                            "arg1" : {
                              "kind" : "Name",
                              "name" : "p",
                              "i" : -1
                            },
                            "arg2" : 0,
                            "fun" : "get",
                            "arguments" : [
                              {
                                "kind" : "Name",
                                "name" : "p",
                                "i" : -1
                              },
                              {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            ]
                          },
                          {
                            "kind" : "Integer",
                            "value" : 0
                          }
                        ],
                        "length" : 2
                      }
                    ]
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "'-'",
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 45
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "E",
                    "arguments" : [
                      {
                        "kind" : "Tuple",
                        "elements" : [
                          {
                            "kind" : "Integer",
                            "value" : 2
                          },
                          {
                            "kind" : "Integer",
                            "value" : 2
                          }
                        ],
                        "length" : 2
                      }
                    ]
                  },
                  {
                    "kind" : "Return",
                    "name" : "{(1,0)}",
                    "expression" : {
                      "kind" : "Tuple",
                      "elements" : [
                        {
                          "kind" : "Integer",
                          "value" : 1
                        },
                        {
                          "kind" : "Integer",
                          "value" : 0
                        }
                      ],
                      "length" : 2
                    }
                  }
                ],
                "recursion" : "LEFT_RIGHT_REC",
                "irecursion" : "NON_REC",
                "associativity" : "LEFT",
                "associativityGroup" : {
                  "associativity" : "LEFT",
                  "precedenceLevel" : {
                    "lhs" : 1,
                    "rhs" : 2,
                    "undefined" : -1,
                    "hasPrefixUnary" : false,
                    "hasPostfixUnary" : false,
                    "hasPrefixUnaryBelow" : false,
                    "hasPostfixUnaryBelow" : false,
                    "index" : 3,
                    "containsAssociativityGroup" : true,
                    "assoc_lhs" : 1,
                    "assoc_rhs" : 2
                  },
                  "lhs" : 1,
                  "rhs" : 2,
                  "precedence" : 2,
                  "map" : {
                    "1" : "RIGHT"
                  }
                },
                "precedence" : 2,
                "precedenceLevel" : {
                  "lhs" : 1,
                  "rhs" : 2,
                  "undefined" : -1,
                  "hasPrefixUnary" : false,
                  "hasPostfixUnary" : false,
                  "hasPrefixUnaryBelow" : false,
                  "hasPostfixUnaryBelow" : false,
                  "index" : 3,
                  "containsAssociativityGroup" : true,
                  "assoc_lhs" : 1,
                  "assoc_rhs" : 2
                }
              },
              "children" : [
                {
                  "kind" : "NonterminalNode",
                  "rule" : {
                    "head" : {
                      "kind" : "Nonterminal",
                      "name" : "E",
                      "parameters" : [
                        "p"
                      ]
                    },
                    "body" : [
                      {
                        "kind" : "Nonterminal",
                        "name" : "E",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "And",
                              "lhs" : {
                                "kind" : "GreaterThanEqual",
                                "lhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                },
                                "rhs" : {
                                  "kind" : "Get",
                                  "arg1" : {
                                    "kind" : "Name",
                                    "name" : "p",
                                    "i" : -1
                                  },
                                  "arg2" : 0,
                                  "fun" : "get",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 0
                                    }
                                  ]
                                }
                              },
                              "rhs" : {
                                "kind" : "Or",
                                "lhs" : {
                                  "kind" : "Equal",
                                  "lhs" : {
                                    "kind" : "Get",
                                    "arg1" : {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    },
                                    "arg2" : 1,
                                    "fun" : "get",
                                    "arguments" : [
                                      {
                                        "kind" : "Name",
                                        "name" : "p",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "Integer",
                                        "value" : 1
                                      }
                                    ]
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 1
                                  }
                                },
                                "rhs" : {
                                  "kind" : "Not",
                                  "exp" : {
                                    "kind" : "And",
                                    "lhs" : {
                                      "kind" : "GreaterThanEqual",
                                      "lhs" : {
                                        "kind" : "Integer",
                                        "value" : 2
                                      },
                                      "rhs" : {
                                        "kind" : "Get",
                                        "arg1" : {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        },
                                        "arg2" : 1,
                                        "fun" : "get",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "p",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 1
                                          }
                                        ]
                                      }
                                    },
                                    "rhs" : {
                                      "kind" : "GreaterThanEqual",
                                      "lhs" : {
                                        "kind" : "Get",
                                        "arg1" : {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        },
                                        "arg2" : 1,
                                        "fun" : "get",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "p",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 1
                                          }
                                        ]
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 1
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ],
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "And",
                              "lhs" : {
                                "kind" : "Or",
                                "lhs" : {
                                  "kind" : "LessThanEqual",
                                  "lhs" : {
                                    "kind" : "Get",
                                    "arg1" : {
                                      "kind" : "Name",
                                      "name" : "l",
                                      "i" : -1
                                    },
                                    "arg2" : 0,
                                    "fun" : "get",
                                    "arguments" : [
                                      {
                                        "kind" : "Name",
                                        "name" : "l",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    ]
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                },
                                "rhs" : {
                                  "kind" : "GreaterThanEqual",
                                  "lhs" : {
                                    "kind" : "Get",
                                    "arg1" : {
                                      "kind" : "Name",
                                      "name" : "l",
                                      "i" : -1
                                    },
                                    "arg2" : 0,
                                    "fun" : "get",
                                    "arguments" : [
                                      {
                                        "kind" : "Name",
                                        "name" : "l",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    ]
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 1
                                  }
                                }
                              },
                              "rhs" : {
                                "kind" : "NotEqual",
                                "lhs" : {
                                  "kind" : "Get",
                                  "arg1" : {
                                    "kind" : "Name",
                                    "name" : "l",
                                    "i" : -1
                                  },
                                  "arg2" : 1,
                                  "fun" : "get",
                                  "arguments" : [
                                    {
                                      "kind" : "Name",
                                      "name" : "l",
                                      "i" : -1
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 1
                                    }
                                  ]
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              }
                            }
                          }
                        ],
                        "variable" : "l",
                        "arguments" : [
                          {
                            "kind" : "Tuple",
                            "elements" : [
                              {
                                "kind" : "Get",
                                "arg1" : {
                                  "kind" : "Name",
                                  "name" : "p",
                                  "i" : -1
                                },
                                "arg2" : 0,
                                "fun" : "get",
                                "arguments" : [
                                  {
                                    "kind" : "Name",
                                    "name" : "p",
                                    "i" : -1
                                  },
                                  {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                ]
                              },
                              {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            ],
                            "length" : 2
                          }
                        ]
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "'^'",
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 94
                        }
                      },
                      {
                        "kind" : "Nonterminal",
                        "name" : "E",
                        "arguments" : [
                          {
                            "kind" : "Tuple",
                            "elements" : [
                              {
                                "kind" : "Integer",
                                "value" : 2
                              },
                              {
                                "kind" : "Integer",
                                "value" : 1
                              }
                            ],
                            "length" : 2
                          }
                        ]
                      },
                      {
                        "kind" : "Return",
                        "name" : "{(1,1)}",
                        "expression" : {
                          "kind" : "Tuple",
                          "elements" : [
                            {
                              "kind" : "Integer",
                              "value" : 1
                            },
                            {
                              "kind" : "Integer",
                              "value" : 1
                            }
                          ],
                          "length" : 2
                        }
                      }
                    ],
                    "recursion" : "LEFT_RIGHT_REC",
                    "irecursion" : "NON_REC",
                    "associativity" : "RIGHT",
                    "associativityGroup" : {
                      "associativity" : "LEFT",
                      "precedenceLevel" : {
                        "lhs" : 1,
                        "rhs" : 2,
                        "undefined" : -1,
                        "hasPrefixUnary" : false,
                        "hasPostfixUnary" : false,
                        "hasPrefixUnaryBelow" : false,
                        "hasPostfixUnaryBelow" : false,
                        "index" : 3,
                        "containsAssociativityGroup" : true,
                        "assoc_lhs" : 1,
                        "assoc_rhs" : 2
                      },
                      "lhs" : 1,
                      "rhs" : 2,
                      "precedence" : 2,
                      "map" : {
                        "1" : "RIGHT"
                      }
                    },
                    "precedence" : 1,
                    "precedenceLevel" : {
                      "lhs" : 1,
                      "rhs" : 2,
                      "undefined" : -1,
                      "hasPrefixUnary" : false,
                      "hasPostfixUnary" : false,
                      "hasPrefixUnaryBelow" : false,
                      "hasPostfixUnaryBelow" : false,
                      "index" : 3,
                      "containsAssociativityGroup" : true,
                      "assoc_lhs" : 1,
                      "assoc_rhs" : 2
                    }
                  },
                  "children" : [
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "E",
                          "parameters" : [
                            "p"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Terminal",
                            "name" : "'a'",
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 97
                            }
                          },
                          {
                            "kind" : "Return",
                            "name" : "{(0,0)}",
                            "expression" : {
                              "kind" : "Tuple",
                              "elements" : [
                                {
                                  "kind" : "Integer",
                                  "value" : 0
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              ],
                              "length" : 2
                            }
                          }
                        ],
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 2,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 3,
                          "containsAssociativityGroup" : true,
                          "assoc_lhs" : 1,
                          "assoc_rhs" : 2
                        }
                      },
                      "children" : [
                        {
                          "kind" : "KeywordTerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "'a'",
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 97
                            }
                          },
                          "start" : 0,
                          "end" : 1
                        }
                      ],
                      "start" : 0,
                      "end" : 1
                    },
                    {
                      "kind" : "KeywordTerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "'^'",
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 94
                        }
                      },
                      "start" : 1,
                      "end" : 2
                    },
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "E",
                          "parameters" : [
                            "p"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Nonterminal",
                            "name" : "E",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "And",
                                  "lhs" : {
                                    "kind" : "GreaterThanEqual",
                                    "lhs" : {
                                      "kind" : "Integer",
                                      "value" : 2
                                    },
                                    "rhs" : {
                                      "kind" : "Get",
                                      "arg1" : {
                                        "kind" : "Name",
                                        "name" : "p",
                                        "i" : -1
                                      },
                                      "arg2" : 0,
                                      "fun" : "get",
                                      "arguments" : [
                                        {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        },
                                        {
                                          "kind" : "Integer",
                                          "value" : 0
                                        }
                                      ]
                                    }
                                  },
                                  "rhs" : {
                                    "kind" : "Or",
                                    "lhs" : {
                                      "kind" : "Equal",
                                      "lhs" : {
                                        "kind" : "Get",
                                        "arg1" : {
                                          "kind" : "Name",
                                          "name" : "p",
                                          "i" : -1
                                        },
                                        "arg2" : 1,
                                        "fun" : "get",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "p",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 1
                                          }
                                        ]
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 1
                                      }
                                    },
                                    "rhs" : {
                                      "kind" : "Not",
                                      "exp" : {
                                        "kind" : "And",
                                        "lhs" : {
                                          "kind" : "GreaterThanEqual",
                                          "lhs" : {
                                            "kind" : "Integer",
                                            "value" : 2
                                          },
                                          "rhs" : {
                                            "kind" : "Get",
                                            "arg1" : {
                                              "kind" : "Name",
                                              "name" : "p",
                                              "i" : -1
                                            },
                                            "arg2" : 1,
                                            "fun" : "get",
                                            "arguments" : [
                                              {
                                                "kind" : "Name",
                                                "name" : "p",
                                                "i" : -1
                                              },
                                              {
                                                "kind" : "Integer",
                                                "value" : 1
                                              }
                                            ]
                                          }
                                        },
                                        "rhs" : {
                                          "kind" : "GreaterThanEqual",
                                          "lhs" : {
                                            "kind" : "Get",
                                            "arg1" : {
                                              "kind" : "Name",
                                              "name" : "p",
                                              "i" : -1
                                            },
                                            "arg2" : 1,
                                            "fun" : "get",
                                            "arguments" : [
                                              {
                                                "kind" : "Name",
                                                "name" : "p",
                                                "i" : -1
                                              },
                                              {
                                                "kind" : "Integer",
                                                "value" : 1
                                              }
                                            ]
                                          },
                                          "rhs" : {
                                            "kind" : "Integer",
                                            "value" : 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "postConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "And",
                                  "lhs" : {
                                    "kind" : "Or",
                                    "lhs" : {
                                      "kind" : "LessThanEqual",
                                      "lhs" : {
                                        "kind" : "Get",
                                        "arg1" : {
                                          "kind" : "Name",
                                          "name" : "l",
                                          "i" : -1
                                        },
                                        "arg2" : 0,
                                        "fun" : "get",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "l",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 0
                                          }
                                        ]
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    },
                                    "rhs" : {
                                      "kind" : "GreaterThanEqual",
                                      "lhs" : {
                                        "kind" : "Get",
                                        "arg1" : {
                                          "kind" : "Name",
                                          "name" : "l",
                                          "i" : -1
                                        },
                                        "arg2" : 0,
                                        "fun" : "get",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "l",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 0
                                          }
                                        ]
                                      },
                                      "rhs" : {
                                        "kind" : "Integer",
                                        "value" : 1
                                      }
                                    }
                                  },
                                  "rhs" : {
                                    "kind" : "NotEqual",
                                    "lhs" : {
                                      "kind" : "Get",
                                      "arg1" : {
                                        "kind" : "Name",
                                        "name" : "l",
                                        "i" : -1
                                      },
                                      "arg2" : 1,
                                      "fun" : "get",
                                      "arguments" : [
                                        {
                                          "kind" : "Name",
                                          "name" : "l",
                                          "i" : -1
                                        },
                                        {
                                          "kind" : "Integer",
                                          "value" : 1
                                        }
                                      ]
                                    },
                                    "rhs" : {
                                      "kind" : "Integer",
                                      "value" : 1
                                    }
                                  }
                                }
                              }
                            ],
                            "variable" : "l",
                            "arguments" : [
                              {
                                "kind" : "Tuple",
                                "elements" : [
                                  {
                                    "kind" : "Get",
                                    "arg1" : {
                                      "kind" : "Name",
                                      "name" : "p",
                                      "i" : -1
                                    },
                                    "arg2" : 0,
                                    "fun" : "get",
                                    "arguments" : [
                                      {
                                        "kind" : "Name",
                                        "name" : "p",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "Integer",
                                        "value" : 0
                                      }
                                    ]
                                  },
                                  {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                ],
                                "length" : 2
                              }
                            ]
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "'^'",
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 94
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "E",
                            "arguments" : [
                              {
                                "kind" : "Tuple",
                                "elements" : [
                                  {
                                    "kind" : "Integer",
                                    "value" : 2
                                  },
                                  {
                                    "kind" : "Integer",
                                    "value" : 1
                                  }
                                ],
                                "length" : 2
                              }
                            ]
                          },
                          {
                            "kind" : "Return",
                            "name" : "{(1,1)}",
                            "expression" : {
                              "kind" : "Tuple",
                              "elements" : [
                                {
                                  "kind" : "Integer",
                                  "value" : 1
                                },
                                {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              ],
                              "length" : 2
                            }
                          }
                        ],
                        "recursion" : "LEFT_RIGHT_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "RIGHT",
                        "associativityGroup" : {
                          "associativity" : "LEFT",
                          "precedenceLevel" : {
                            "lhs" : 1,
                            "rhs" : 2,
                            "undefined" : -1,
                            "hasPrefixUnary" : false,
                            "hasPostfixUnary" : false,
                            "hasPrefixUnaryBelow" : false,
                            "hasPostfixUnaryBelow" : false,
                            "index" : 3,
                            "containsAssociativityGroup" : true,
                            "assoc_lhs" : 1,
                            "assoc_rhs" : 2
                          },
                          "lhs" : 1,
                          "rhs" : 2,
                          "precedence" : 2,
                          "map" : {
                            "1" : "RIGHT"
                          }
                        },
                        "precedence" : 1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 2,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 3,
                          "containsAssociativityGroup" : true,
                          "assoc_lhs" : 1,
                          "assoc_rhs" : 2
                        }
                      },
                      "children" : [
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "E",
                              "parameters" : [
                                "p"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'a'",
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "val" : 97
                                }
                              },
                              {
                                "kind" : "Return",
                                "name" : "{(0,0)}",
                                "expression" : {
                                  "kind" : "Tuple",
                                  "elements" : [
                                    {
                                      "kind" : "Integer",
                                      "value" : 0
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 0
                                    }
                                  ],
                                  "length" : 2
                                }
                              }
                            ],
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 2,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "hasPostfixUnaryBelow" : false,
                              "index" : 3,
                              "containsAssociativityGroup" : true,
                              "assoc_lhs" : 1,
                              "assoc_rhs" : 2
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'a'",
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "val" : 97
                                }
                              },
                              "start" : 2,
                              "end" : 3
                            }
                          ],
                          "start" : 2,
                          "end" : 3
                        },
                        {
                          "kind" : "KeywordTerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "'^'",
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 94
                            }
                          },
                          "start" : 3,
                          "end" : 4
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "E",
                              "parameters" : [
                                "p"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'a'",
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "val" : 97
                                }
                              },
                              {
                                "kind" : "Return",
                                "name" : "{(0,0)}",
                                "expression" : {
                                  "kind" : "Tuple",
                                  "elements" : [
                                    {
                                      "kind" : "Integer",
                                      "value" : 0
                                    },
                                    {
                                      "kind" : "Integer",
                                      "value" : 0
                                    }
                                  ],
                                  "length" : 2
                                }
                              }
                            ],
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 2,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "hasPostfixUnaryBelow" : false,
                              "index" : 3,
                              "containsAssociativityGroup" : true,
                              "assoc_lhs" : 1,
                              "assoc_rhs" : 2
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'a'",
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "val" : 97
                                }
                              },
                              "start" : 4,
                              "end" : 5
                            }
                          ],
                          "start" : 4,
                          "end" : 5
                        }
                      ],
                      "start" : 2,
                      "end" : 5
                    }
                  ],
                  "start" : 0,
                  "end" : 5
                },
                {
                  "kind" : "KeywordTerminalNode",
                  "terminal" : {
                    "kind" : "Terminal",
                    "name" : "'-'",
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 45
                    }
                  },
                  "start" : 5,
                  "end" : 6
                },
                {
                  "kind" : "NonterminalNode",
                  "rule" : {
                    "head" : {
                      "kind" : "Nonterminal",
                      "name" : "E",
                      "parameters" : [
                        "p"
                      ]
                    },
                    "body" : [
                      {
                        "kind" : "Terminal",
                        "name" : "'a'",
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 97
                        }
                      },
                      {
                        "kind" : "Return",
                        "name" : "{(0,0)}",
                        "expression" : {
                          "kind" : "Tuple",
                          "elements" : [
                            {
                              "kind" : "Integer",
                              "value" : 0
                            },
                            {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          ],
                          "length" : 2
                        }
                      }
                    ],
                    "recursion" : "NON_REC",
                    "irecursion" : "NON_REC",
                    "associativity" : "UNDEFINED",
                    "precedence" : -1,
                    "precedenceLevel" : {
                      "lhs" : 1,
                      "rhs" : 2,
                      "undefined" : -1,
                      "hasPrefixUnary" : false,
                      "hasPostfixUnary" : false,
                      "hasPrefixUnaryBelow" : false,
                      "hasPostfixUnaryBelow" : false,
                      "index" : 3,
                      "containsAssociativityGroup" : true,
                      "assoc_lhs" : 1,
                      "assoc_rhs" : 2
                    }
                  },
                  "children" : [
                    {
                      "kind" : "KeywordTerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "'a'",
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 97
                        }
                      },
                      "start" : 6,
                      "end" : 7
                    }
                  ],
                  "start" : 6,
                  "end" : 7
                }
              ],
              "start" : 0,
              "end" : 7
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'+'",
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "val" : 43
                }
              },
              "start" : 7,
              "end" : 8
            },
            {
              "kind" : "NonterminalNode",
              "rule" : {
                "head" : {
                  "kind" : "Nonterminal",
                  "name" : "E",
                  "parameters" : [
                    "p"
                  ]
                },
                "body" : [
                  {
                    "kind" : "Terminal",
                    "name" : "'a'",
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 97
                    }
                  },
                  {
                    "kind" : "Return",
                    "name" : "{(0,0)}",
                    "expression" : {
                      "kind" : "Tuple",
                      "elements" : [
                        {
                          "kind" : "Integer",
                          "value" : 0
                        },
                        {
                          "kind" : "Integer",
                          "value" : 0
                        }
                      ],
                      "length" : 2
                    }
                  }
                ],
                "recursion" : "NON_REC",
                "irecursion" : "NON_REC",
                "associativity" : "UNDEFINED",
                "precedence" : -1,
                "precedenceLevel" : {
                  "lhs" : 1,
                  "rhs" : 2,
                  "undefined" : -1,
                  "hasPrefixUnary" : false,
                  "hasPostfixUnary" : false,
                  "hasPrefixUnaryBelow" : false,
                  "hasPostfixUnaryBelow" : false,
                  "index" : 3,
                  "containsAssociativityGroup" : true,
                  "assoc_lhs" : 1,
                  "assoc_rhs" : 2
                }
              },
              "children" : [
                {
                  "kind" : "KeywordTerminalNode",
                  "terminal" : {
                    "kind" : "Terminal",
                    "name" : "'a'",
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 97
                    }
                  },
                  "start" : 8,
                  "end" : 9
                }
              ],
              "start" : 8,
              "end" : 9
            }
          ],
          "start" : 0,
          "end" : 9
        }
      ],
      "start" : 0,
      "end" : 9
    }
  ],
  "start" : 0,
  "end" : 9
}