{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "+",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 43
                      }
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    }
                  ],
                  "associativity" : "LEFT"
                }
              ]
            }
          ]
        },
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "if",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 105
                          },
                          {
                            "kind" : "Char",
                            "val" : 102
                          }
                        ]
                      }
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "then",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 116
                          },
                          {
                            "kind" : "Char",
                            "val" : 104
                          },
                          {
                            "kind" : "Char",
                            "val" : 101
                          },
                          {
                            "kind" : "Char",
                            "val" : 110
                          }
                        ]
                      }
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "else",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 101
                          },
                          {
                            "kind" : "Char",
                            "val" : 108
                          },
                          {
                            "kind" : "Char",
                            "val" : 115
                          },
                          {
                            "kind" : "Char",
                            "val" : 101
                          }
                        ]
                      }
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "E"
                    }
                  ]
                }
              ]
            },
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "regularExpressions" : {
    "Whitespaces" : {
      "kind" : "regex.Star",
      "regex" : {
        "kind" : "regex.Alt",
        "symbols" : [
          {
            "kind" : "Char",
            "val" : 9
          },
          {
            "kind" : "Char",
            "val" : 10
          },
          {
            "kind" : "Char",
            "val" : 13
          },
          {
            "kind" : "Char",
            "val" : 32
          }
        ]
      }
    }
  },
  "literals" : [
    {
      "kind" : "Char",
      "val" : 97
    },
    {
      "kind" : "regex.Seq",
      "symbols" : [
        {
          "kind" : "Char",
          "val" : 101
        },
        {
          "kind" : "Char",
          "val" : 108
        },
        {
          "kind" : "Char",
          "val" : 115
        },
        {
          "kind" : "Char",
          "val" : 101
        }
      ]
    },
    {
      "kind" : "regex.Seq",
      "symbols" : [
        {
          "kind" : "Char",
          "val" : 116
        },
        {
          "kind" : "Char",
          "val" : 104
        },
        {
          "kind" : "Char",
          "val" : 101
        },
        {
          "kind" : "Char",
          "val" : 110
        }
      ]
    },
    {
      "kind" : "Char",
      "val" : 43
    },
    {
      "kind" : "regex.Seq",
      "symbols" : [
        {
          "kind" : "Char",
          "val" : 105
        },
        {
          "kind" : "Char",
          "val" : 102
        }
      ]
    }
  ],
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "startSymbol" : "S"
  },
  "layout" : {
    "kind" : "Identifier",
    "name" : "Whitespaces"
  }
}