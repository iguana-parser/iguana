{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start(E)",
        "nodeType" : "Start"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "definition" : {
        "kind" : "Start",
        "name" : "Start(E)",
        "startSymbol" : "E"
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 3
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : ".",
          "regex" : {
            "kind" : "Char",
            "val" : 46
          }
        },
        {
          "kind" : "Terminal",
          "name" : "a",
          "regex" : {
            "kind" : "Char",
            "val" : 97
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 3
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : ".[",
          "regex" : {
            "kind" : "regex.Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 46
              },
              {
                "kind" : "Char",
                "val" : 91
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "]",
          "regex" : {
            "kind" : "Char",
            "val" : 93
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 2
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 2
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "+",
          "regex" : {
            "kind" : "Char",
            "val" : 43
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 2 : min(r,2)}",
          "expression" : {
            "kind" : "IfThenElse",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 2
            },
            "elsePart" : {
              "kind" : "Min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 2
                }
              ],
              "fun" : "min"
            }
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "if",
          "regex" : {
            "kind" : "regex.Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 102
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "then",
          "regex" : {
            "kind" : "regex.Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 116
              },
              {
                "kind" : "Char",
                "val" : 104
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 110
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{1}",
          "expression" : {
            "kind" : "Integer",
            "value" : 1
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Char",
            "val" : 40
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "E",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Char",
            "val" : 41
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "a",
          "regex" : {
            "kind" : "Char",
            "val" : 97
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ]
    }
  ],
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(E)",
    "startSymbol" : "E"
  }
}