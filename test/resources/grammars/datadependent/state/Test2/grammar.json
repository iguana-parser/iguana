{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "A {var m = z}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "A"
                      },
                      "statements" : [
                        {
                          "kind" : "VariableDeclaration",
                          "decl" : {
                            "name" : "m",
                            "i" : -1,
                            "expression" : {
                              "kind" : "Name",
                              "name" : "z",
                              "i" : -1
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "C"
                    },
                    {
                      "kind" : "Code",
                      "name" : "B {var n = x}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "B"
                      },
                      "statements" : [
                        {
                          "kind" : "VariableDeclaration",
                          "decl" : {
                            "name" : "n",
                            "i" : -1,
                            "expression" : {
                              "kind" : "Name",
                              "name" : "x",
                              "i" : -1
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "D [m == 0 && n == 999] {assert(x == 999,y == 2,z == 999)}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "D",
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "And",
                              "lhs" : {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "m",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              },
                              "rhs" : {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "n",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              }
                            }
                          }
                        ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "x",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "y",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "z",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "A"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "a {x = 999}",
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "a",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 97
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "x",
                            "exp" : {
                              "kind" : "Integer",
                              "value" : 999
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "a {y = 2}",
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "a",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 97
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "y",
                            "exp" : {
                              "kind" : "Integer",
                              "value" : 2
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : ";",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 59
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "B"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "b {z = x}",
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "b",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 98
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "z",
                            "exp" : {
                              "kind" : "Name",
                              "name" : "x",
                              "i" : -1
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : ";",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 59
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "D"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "d",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 100
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "C"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "c",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 99
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "startSymbol" : "S"
  },
  "globals" : {
    "x" : {
      "kind" : "Integer",
      "value" : 0
    },
    "y" : {
      "kind" : "Integer",
      "value" : 0
    },
    "z" : {
      "kind" : "Integer",
      "value" : 0
    }
  }
}