{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "A {var m = z}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "A",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "excepts" : [ ]
                      },
                      "statements" : [
                        {
                          "kind" : "VariableDeclaration",
                          "decl" : {
                            "name" : "m",
                            "i" : -1,
                            "expression" : {
                              "kind" : "Name",
                              "name" : "z",
                              "i" : -1
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "C",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "excepts" : [ ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "B {var n = x}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "B",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "excepts" : [ ]
                      },
                      "statements" : [
                        {
                          "kind" : "VariableDeclaration",
                          "decl" : {
                            "name" : "n",
                            "i" : -1,
                            "expression" : {
                              "kind" : "Name",
                              "name" : "x",
                              "i" : -1
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "D [m == 0 && n == 999] {assert(x == 999,y == 2,z == 999)}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "D",
                        "preConditions" : [ ],
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "And",
                              "lhs" : {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "m",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              },
                              "rhs" : {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "n",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              }
                            }
                          }
                        ],
                        "excepts" : [ ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "x",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "y",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "z",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 999
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "A",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "'a' {x = 999}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "'a'",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 97
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "x",
                            "exp" : {
                              "kind" : "Integer",
                              "value" : 999
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "'a' {y = 2}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "'a'",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 97
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "y",
                            "exp" : {
                              "kind" : "Integer",
                              "value" : 2
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "';'",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 59
                      }
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "B",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "'b' {z = x}",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "symbol" : {
                        "kind" : "Terminal",
                        "name" : "'b'",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 98
                        }
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assignment",
                            "id" : "z",
                            "exp" : {
                              "kind" : "Name",
                              "name" : "x",
                              "i" : -1
                            },
                            "i" : -1
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "';'",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 59
                      }
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "D",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'d'",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 100
                      }
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "C",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'c'",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 99
                      }
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    }
  ],
  "regularExpressionDefinitions" : { },
  "literals" : {
    "a" : {
      "kind" : "Char",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "val" : 97
    },
    ";" : {
      "kind" : "Char",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "val" : 59
    },
    "b" : {
      "kind" : "Char",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "val" : 98
    },
    "d" : {
      "kind" : "Char",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "val" : 100
    },
    "c" : {
      "kind" : "Char",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "val" : 99
    }
  },
  "startSymbols" : [
    {
      "kind" : "Start",
      "name" : "Start(S)",
      "preConditions" : [ ],
      "postConditions" : [ ],
      "startSymbol" : "S"
    }
  ],
  "globals" : {
    "x" : {
      "kind" : "Integer",
      "value" : 0
    },
    "y" : {
      "kind" : "Integer",
      "value" : 0
    },
    "z" : {
      "kind" : "Integer",
      "value" : 0
    }
  }
}