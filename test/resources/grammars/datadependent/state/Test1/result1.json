{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "preConditions" : [ ],
    "postConditions" : [ ],
    "startSymbol" : "S"
  },
  "children" : [
    {
      "kind" : "NonterminalNode",
      "rule" : {
        "head" : {
          "kind" : "Nonterminal",
          "name" : "S",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "parameters" : [
            "x",
            "y",
            "z"
          ]
        },
        "body" : [
          {
            "kind" : "Code",
            "name" : "x=A(x,y) {var m = 3}",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "symbol" : {
              "kind" : "Nonterminal",
              "name" : "A",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "state" : [
                "x"
              ],
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "x",
                  "i" : -1
                },
                {
                  "kind" : "Name",
                  "name" : "y",
                  "i" : -1
                }
              ]
            },
            "statements" : [
              {
                "kind" : "VariableDeclaration",
                "decl" : {
                  "name" : "m",
                  "i" : -1,
                  "expression" : {
                    "kind" : "Integer",
                    "value" : 3
                  }
                }
              }
            ]
          },
          {
            "kind" : "Nonterminal",
            "name" : "C",
            "preConditions" : [ ],
            "postConditions" : [ ]
          },
          {
            "kind" : "Code",
            "name" : "B(x,z) {var n = 4}",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "symbol" : {
              "kind" : "Nonterminal",
              "name" : "B",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "x",
                  "i" : -1
                },
                {
                  "kind" : "Name",
                  "name" : "z",
                  "i" : -1
                }
              ]
            },
            "statements" : [
              {
                "kind" : "VariableDeclaration",
                "decl" : {
                  "name" : "n",
                  "i" : -1,
                  "expression" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            ]
          },
          {
            "kind" : "Nonterminal",
            "name" : "D",
            "preConditions" : [ ],
            "postConditions" : [ ]
          }
        ],
        "recursion" : "NON_REC",
        "irecursion" : "NON_REC",
        "leftEnd" : "",
        "rightEnd" : "",
        "leftEnds" : [ ],
        "rightEnds" : [ ],
        "associativity" : "UNDEFINED",
        "precedence" : -1,
        "precedenceLevel" : {
          "lhs" : 1,
          "rhs" : 1,
          "undefined" : -1,
          "hasPrefixUnary" : false,
          "hasPostfixUnary" : false,
          "hasPrefixUnaryBelow" : false,
          "prefixUnaryBelow" : [ ],
          "hasPostfixUnaryBelow" : false,
          "postfixUnaryBelow" : [ ],
          "index" : 1,
          "containsAssociativityGroup" : false,
          "assoc_lhs" : -1,
          "assoc_rhs" : -1
        }
      },
      "children" : [
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "A",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "parameters" : [
                "x",
                "y"
              ]
            },
            "body" : [
              {
                "kind" : "Code",
                "name" : "'a' {x = 1}",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "symbol" : {
                  "kind" : "Terminal",
                  "name" : "'a'",
                  "preConditions" : [ ],
                  "postConditions" : [ ],
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 97
                  }
                },
                "statements" : [
                  {
                    "kind" : "ExpressionStatement",
                    "exp" : {
                      "kind" : "Assignment",
                      "id" : "x",
                      "exp" : {
                        "kind" : "Integer",
                        "value" : 1
                      },
                      "i" : -1
                    }
                  }
                ]
              },
              {
                "kind" : "Code",
                "name" : "'a' {y = 2}",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "symbol" : {
                  "kind" : "Terminal",
                  "name" : "'a'",
                  "preConditions" : [ ],
                  "postConditions" : [ ],
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 97
                  }
                },
                "statements" : [
                  {
                    "kind" : "ExpressionStatement",
                    "exp" : {
                      "kind" : "Assignment",
                      "id" : "y",
                      "exp" : {
                        "kind" : "Integer",
                        "value" : 2
                      },
                      "i" : -1
                    }
                  }
                ]
              },
              {
                "kind" : "Terminal",
                "name" : "';'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 59
                }
              },
              {
                "kind" : "Return",
                "name" : "{(x)}",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "expression" : {
                  "kind" : "Tuple",
                  "elements" : [
                    {
                      "kind" : "Name",
                      "name" : "x",
                      "i" : -1
                    }
                  ],
                  "length" : 1
                }
              }
            ],
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'a'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 97
                }
              },
              "start" : 0,
              "end" : 1
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'a'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 97
                }
              },
              "start" : 1,
              "end" : 2
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "';'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 59
                }
              },
              "start" : 2,
              "end" : 3
            }
          ],
          "start" : 0,
          "end" : 3
        },
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "C",
              "preConditions" : [ ],
              "postConditions" : [ ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "'c'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 99
                }
              }
            ],
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'c'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 99
                }
              },
              "start" : 3,
              "end" : 4
            }
          ],
          "start" : 3,
          "end" : 4
        },
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "B",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "parameters" : [
                "x",
                "z"
              ]
            },
            "body" : [
              {
                "kind" : "Code",
                "name" : "'b' {z = x;assert(x == 1)}",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "symbol" : {
                  "kind" : "Terminal",
                  "name" : "'b'",
                  "preConditions" : [ ],
                  "postConditions" : [ ],
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 98
                  }
                },
                "statements" : [
                  {
                    "kind" : "ExpressionStatement",
                    "exp" : {
                      "kind" : "Assignment",
                      "id" : "z",
                      "exp" : {
                        "kind" : "Name",
                        "name" : "x",
                        "i" : -1
                      },
                      "i" : -1
                    }
                  },
                  {
                    "kind" : "ExpressionStatement",
                    "exp" : {
                      "kind" : "Assert",
                      "arguments" : [
                        {
                          "kind" : "Equal",
                          "lhs" : {
                            "kind" : "Name",
                            "name" : "x",
                            "i" : -1
                          },
                          "rhs" : {
                            "kind" : "Integer",
                            "value" : 1
                          }
                        }
                      ],
                      "fun" : "assert"
                    }
                  }
                ]
              },
              {
                "kind" : "Terminal",
                "name" : "';'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 59
                }
              }
            ],
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'b'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 98
                }
              },
              "start" : 4,
              "end" : 5
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "';'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 59
                }
              },
              "start" : 5,
              "end" : 6
            }
          ],
          "start" : 4,
          "end" : 6
        },
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "D",
              "preConditions" : [ ],
              "postConditions" : [ ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "'d'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 100
                }
              }
            ],
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'d'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 100
                }
              },
              "start" : 6,
              "end" : 7
            }
          ],
          "start" : 6,
          "end" : 7
        }
      ],
      "start" : 0,
      "end" : 7
    }
  ],
  "start" : 0,
  "end" : 7
}