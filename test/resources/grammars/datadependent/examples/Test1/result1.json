{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(Element)",
    "preConditions" : [ ],
    "postConditions" : [ ],
    "startSymbol" : "Element"
  },
  "children" : [
    {
      "kind" : "NonterminalNode",
      "rule" : {
        "head" : {
          "kind" : "Nonterminal",
          "name" : "Element",
          "preConditions" : [ ],
          "postConditions" : [ ]
        },
        "body" : [
          {
            "kind" : "Nonterminal",
            "name" : "STag",
            "label" : "s",
            "preConditions" : [ ],
            "postConditions" : [ ]
          },
          {
            "kind" : "Terminal",
            "name" : "L",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "nodeType" : "Layout",
            "regex" : {
              "kind" : "regex.Star",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "regex" : {
                "kind" : "regex.Alt",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "symbols" : [
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 9
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 10
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 13
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 32
                  }
                ]
              },
              "separators" : [ ]
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "Content",
            "preConditions" : [ ],
            "postConditions" : [ ]
          },
          {
            "kind" : "Terminal",
            "name" : "L",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "nodeType" : "Layout",
            "regex" : {
              "kind" : "regex.Star",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "regex" : {
                "kind" : "regex.Alt",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "symbols" : [
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 9
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 10
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 13
                  },
                  {
                    "kind" : "Char",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "val" : 32
                  }
                ]
              },
              "separators" : [ ]
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "ETag",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "arguments" : [
              {
                "kind" : "Val",
                "label" : "s"
              }
            ]
          }
        ],
        "layout" : {
          "kind" : "Terminal",
          "name" : "L",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        "recursion" : "NON_REC",
        "irecursion" : "NON_REC",
        "leftEnd" : "",
        "rightEnd" : "",
        "leftEnds" : [ ],
        "rightEnds" : [ ],
        "associativity" : "UNDEFINED",
        "precedence" : -1,
        "precedenceLevel" : {
          "lhs" : 1,
          "rhs" : 1,
          "undefined" : -1,
          "hasPrefixUnary" : false,
          "hasPostfixUnary" : false,
          "hasPrefixUnaryBelow" : false,
          "prefixUnaryBelow" : [ ],
          "hasPostfixUnaryBelow" : false,
          "postfixUnaryBelow" : [ ],
          "index" : 1,
          "containsAssociativityGroup" : false,
          "assoc_lhs" : -1,
          "assoc_rhs" : -1
        }
      },
      "children" : [
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "STag",
              "preConditions" : [ ],
              "postConditions" : [ ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "'<'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 60
                }
              },
              {
                "kind" : "Terminal",
                "name" : "L",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 32
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "Name",
                "label" : "n",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Plus",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "L",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 32
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "'>'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 62
                }
              },
              {
                "kind" : "Return",
                "name" : "{n.yield}",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "expression" : {
                  "kind" : "Yield",
                  "label" : "n",
                  "i" : -1
                }
              }
            ],
            "layout" : {
              "kind" : "Terminal",
              "name" : "L",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Layout",
              "regex" : {
                "kind" : "regex.Star",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 9
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 10
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 13
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 32
                    }
                  ]
                },
                "separators" : [ ]
              }
            },
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'<'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 60
                }
              },
              "start" : 0,
              "end" : 1
            },
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Name",
                "label" : "n",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Plus",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              "start" : 1,
              "end" : 5
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'>'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 62
                }
              },
              "start" : 5,
              "end" : 6
            }
          ],
          "start" : 0,
          "end" : 6
        },
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "Content",
              "preConditions" : [ ],
              "postConditions" : [ ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "CharData",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 65,
                        "end" : 90
                      },
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "L",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 32
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Nonterminal",
                "name" : "(Element CharData)*",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Star"
              }
            ],
            "layout" : {
              "kind" : "Terminal",
              "name" : "L",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Layout",
              "regex" : {
                "kind" : "regex.Star",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 9
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 10
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 13
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 32
                    }
                  ]
                },
                "separators" : [ ]
              }
            },
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "CharData",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 65,
                        "end" : 90
                      },
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              "start" : 11,
              "end" : 11
            },
            {
              "kind" : "StarNode",
              "symbol" : {
                "kind" : "Star",
                "name" : "(Element CharData)*",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "s" : {
                  "kind" : "Sequence",
                  "name" : "(Element CharData)",
                  "preConditions" : [ ],
                  "postConditions" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Nonterminal",
                      "name" : "Element",
                      "preConditions" : [ ],
                      "postConditions" : [ ]
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "CharData",
                      "preConditions" : [ ],
                      "postConditions" : [ ],
                      "nodeType" : "Regex",
                      "regex" : {
                        "kind" : "regex.Star",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "regex" : {
                          "kind" : "regex.Alt",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "symbols" : [
                            {
                              "kind" : "CharRange",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "start" : 65,
                              "end" : 90
                            },
                            {
                              "kind" : "CharRange",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "start" : 97,
                              "end" : 122
                            }
                          ]
                        },
                        "separators" : [ ]
                      }
                    }
                  ]
                },
                "separators" : [ ]
              },
              "children" : [
                {
                  "kind" : "GroupNode",
                  "symbol" : {
                    "kind" : "Sequence",
                    "name" : "(Element CharData)",
                    "preConditions" : [ ],
                    "postConditions" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Nonterminal",
                        "name" : "Element",
                        "preConditions" : [ ],
                        "postConditions" : [ ]
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "CharData",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Star",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "regex" : {
                            "kind" : "regex.Alt",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "symbols" : [
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 65,
                                "end" : 90
                              },
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 97,
                                "end" : 122
                              }
                            ]
                          },
                          "separators" : [ ]
                        }
                      }
                    ]
                  },
                  "children" : [
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Element",
                          "preConditions" : [ ],
                          "postConditions" : [ ]
                        },
                        "body" : [
                          {
                            "kind" : "Nonterminal",
                            "name" : "STag",
                            "label" : "s",
                            "preConditions" : [ ],
                            "postConditions" : [ ]
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "L",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "regex" : {
                                "kind" : "regex.Alt",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 32
                                  }
                                ]
                              },
                              "separators" : [ ]
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "Content",
                            "preConditions" : [ ],
                            "postConditions" : [ ]
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "L",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "regex" : {
                                "kind" : "regex.Alt",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 32
                                  }
                                ]
                              },
                              "separators" : [ ]
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "ETag",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "arguments" : [
                              {
                                "kind" : "Val",
                                "label" : "s"
                              }
                            ]
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "L",
                          "preConditions" : [ ],
                          "postConditions" : [ ],
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "regex" : {
                              "kind" : "regex.Alt",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 32
                                }
                              ]
                            },
                            "separators" : [ ]
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "leftEnd" : "",
                        "rightEnd" : "",
                        "leftEnds" : [ ],
                        "rightEnds" : [ ],
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "prefixUnaryBelow" : [ ],
                          "hasPostfixUnaryBelow" : false,
                          "postfixUnaryBelow" : [ ],
                          "index" : 1,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "STag",
                              "preConditions" : [ ],
                              "postConditions" : [ ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'<'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 60
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              {
                                "kind" : "Return",
                                "name" : "{n.yield}",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "expression" : {
                                  "kind" : "Yield",
                                  "label" : "n",
                                  "i" : -1
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'<'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 60
                                }
                              },
                              "start" : 11,
                              "end" : 12
                            },
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 12,
                              "end" : 14
                            },
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              "start" : 14,
                              "end" : 15
                            }
                          ],
                          "start" : 11,
                          "end" : 15
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "Content",
                              "preConditions" : [ ],
                              "postConditions" : [ ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "CharData",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Nonterminal",
                                "name" : "(Element CharData)*",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Star"
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "CharData",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 15,
                              "end" : 19
                            },
                            {
                              "kind" : "StarNode",
                              "symbol" : {
                                "kind" : "Star",
                                "name" : "(Element CharData)*",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "s" : {
                                  "kind" : "Sequence",
                                  "name" : "(Element CharData)",
                                  "preConditions" : [ ],
                                  "postConditions" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Nonterminal",
                                      "name" : "Element",
                                      "preConditions" : [ ],
                                      "postConditions" : [ ]
                                    },
                                    {
                                      "kind" : "Terminal",
                                      "name" : "CharData",
                                      "preConditions" : [ ],
                                      "postConditions" : [ ],
                                      "nodeType" : "Regex",
                                      "regex" : {
                                        "kind" : "regex.Star",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "regex" : {
                                          "kind" : "regex.Alt",
                                          "lookaheads" : [ ],
                                          "lookbehinds" : [ ],
                                          "symbols" : [
                                            {
                                              "kind" : "CharRange",
                                              "lookaheads" : [ ],
                                              "lookbehinds" : [ ],
                                              "start" : 65,
                                              "end" : 90
                                            },
                                            {
                                              "kind" : "CharRange",
                                              "lookaheads" : [ ],
                                              "lookbehinds" : [ ],
                                              "start" : 97,
                                              "end" : 122
                                            }
                                          ]
                                        },
                                        "separators" : [ ]
                                      }
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              },
                              "children" : [ ],
                              "start" : 19,
                              "end" : 19
                            }
                          ],
                          "start" : 15,
                          "end" : 19
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "ETag",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "parameters" : [
                                "s"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'</'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 60
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 47
                                    }
                                  ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "Equal",
                                      "lhs" : {
                                        "kind" : "Yield",
                                        "label" : "n",
                                        "i" : -1
                                      },
                                      "rhs" : {
                                        "kind" : "Name",
                                        "name" : "s",
                                        "i" : -1
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'</'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 60
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 47
                                    }
                                  ]
                                }
                              },
                              "start" : 19,
                              "end" : 21
                            },
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 21,
                              "end" : 23
                            },
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              "start" : 23,
                              "end" : 24
                            }
                          ],
                          "start" : 19,
                          "end" : 24
                        }
                      ],
                      "start" : 11,
                      "end" : 24
                    },
                    {
                      "kind" : "TerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "CharData",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Star",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "regex" : {
                            "kind" : "regex.Alt",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "symbols" : [
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 65,
                                "end" : 90
                              },
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 97,
                                "end" : 122
                              }
                            ]
                          },
                          "separators" : [ ]
                        }
                      },
                      "start" : 29,
                      "end" : 29
                    }
                  ],
                  "start" : 11,
                  "end" : 29
                },
                {
                  "kind" : "GroupNode",
                  "symbol" : {
                    "kind" : "Sequence",
                    "name" : "(Element CharData)",
                    "preConditions" : [ ],
                    "postConditions" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Nonterminal",
                        "name" : "Element",
                        "preConditions" : [ ],
                        "postConditions" : [ ]
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "CharData",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Star",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "regex" : {
                            "kind" : "regex.Alt",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "symbols" : [
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 65,
                                "end" : 90
                              },
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 97,
                                "end" : 122
                              }
                            ]
                          },
                          "separators" : [ ]
                        }
                      }
                    ]
                  },
                  "children" : [
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Element",
                          "preConditions" : [ ],
                          "postConditions" : [ ]
                        },
                        "body" : [
                          {
                            "kind" : "Nonterminal",
                            "name" : "STag",
                            "label" : "s",
                            "preConditions" : [ ],
                            "postConditions" : [ ]
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "L",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "regex" : {
                                "kind" : "regex.Alt",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 32
                                  }
                                ]
                              },
                              "separators" : [ ]
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "Content",
                            "preConditions" : [ ],
                            "postConditions" : [ ]
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "L",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "regex" : {
                                "kind" : "regex.Alt",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "val" : 32
                                  }
                                ]
                              },
                              "separators" : [ ]
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "ETag",
                            "preConditions" : [ ],
                            "postConditions" : [ ],
                            "arguments" : [
                              {
                                "kind" : "Val",
                                "label" : "s"
                              }
                            ]
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "L",
                          "preConditions" : [ ],
                          "postConditions" : [ ],
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "regex" : {
                              "kind" : "regex.Alt",
                              "lookaheads" : [ ],
                              "lookbehinds" : [ ],
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 32
                                }
                              ]
                            },
                            "separators" : [ ]
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "leftEnd" : "",
                        "rightEnd" : "",
                        "leftEnds" : [ ],
                        "rightEnds" : [ ],
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "prefixUnaryBelow" : [ ],
                          "hasPostfixUnaryBelow" : false,
                          "postfixUnaryBelow" : [ ],
                          "index" : 1,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "STag",
                              "preConditions" : [ ],
                              "postConditions" : [ ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'<'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 60
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              {
                                "kind" : "Return",
                                "name" : "{n.yield}",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "expression" : {
                                  "kind" : "Yield",
                                  "label" : "n",
                                  "i" : -1
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'<'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 60
                                }
                              },
                              "start" : 29,
                              "end" : 30
                            },
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 30,
                              "end" : 34
                            },
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              "start" : 34,
                              "end" : 35
                            }
                          ],
                          "start" : 29,
                          "end" : 35
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "Content",
                              "preConditions" : [ ],
                              "postConditions" : [ ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "CharData",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Nonterminal",
                                "name" : "(Element CharData)*",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Star"
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "CharData",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 35,
                              "end" : 40
                            },
                            {
                              "kind" : "StarNode",
                              "symbol" : {
                                "kind" : "Star",
                                "name" : "(Element CharData)*",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "s" : {
                                  "kind" : "Sequence",
                                  "name" : "(Element CharData)",
                                  "preConditions" : [ ],
                                  "postConditions" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Nonterminal",
                                      "name" : "Element",
                                      "preConditions" : [ ],
                                      "postConditions" : [ ]
                                    },
                                    {
                                      "kind" : "Terminal",
                                      "name" : "CharData",
                                      "preConditions" : [ ],
                                      "postConditions" : [ ],
                                      "nodeType" : "Regex",
                                      "regex" : {
                                        "kind" : "regex.Star",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "regex" : {
                                          "kind" : "regex.Alt",
                                          "lookaheads" : [ ],
                                          "lookbehinds" : [ ],
                                          "symbols" : [
                                            {
                                              "kind" : "CharRange",
                                              "lookaheads" : [ ],
                                              "lookbehinds" : [ ],
                                              "start" : 65,
                                              "end" : 90
                                            },
                                            {
                                              "kind" : "CharRange",
                                              "lookaheads" : [ ],
                                              "lookbehinds" : [ ],
                                              "start" : 97,
                                              "end" : 122
                                            }
                                          ]
                                        },
                                        "separators" : [ ]
                                      }
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              },
                              "children" : [ ],
                              "start" : 40,
                              "end" : 40
                            }
                          ],
                          "start" : 35,
                          "end" : 40
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "ETag",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "parameters" : [
                                "s"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "'</'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 60
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 47
                                    }
                                  ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "Equal",
                                      "lhs" : {
                                        "kind" : "Yield",
                                        "label" : "n",
                                        "i" : -1
                                      },
                                      "rhs" : {
                                        "kind" : "Name",
                                        "name" : "s",
                                        "i" : -1
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "L",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "val" : 32
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "L",
                              "preConditions" : [ ],
                              "postConditions" : [ ],
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 32
                                    }
                                  ]
                                },
                                "separators" : [ ]
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "leftEnd" : "",
                            "rightEnd" : "",
                            "leftEnds" : [ ],
                            "rightEnds" : [ ],
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : -1,
                              "hasPrefixUnary" : false,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "prefixUnaryBelow" : [ ],
                              "hasPostfixUnaryBelow" : false,
                              "postfixUnaryBelow" : [ ],
                              "index" : 1,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'</'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 60
                                    },
                                    {
                                      "kind" : "Char",
                                      "lookaheads" : [ ],
                                      "lookbehinds" : [ ],
                                      "val" : 47
                                    }
                                  ]
                                }
                              },
                              "start" : 40,
                              "end" : 42
                            },
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "Name",
                                "label" : "n",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Plus",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "lookaheads" : [ ],
                                    "lookbehinds" : [ ],
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "lookaheads" : [ ],
                                        "lookbehinds" : [ ],
                                        "start" : 97,
                                        "end" : 122
                                      }
                                    ]
                                  },
                                  "separators" : [ ]
                                }
                              },
                              "start" : 42,
                              "end" : 46
                            },
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "'>'",
                                "preConditions" : [ ],
                                "postConditions" : [ ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "Char",
                                  "lookaheads" : [ ],
                                  "lookbehinds" : [ ],
                                  "val" : 62
                                }
                              },
                              "start" : 46,
                              "end" : 47
                            }
                          ],
                          "start" : 40,
                          "end" : 47
                        }
                      ],
                      "start" : 29,
                      "end" : 47
                    },
                    {
                      "kind" : "TerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "CharData",
                        "preConditions" : [ ],
                        "postConditions" : [ ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Star",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "regex" : {
                            "kind" : "regex.Alt",
                            "lookaheads" : [ ],
                            "lookbehinds" : [ ],
                            "symbols" : [
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 65,
                                "end" : 90
                              },
                              {
                                "kind" : "CharRange",
                                "lookaheads" : [ ],
                                "lookbehinds" : [ ],
                                "start" : 97,
                                "end" : 122
                              }
                            ]
                          },
                          "separators" : [ ]
                        }
                      },
                      "start" : 48,
                      "end" : 48
                    }
                  ],
                  "start" : 29,
                  "end" : 48
                }
              ],
              "start" : 11,
              "end" : 48
            }
          ],
          "start" : 11,
          "end" : 48
        },
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "ETag",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "parameters" : [
                "s"
              ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "'</'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 60
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 47
                    }
                  ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "L",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 32
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "Name",
                "label" : "n",
                "preConditions" : [ ],
                "postConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "Equal",
                      "lhs" : {
                        "kind" : "Yield",
                        "label" : "n",
                        "i" : -1
                      },
                      "rhs" : {
                        "kind" : "Name",
                        "name" : "s",
                        "i" : -1
                      }
                    }
                  }
                ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Plus",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "L",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "val" : 32
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "'>'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 62
                }
              }
            ],
            "layout" : {
              "kind" : "Terminal",
              "name" : "L",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Layout",
              "regex" : {
                "kind" : "regex.Star",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 9
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 10
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 13
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 32
                    }
                  ]
                },
                "separators" : [ ]
              }
            },
            "recursion" : "NON_REC",
            "irecursion" : "NON_REC",
            "leftEnd" : "",
            "rightEnd" : "",
            "leftEnds" : [ ],
            "rightEnds" : [ ],
            "associativity" : "UNDEFINED",
            "precedence" : -1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : -1,
              "hasPrefixUnary" : false,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "prefixUnaryBelow" : [ ],
              "hasPostfixUnaryBelow" : false,
              "postfixUnaryBelow" : [ ],
              "index" : 1,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'</'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 60
                    },
                    {
                      "kind" : "Char",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "val" : 47
                    }
                  ]
                }
              },
              "start" : 48,
              "end" : 50
            },
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Name",
                "label" : "n",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Plus",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "regex" : {
                    "kind" : "regex.Alt",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "symbols" : [
                      {
                        "kind" : "CharRange",
                        "lookaheads" : [ ],
                        "lookbehinds" : [ ],
                        "start" : 97,
                        "end" : 122
                      }
                    ]
                  },
                  "separators" : [ ]
                }
              },
              "start" : 50,
              "end" : 54
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "'>'",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 62
                }
              },
              "start" : 54,
              "end" : 55
            }
          ],
          "start" : 48,
          "end" : 55
        }
      ],
      "start" : 0,
      "end" : 55
    }
  ],
  "start" : 0,
  "end" : 55
}