{
  "layout" : {
    "kind" : "Terminal",
    "name" : "Whitespaces",
    "preConditions" : [ ],
    "postConditions" : [ ],
    "nodeType" : "Layout",
    "regex" : {
      "kind" : "regex.Star",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "regex" : {
        "kind" : "regex.Alt",
        "lookaheads" : [ ],
        "lookbehinds" : [ ],
        "symbols" : [
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 10
          },
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 13
          },
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 9
          },
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 12
          },
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 32
          }
        ]
      },
      "separators" : [ ]
    }
  },
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Exp",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst",
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 2
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 2
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            },
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "'+'",
          "label" : "o1",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o1"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 43
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "label" : "o2",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : false
            },
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 2 : min(r,2)}",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "expression" : {
            "kind" : "IfThenElse",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 2
            },
            "elsePart" : {
              "kind" : "Min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 2
                }
              ],
              "fun" : "min"
            }
          }
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "LEFT_RIGHT_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "LEFT",
      "precedence" : 2,
      "precedenceLevel" : {
        "lhs" : 2,
        "rhs" : 2,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : true,
        "prefixUnaryBelow" : [
          1
        ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 3,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Exp",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst",
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "'let'",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o0"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "regex.Seq",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 108
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 101
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 116
              }
            ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Decls",
          "label" : "o1",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : false
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "'in'",
          "label" : "o2",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o2"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "regex.Seq",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 105
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 110
              }
            ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "label" : "o3",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o3"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o3"
              },
              "returnIndex" : false
            },
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{1}",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "expression" : {
            "kind" : "Integer",
            "value" : 1
          }
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "RIGHT_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : 1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : 1,
        "hasPrefixUnary" : true,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 2,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Exp",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst",
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Num",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o0"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Regex",
          "regex" : {
            "kind" : "regex.Seq",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "regex.Alt",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "start" : 49,
                    "end" : 57
                  }
                ]
              },
              {
                "kind" : "regex.Star",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 48,
                      "end" : 57
                    }
                  ]
                },
                "separators" : [ ]
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : 1,
        "hasPrefixUnary" : true,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 2,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "a0.lExt",
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
          "label" : "o0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "parameters" : [
            "a0.lExt",
            "i",
            "ind",
            "fst"
          ],
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "a0.lExt",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Plus"
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Decl",
          "label" : "a1",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Equal",
                "lhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a1"
                    }
                  ]
                },
                "rhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a0"
                    }
                  ]
                }
              }
            },
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Equal",
                "lhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a1"
                    }
                  ]
                },
                "rhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a0"
                    }
                  ]
                }
              }
            },
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "a1"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "LeftExtent",
              "label" : "a1"
            },
            {
              "kind" : "Indent",
              "fun" : "indent",
              "arguments" : [
                {
                  "kind" : "LeftExtent",
                  "label" : "a1"
                }
              ]
            },
            {
              "kind" : "Integer",
              "value" : 1
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "LEFT_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : 1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Offside",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Nonterminal",
            "name" : "Decl",
            "label" : "a1",
            "preConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a1"
                      }
                    ]
                  },
                  "rhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a0"
                      }
                    ]
                  }
                }
              }
            ],
            "postConditions" : [ ]
          }
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "a0.lExt",
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Decl",
          "label" : "a1",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Equal",
                "lhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a1"
                    }
                  ]
                },
                "rhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a0"
                    }
                  ]
                }
              }
            },
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Equal",
                "lhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a1"
                    }
                  ]
                },
                "rhs" : {
                  "kind" : "Indent",
                  "fun" : "indent",
                  "arguments" : [
                    {
                      "kind" : "LeftExtent",
                      "label" : "a0"
                    }
                  ]
                }
              }
            },
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "a1"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "LeftExtent",
              "label" : "a1"
            },
            {
              "kind" : "Indent",
              "fun" : "indent",
              "arguments" : [
                {
                  "kind" : "LeftExtent",
                  "label" : "a1"
                }
              ]
            },
            {
              "kind" : "Integer",
              "value" : 1
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Offside",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Nonterminal",
            "name" : "Decl",
            "label" : "a1",
            "preConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a1"
                      }
                    ]
                  },
                  "rhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a0"
                      }
                    ]
                  }
                }
              }
            ],
            "postConditions" : [ ]
          }
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "a0.lExt",
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl+",
          "label" : "o0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "parameters" : [
            "a0.lExt",
            "i",
            "ind",
            "fst"
          ],
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "a0.lExt",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Star",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
        "label" : "a0",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Offside",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Nonterminal",
            "name" : "Decl",
            "label" : "a1",
            "preConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a1"
                      }
                    ]
                  },
                  "rhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a0"
                      }
                    ]
                  }
                }
              }
            ],
            "postConditions" : [ ]
          }
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "a0.lExt",
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Star"
      },
      "body" : [ ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Star",
        "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
        "label" : "a0",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Offside",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Nonterminal",
            "name" : "Decl",
            "label" : "a1",
            "preConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a1"
                      }
                    ]
                  },
                  "rhs" : {
                    "kind" : "Indent",
                    "fun" : "indent",
                    "arguments" : [
                      {
                        "kind" : "LeftExtent",
                        "label" : "a0"
                      }
                    ]
                  }
                }
              }
            ],
            "postConditions" : [ ]
          }
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Decls",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
          "label" : "a0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "parameters" : [
            "a0.lExt",
            "i",
            "ind",
            "fst"
          ],
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "a0.lExt",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "a0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "a0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Star"
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Decls",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "'{'",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o0"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 123
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Decl",
          "label" : "o1",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : false
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "(';' Decl)*",
          "label" : "o2",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Star"
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "'}'",
          "label" : "o3",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o3"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 125
          }
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(';' Decl)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Seq"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "';'",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o0"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 59
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Decl",
          "label" : "o1",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : false
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Sequence",
        "name" : "(';' Decl)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "symbols" : [
          {
            "kind" : "Terminal",
            "name" : "';'",
            "preConditions" : [ ],
            "postConditions" : [ ],
            "nodeType" : "Literal",
            "regex" : {
              "kind" : "Char",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "val" : 59
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "Decl",
            "preConditions" : [ ],
            "postConditions" : [ ]
          }
        ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(';' Decl)+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(';' Decl)+",
          "label" : "o0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Plus"
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "(';' Decl)",
          "label" : "o1",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o1"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "LEFT_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : 1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(';' Decl)+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Sequence",
          "name" : "(';' Decl)",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "';'",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 59
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Decl",
              "preConditions" : [ ],
              "postConditions" : [ ]
            }
          ]
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(';' Decl)+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(';' Decl)",
          "label" : "o0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(';' Decl)+",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Sequence",
          "name" : "(';' Decl)",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "';'",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 59
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Decl",
              "preConditions" : [ ],
              "postConditions" : [ ]
            }
          ]
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(';' Decl)*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(';' Decl)+",
          "label" : "o0",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o0"
              },
              "returnIndex" : false
            }
          ],
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Star",
        "name" : "(';' Decl)*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Sequence",
          "name" : "(';' Decl)",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "';'",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 59
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Decl",
              "preConditions" : [ ],
              "postConditions" : [ ]
            }
          ]
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(';' Decl)*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ],
        "nodeType" : "Star"
      },
      "body" : [ ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Star",
        "name" : "(';' Decl)*",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "s" : {
          "kind" : "Sequence",
          "name" : "(';' Decl)",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "';'",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Literal",
              "regex" : {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 59
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Decl",
              "preConditions" : [ ],
              "postConditions" : [ ]
            }
          ]
        },
        "separators" : [ ]
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Decl",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "parameters" : [
          "i",
          "ind",
          "fst"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Id",
          "label" : "o0",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o0"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Regex",
          "regex" : {
            "kind" : "regex.Seq",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "regex.Alt",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "start" : 97,
                    "end" : 122
                  },
                  {
                    "kind" : "CharRange",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "start" : 65,
                    "end" : 90
                  }
                ]
              },
              {
                "kind" : "regex.Star",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    },
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 65,
                      "end" : 90
                    },
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 48,
                      "end" : 57
                    }
                  ]
                },
                "separators" : [ ]
              }
            ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Terminal",
          "name" : "'='",
          "label" : "o1",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "OrIndent",
                "index" : {
                  "kind" : "Name",
                  "name" : "i",
                  "i" : -1
                },
                "ind" : {
                  "kind" : "Name",
                  "name" : "ind",
                  "i" : -1
                },
                "first" : {
                  "kind" : "Name",
                  "name" : "fst",
                  "i" : -1
                },
                "lExt" : {
                  "kind" : "LeftExtent",
                  "label" : "o1"
                }
              }
            }
          ],
          "postConditions" : [ ],
          "nodeType" : "Literal",
          "regex" : {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 61
          }
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "label" : "o2",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : true
            },
            {
              "kind" : "Name",
              "name" : "ind",
              "i" : -1
            },
            {
              "kind" : "AndIndent",
              "index" : {
                "kind" : "Name",
                "name" : "i",
                "i" : -1
              },
              "first" : {
                "kind" : "Name",
                "name" : "fst",
                "i" : -1
              },
              "lExt" : {
                "kind" : "LeftExtent",
                "label" : "o2"
              },
              "returnIndex" : false
            },
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "$_Exp",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Exp",
          "label" : "child",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            },
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Terminal",
        "name" : "Whitespaces",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Layout",
        "regex" : {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 10
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 13
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 9
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 12
              },
              {
                "kind" : "Char",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "val" : 32
              }
            ]
          },
          "separators" : [ ]
        }
      },
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start(Start)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Start"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Start",
          "label" : "top",
          "preConditions" : [ ],
          "postConditions" : [ ]
        },
        {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Start",
        "name" : "Start(Start)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "startSymbol" : "Start"
      }
    }
  ],
  "regularExpressionDefinitions" : {
    "Num" : {
      "kind" : "regex.Seq",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "symbols" : [
        {
          "kind" : "regex.Alt",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "symbols" : [
            {
              "kind" : "CharRange",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "start" : 49,
              "end" : 57
            }
          ]
        },
        {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "CharRange",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "start" : 48,
                "end" : 57
              }
            ]
          },
          "separators" : [ ]
        }
      ]
    },
    "Id" : {
      "kind" : "regex.Seq",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "symbols" : [
        {
          "kind" : "regex.Alt",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "symbols" : [
            {
              "kind" : "CharRange",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "start" : 97,
              "end" : 122
            },
            {
              "kind" : "CharRange",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "start" : 65,
              "end" : 90
            }
          ]
        },
        {
          "kind" : "regex.Star",
          "lookaheads" : [ ],
          "lookbehinds" : [ ],
          "regex" : {
            "kind" : "regex.Alt",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "symbols" : [
              {
                "kind" : "CharRange",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "start" : 97,
                "end" : 122
              },
              {
                "kind" : "CharRange",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "start" : 65,
                "end" : 90
              },
              {
                "kind" : "CharRange",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "start" : 48,
                "end" : 57
              }
            ]
          },
          "separators" : [ ]
        }
      ]
    }
  },
  "ebnfLefts" : {
    "Decl+" : [
      "Decl"
    ],
    "Decl*" : [
      "Decl+"
    ]
  },
  "ebnfRights" : {
    "Decl+" : [
      "Num",
      "Decl",
      "Exp"
    ],
    "Decl*" : [
      "Num",
      "Decl",
      "Decl+",
      "Exp"
    ]
  },
  "startSymbols" : [
    {
      "kind" : "Start",
      "name" : "Start(Start)",
      "preConditions" : [ ],
      "postConditions" : [ ],
      "startSymbol" : "Start"
    },
    {
      "kind" : "Start",
      "name" : "Start(Start)",
      "preConditions" : [ ],
      "postConditions" : [ ],
      "startSymbol" : "Start"
    }
  ],
  "globals" : { }
}