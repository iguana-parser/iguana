{
  "kind" : "MetaSymbolNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(Start)",
    "startSymbol" : "Start"
  },
  "start" : 0,
  "end" : 74,
  "children" : [
    {
      "kind" : "NonterminalNode",
      "rule" : {
        "head" : {
          "kind" : "Nonterminal",
          "name" : "Start"
        },
        "body" : [
          {
            "kind" : "Nonterminal",
            "name" : "Exp",
            "arguments" : [
              {
                "kind" : "Integer",
                "value" : 0
              },
              {
                "kind" : "Integer",
                "value" : 0
              },
              {
                "kind" : "Integer",
                "value" : 0
              },
              {
                "kind" : "Integer",
                "value" : 0
              }
            ]
          }
        ],
        "layout" : {
          "kind" : "Terminal",
          "name" : "Whitespaces",
          "nodeType" : "Layout",
          "regex" : {
            "kind" : "regex.Star",
            "regex" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 10
                },
                {
                  "kind" : "Char",
                  "val" : 13
                },
                {
                  "kind" : "Char",
                  "val" : 9
                },
                {
                  "kind" : "Char",
                  "val" : 12
                },
                {
                  "kind" : "Char",
                  "val" : 32
                }
              ]
            }
          }
        },
        "recursion" : "NON_REC",
        "irecursion" : "NON_REC",
        "associativity" : "UNDEFINED",
        "precedence" : -1,
        "precedenceLevel" : {
          "lhs" : 1,
          "rhs" : 1,
          "undefined" : -1,
          "hasPrefixUnary" : false,
          "hasPostfixUnary" : false,
          "hasPrefixUnaryBelow" : false,
          "hasPostfixUnaryBelow" : false,
          "index" : 1,
          "containsAssociativityGroup" : false,
          "assoc_lhs" : -1,
          "assoc_rhs" : -1
        }
      },
      "children" : [
        {
          "kind" : "NonterminalNode",
          "rule" : {
            "head" : {
              "kind" : "Nonterminal",
              "name" : "Exp",
              "parameters" : [
                "i",
                "ind",
                "fst",
                "p"
              ]
            },
            "body" : [
              {
                "kind" : "Terminal",
                "name" : "let",
                "label" : "o0",
                "preConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "OrIndent",
                      "index" : {
                        "kind" : "Name",
                        "name" : "i",
                        "i" : -1
                      },
                      "ind" : {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      "first" : {
                        "kind" : "Name",
                        "name" : "fst",
                        "i" : -1
                      },
                      "lExt" : {
                        "kind" : "LeftExtent",
                        "label" : "o0"
                      }
                    }
                  }
                ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 108
                    },
                    {
                      "kind" : "Char",
                      "val" : 101
                    },
                    {
                      "kind" : "Char",
                      "val" : 116
                    }
                  ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "Whitespaces",
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "val" : 12
                      },
                      {
                        "kind" : "Char",
                        "val" : 32
                      }
                    ]
                  }
                }
              },
              {
                "kind" : "Nonterminal",
                "name" : "Decls",
                "label" : "o1",
                "arguments" : [
                  {
                    "kind" : "AndIndent",
                    "index" : {
                      "kind" : "Name",
                      "name" : "i",
                      "i" : -1
                    },
                    "first" : {
                      "kind" : "Name",
                      "name" : "fst",
                      "i" : -1
                    },
                    "lExt" : {
                      "kind" : "LeftExtent",
                      "label" : "o1"
                    },
                    "returnIndex" : true
                  },
                  {
                    "kind" : "Name",
                    "name" : "ind",
                    "i" : -1
                  },
                  {
                    "kind" : "AndIndent",
                    "index" : {
                      "kind" : "Name",
                      "name" : "i",
                      "i" : -1
                    },
                    "first" : {
                      "kind" : "Name",
                      "name" : "fst",
                      "i" : -1
                    },
                    "lExt" : {
                      "kind" : "LeftExtent",
                      "label" : "o1"
                    },
                    "returnIndex" : false
                  }
                ]
              },
              {
                "kind" : "Terminal",
                "name" : "Whitespaces",
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "val" : 12
                      },
                      {
                        "kind" : "Char",
                        "val" : 32
                      }
                    ]
                  }
                }
              },
              {
                "kind" : "Terminal",
                "name" : "in",
                "label" : "o2",
                "preConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "OrIndent",
                      "index" : {
                        "kind" : "Name",
                        "name" : "i",
                        "i" : -1
                      },
                      "ind" : {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      "first" : {
                        "kind" : "Name",
                        "name" : "fst",
                        "i" : -1
                      },
                      "lExt" : {
                        "kind" : "LeftExtent",
                        "label" : "o2"
                      }
                    }
                  }
                ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 105
                    },
                    {
                      "kind" : "Char",
                      "val" : 110
                    }
                  ]
                }
              },
              {
                "kind" : "Terminal",
                "name" : "Whitespaces",
                "nodeType" : "Layout",
                "regex" : {
                  "kind" : "regex.Star",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "val" : 13
                      },
                      {
                        "kind" : "Char",
                        "val" : 9
                      },
                      {
                        "kind" : "Char",
                        "val" : 12
                      },
                      {
                        "kind" : "Char",
                        "val" : 32
                      }
                    ]
                  }
                }
              },
              {
                "kind" : "Nonterminal",
                "name" : "Exp",
                "label" : "o3",
                "arguments" : [
                  {
                    "kind" : "AndIndent",
                    "index" : {
                      "kind" : "Name",
                      "name" : "i",
                      "i" : -1
                    },
                    "first" : {
                      "kind" : "Name",
                      "name" : "fst",
                      "i" : -1
                    },
                    "lExt" : {
                      "kind" : "LeftExtent",
                      "label" : "o3"
                    },
                    "returnIndex" : true
                  },
                  {
                    "kind" : "Name",
                    "name" : "ind",
                    "i" : -1
                  },
                  {
                    "kind" : "AndIndent",
                    "index" : {
                      "kind" : "Name",
                      "name" : "i",
                      "i" : -1
                    },
                    "first" : {
                      "kind" : "Name",
                      "name" : "fst",
                      "i" : -1
                    },
                    "lExt" : {
                      "kind" : "LeftExtent",
                      "label" : "o3"
                    },
                    "returnIndex" : false
                  },
                  {
                    "kind" : "Integer",
                    "value" : 0
                  }
                ]
              },
              {
                "kind" : "Return",
                "name" : "{1}",
                "expression" : {
                  "kind" : "Integer",
                  "value" : 1
                }
              }
            ],
            "layout" : {
              "kind" : "Terminal",
              "name" : "Whitespaces",
              "nodeType" : "Layout",
              "regex" : {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 10
                    },
                    {
                      "kind" : "Char",
                      "val" : 13
                    },
                    {
                      "kind" : "Char",
                      "val" : 9
                    },
                    {
                      "kind" : "Char",
                      "val" : 12
                    },
                    {
                      "kind" : "Char",
                      "val" : 32
                    }
                  ]
                }
              }
            },
            "recursion" : "RIGHT_REC",
            "irecursion" : "NON_REC",
            "associativity" : "UNDEFINED",
            "precedence" : 1,
            "precedenceLevel" : {
              "lhs" : 1,
              "rhs" : 1,
              "undefined" : 1,
              "hasPrefixUnary" : true,
              "hasPostfixUnary" : false,
              "hasPrefixUnaryBelow" : false,
              "hasPostfixUnaryBelow" : false,
              "index" : 2,
              "containsAssociativityGroup" : false,
              "assoc_lhs" : -1,
              "assoc_rhs" : -1
            }
          },
          "children" : [
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "let",
                "label" : "o0",
                "preConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "OrIndent",
                      "index" : {
                        "kind" : "Name",
                        "name" : "i",
                        "i" : -1
                      },
                      "ind" : {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      "first" : {
                        "kind" : "Name",
                        "name" : "fst",
                        "i" : -1
                      },
                      "lExt" : {
                        "kind" : "LeftExtent",
                        "label" : "o0"
                      }
                    }
                  }
                ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 108
                    },
                    {
                      "kind" : "Char",
                      "val" : 101
                    },
                    {
                      "kind" : "Char",
                      "val" : 116
                    }
                  ]
                }
              },
              "start" : 0,
              "end" : 3
            },
            {
              "kind" : "NonterminalNode",
              "rule" : {
                "head" : {
                  "kind" : "Nonterminal",
                  "name" : "Decls",
                  "parameters" : [
                    "i",
                    "ind",
                    "fst"
                  ]
                },
                "body" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
                    "label" : "a0",
                    "parameters" : [
                      "a0.lExt",
                      "i",
                      "ind",
                      "fst"
                    ],
                    "arguments" : [
                      {
                        "kind" : "Name",
                        "name" : "a0.lExt",
                        "i" : -1
                      },
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "a0"
                        },
                        "returnIndex" : true
                      },
                      {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "a0"
                        },
                        "returnIndex" : false
                      }
                    ],
                    "nodeType" : "Star"
                  }
                ],
                "layout" : {
                  "kind" : "Terminal",
                  "name" : "Whitespaces",
                  "nodeType" : "Layout",
                  "regex" : {
                    "kind" : "regex.Star",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 10
                        },
                        {
                          "kind" : "Char",
                          "val" : 13
                        },
                        {
                          "kind" : "Char",
                          "val" : 9
                        },
                        {
                          "kind" : "Char",
                          "val" : 12
                        },
                        {
                          "kind" : "Char",
                          "val" : 32
                        }
                      ]
                    }
                  }
                },
                "recursion" : "NON_REC",
                "irecursion" : "NON_REC",
                "associativity" : "UNDEFINED",
                "precedence" : -1,
                "precedenceLevel" : {
                  "lhs" : 1,
                  "rhs" : 1,
                  "undefined" : -1,
                  "hasPrefixUnary" : false,
                  "hasPostfixUnary" : false,
                  "hasPrefixUnaryBelow" : false,
                  "hasPostfixUnaryBelow" : false,
                  "index" : 1,
                  "containsAssociativityGroup" : false,
                  "assoc_lhs" : -1,
                  "assoc_rhs" : -1
                }
              },
              "children" : [
                {
                  "kind" : "MetaSymbolNode",
                  "symbol" : {
                    "kind" : "Star",
                    "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
                    "label" : "a0",
                    "s" : {
                      "kind" : "Offside",
                      "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
                      "symbol" : {
                        "kind" : "Nonterminal",
                        "name" : "Decl",
                        "label" : "a1",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "Equal",
                              "lhs" : {
                                "kind" : "Indent",
                                "fun" : "indent",
                                "arguments" : [
                                  {
                                    "kind" : "LeftExtent",
                                    "label" : "a1"
                                  }
                                ]
                              },
                              "rhs" : {
                                "kind" : "Indent",
                                "fun" : "indent",
                                "arguments" : [
                                  {
                                    "kind" : "LeftExtent",
                                    "label" : "a0"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "start" : 4,
                  "end" : 60,
                  "children" : [
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Decl",
                          "parameters" : [
                            "i",
                            "ind",
                            "fst"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Terminal",
                            "name" : "Id",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 97,
                                      "end" : 122
                                    },
                                    {
                                      "kind" : "CharRange",
                                      "start" : 65,
                                      "end" : 90
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 97,
                                        "end" : 122
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "Whitespaces",
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 12
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 32
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "=",
                            "label" : "o1",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o1"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 61
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "Whitespaces",
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 12
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 32
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "Exp",
                            "label" : "o2",
                            "arguments" : [
                              {
                                "kind" : "AndIndent",
                                "index" : {
                                  "kind" : "Name",
                                  "name" : "i",
                                  "i" : -1
                                },
                                "first" : {
                                  "kind" : "Name",
                                  "name" : "fst",
                                  "i" : -1
                                },
                                "lExt" : {
                                  "kind" : "LeftExtent",
                                  "label" : "o2"
                                },
                                "returnIndex" : true
                              },
                              {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              {
                                "kind" : "AndIndent",
                                "index" : {
                                  "kind" : "Name",
                                  "name" : "i",
                                  "i" : -1
                                },
                                "first" : {
                                  "kind" : "Name",
                                  "name" : "fst",
                                  "i" : -1
                                },
                                "lExt" : {
                                  "kind" : "LeftExtent",
                                  "label" : "o2"
                                },
                                "returnIndex" : false
                              },
                              {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            ]
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "Whitespaces",
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 12
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 32
                                }
                              ]
                            }
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 1,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "TerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "Id",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 97,
                                      "end" : 122
                                    },
                                    {
                                      "kind" : "CharRange",
                                      "start" : 65,
                                      "end" : 90
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 97,
                                        "end" : 122
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "start" : 4,
                          "end" : 5
                        },
                        {
                          "kind" : "KeywordTerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "=",
                            "label" : "o1",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o1"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 61
                            }
                          },
                          "start" : 6,
                          "end" : 7
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "Exp",
                              "parameters" : [
                                "i",
                                "ind",
                                "fst",
                                "p"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "Num",
                                "label" : "o0",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o0"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "regex.Alt",
                                      "symbols" : [
                                        {
                                          "kind" : "CharRange",
                                          "start" : 49,
                                          "end" : 57
                                        }
                                      ]
                                    },
                                    {
                                      "kind" : "regex.Star",
                                      "regex" : {
                                        "kind" : "regex.Alt",
                                        "symbols" : [
                                          {
                                            "kind" : "CharRange",
                                            "start" : 48,
                                            "end" : 57
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "kind" : "Return",
                                "name" : "{0}",
                                "expression" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "Whitespaces",
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 12
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 32
                                    }
                                  ]
                                }
                              }
                            },
                            "recursion" : "NON_REC",
                            "irecursion" : "NON_REC",
                            "associativity" : "UNDEFINED",
                            "precedence" : -1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : 1,
                              "hasPrefixUnary" : true,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "hasPostfixUnaryBelow" : false,
                              "index" : 2,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "TerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "Num",
                                "label" : "o0",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o0"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Regex",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "regex.Alt",
                                      "symbols" : [
                                        {
                                          "kind" : "CharRange",
                                          "start" : 49,
                                          "end" : 57
                                        }
                                      ]
                                    },
                                    {
                                      "kind" : "regex.Star",
                                      "regex" : {
                                        "kind" : "regex.Alt",
                                        "symbols" : [
                                          {
                                            "kind" : "CharRange",
                                            "start" : 48,
                                            "end" : 57
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "start" : 8,
                              "end" : 9
                            }
                          ],
                          "start" : 8,
                          "end" : 9
                        }
                      ],
                      "start" : 4,
                      "end" : 9
                    },
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Decl",
                          "parameters" : [
                            "i",
                            "ind",
                            "fst"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Terminal",
                            "name" : "Id",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 97,
                                      "end" : 122
                                    },
                                    {
                                      "kind" : "CharRange",
                                      "start" : 65,
                                      "end" : 90
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 97,
                                        "end" : 122
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "Whitespaces",
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 12
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 32
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "=",
                            "label" : "o1",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o1"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 61
                            }
                          },
                          {
                            "kind" : "Terminal",
                            "name" : "Whitespaces",
                            "nodeType" : "Layout",
                            "regex" : {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "Char",
                                    "val" : 10
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 13
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 9
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 12
                                  },
                                  {
                                    "kind" : "Char",
                                    "val" : 32
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "kind" : "Nonterminal",
                            "name" : "Exp",
                            "label" : "o2",
                            "arguments" : [
                              {
                                "kind" : "AndIndent",
                                "index" : {
                                  "kind" : "Name",
                                  "name" : "i",
                                  "i" : -1
                                },
                                "first" : {
                                  "kind" : "Name",
                                  "name" : "fst",
                                  "i" : -1
                                },
                                "lExt" : {
                                  "kind" : "LeftExtent",
                                  "label" : "o2"
                                },
                                "returnIndex" : true
                              },
                              {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              {
                                "kind" : "AndIndent",
                                "index" : {
                                  "kind" : "Name",
                                  "name" : "i",
                                  "i" : -1
                                },
                                "first" : {
                                  "kind" : "Name",
                                  "name" : "fst",
                                  "i" : -1
                                },
                                "lExt" : {
                                  "kind" : "LeftExtent",
                                  "label" : "o2"
                                },
                                "returnIndex" : false
                              },
                              {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            ]
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "Whitespaces",
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 12
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 32
                                }
                              ]
                            }
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : -1,
                          "hasPrefixUnary" : false,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 1,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "TerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "Id",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 97,
                                      "end" : 122
                                    },
                                    {
                                      "kind" : "CharRange",
                                      "start" : 65,
                                      "end" : 90
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 97,
                                        "end" : 122
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 65,
                                        "end" : 90
                                      },
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "start" : 14,
                          "end" : 15
                        },
                        {
                          "kind" : "KeywordTerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "=",
                            "label" : "o1",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o1"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Literal",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 61
                            }
                          },
                          "start" : 16,
                          "end" : 17
                        },
                        {
                          "kind" : "NonterminalNode",
                          "rule" : {
                            "head" : {
                              "kind" : "Nonterminal",
                              "name" : "Exp",
                              "parameters" : [
                                "i",
                                "ind",
                                "fst",
                                "p"
                              ]
                            },
                            "body" : [
                              {
                                "kind" : "Terminal",
                                "name" : "let",
                                "label" : "o0",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o0"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 108
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 101
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 116
                                    }
                                  ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Whitespaces",
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 12
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 32
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "kind" : "Nonterminal",
                                "name" : "Decls",
                                "label" : "o1",
                                "arguments" : [
                                  {
                                    "kind" : "AndIndent",
                                    "index" : {
                                      "kind" : "Name",
                                      "name" : "i",
                                      "i" : -1
                                    },
                                    "first" : {
                                      "kind" : "Name",
                                      "name" : "fst",
                                      "i" : -1
                                    },
                                    "lExt" : {
                                      "kind" : "LeftExtent",
                                      "label" : "o1"
                                    },
                                    "returnIndex" : true
                                  },
                                  {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  {
                                    "kind" : "AndIndent",
                                    "index" : {
                                      "kind" : "Name",
                                      "name" : "i",
                                      "i" : -1
                                    },
                                    "first" : {
                                      "kind" : "Name",
                                      "name" : "fst",
                                      "i" : -1
                                    },
                                    "lExt" : {
                                      "kind" : "LeftExtent",
                                      "label" : "o1"
                                    },
                                    "returnIndex" : false
                                  }
                                ]
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Whitespaces",
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 12
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 32
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "in",
                                "label" : "o2",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o2"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 105
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 110
                                    }
                                  ]
                                }
                              },
                              {
                                "kind" : "Terminal",
                                "name" : "Whitespaces",
                                "nodeType" : "Layout",
                                "regex" : {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "Char",
                                        "val" : 10
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 13
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 9
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 12
                                      },
                                      {
                                        "kind" : "Char",
                                        "val" : 32
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "kind" : "Nonterminal",
                                "name" : "Exp",
                                "label" : "o3",
                                "arguments" : [
                                  {
                                    "kind" : "AndIndent",
                                    "index" : {
                                      "kind" : "Name",
                                      "name" : "i",
                                      "i" : -1
                                    },
                                    "first" : {
                                      "kind" : "Name",
                                      "name" : "fst",
                                      "i" : -1
                                    },
                                    "lExt" : {
                                      "kind" : "LeftExtent",
                                      "label" : "o3"
                                    },
                                    "returnIndex" : true
                                  },
                                  {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  {
                                    "kind" : "AndIndent",
                                    "index" : {
                                      "kind" : "Name",
                                      "name" : "i",
                                      "i" : -1
                                    },
                                    "first" : {
                                      "kind" : "Name",
                                      "name" : "fst",
                                      "i" : -1
                                    },
                                    "lExt" : {
                                      "kind" : "LeftExtent",
                                      "label" : "o3"
                                    },
                                    "returnIndex" : false
                                  },
                                  {
                                    "kind" : "Integer",
                                    "value" : 0
                                  }
                                ]
                              },
                              {
                                "kind" : "Return",
                                "name" : "{1}",
                                "expression" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              }
                            ],
                            "layout" : {
                              "kind" : "Terminal",
                              "name" : "Whitespaces",
                              "nodeType" : "Layout",
                              "regex" : {
                                "kind" : "regex.Star",
                                "regex" : {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 10
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 13
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 9
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 12
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 32
                                    }
                                  ]
                                }
                              }
                            },
                            "recursion" : "RIGHT_REC",
                            "irecursion" : "NON_REC",
                            "associativity" : "UNDEFINED",
                            "precedence" : 1,
                            "precedenceLevel" : {
                              "lhs" : 1,
                              "rhs" : 1,
                              "undefined" : 1,
                              "hasPrefixUnary" : true,
                              "hasPostfixUnary" : false,
                              "hasPrefixUnaryBelow" : false,
                              "hasPostfixUnaryBelow" : false,
                              "index" : 2,
                              "containsAssociativityGroup" : false,
                              "assoc_lhs" : -1,
                              "assoc_rhs" : -1
                            }
                          },
                          "children" : [
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "let",
                                "label" : "o0",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o0"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 108
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 101
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 116
                                    }
                                  ]
                                }
                              },
                              "start" : 18,
                              "end" : 21
                            },
                            {
                              "kind" : "NonterminalNode",
                              "rule" : {
                                "head" : {
                                  "kind" : "Nonterminal",
                                  "name" : "Decls",
                                  "parameters" : [
                                    "i",
                                    "ind",
                                    "fst"
                                  ]
                                },
                                "body" : [
                                  {
                                    "kind" : "Nonterminal",
                                    "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
                                    "label" : "a0",
                                    "parameters" : [
                                      "a0.lExt",
                                      "i",
                                      "ind",
                                      "fst"
                                    ],
                                    "arguments" : [
                                      {
                                        "kind" : "Name",
                                        "name" : "a0.lExt",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "a0"
                                        },
                                        "returnIndex" : true
                                      },
                                      {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "a0"
                                        },
                                        "returnIndex" : false
                                      }
                                    ],
                                    "nodeType" : "Star"
                                  }
                                ],
                                "layout" : {
                                  "kind" : "Terminal",
                                  "name" : "Whitespaces",
                                  "nodeType" : "Layout",
                                  "regex" : {
                                    "kind" : "regex.Star",
                                    "regex" : {
                                      "kind" : "regex.Alt",
                                      "symbols" : [
                                        {
                                          "kind" : "Char",
                                          "val" : 10
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 13
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 9
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 12
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 32
                                        }
                                      ]
                                    }
                                  }
                                },
                                "recursion" : "NON_REC",
                                "irecursion" : "NON_REC",
                                "associativity" : "UNDEFINED",
                                "precedence" : -1,
                                "precedenceLevel" : {
                                  "lhs" : 1,
                                  "rhs" : 1,
                                  "undefined" : -1,
                                  "hasPrefixUnary" : false,
                                  "hasPostfixUnary" : false,
                                  "hasPrefixUnaryBelow" : false,
                                  "hasPostfixUnaryBelow" : false,
                                  "index" : 1,
                                  "containsAssociativityGroup" : false,
                                  "assoc_lhs" : -1,
                                  "assoc_rhs" : -1
                                }
                              },
                              "children" : [
                                {
                                  "kind" : "MetaSymbolNode",
                                  "symbol" : {
                                    "kind" : "Star",
                                    "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl*",
                                    "label" : "a0",
                                    "s" : {
                                      "kind" : "Offside",
                                      "name" : "offside [indent(a1.lExt) == indent(a0.lExt)]a1:Decl",
                                      "symbol" : {
                                        "kind" : "Nonterminal",
                                        "name" : "Decl",
                                        "label" : "a1",
                                        "preConditions" : [
                                          {
                                            "kind" : "DataDependentCondition",
                                            "type" : "DATA_DEPENDENT",
                                            "expression" : {
                                              "kind" : "Equal",
                                              "lhs" : {
                                                "kind" : "Indent",
                                                "fun" : "indent",
                                                "arguments" : [
                                                  {
                                                    "kind" : "LeftExtent",
                                                    "label" : "a1"
                                                  }
                                                ]
                                              },
                                              "rhs" : {
                                                "kind" : "Indent",
                                                "fun" : "indent",
                                                "arguments" : [
                                                  {
                                                    "kind" : "LeftExtent",
                                                    "label" : "a0"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "start" : 22,
                                  "end" : 45,
                                  "children" : [
                                    {
                                      "kind" : "NonterminalNode",
                                      "rule" : {
                                        "head" : {
                                          "kind" : "Nonterminal",
                                          "name" : "Decl",
                                          "parameters" : [
                                            "i",
                                            "ind",
                                            "fst"
                                          ]
                                        },
                                        "body" : [
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Id",
                                            "label" : "o0",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o0"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Regex",
                                            "regex" : {
                                              "kind" : "regex.Seq",
                                              "symbols" : [
                                                {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 97,
                                                      "end" : 122
                                                    },
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 65,
                                                      "end" : 90
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind" : "regex.Star",
                                                  "regex" : {
                                                    "kind" : "regex.Alt",
                                                    "symbols" : [
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 97,
                                                        "end" : 122
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 65,
                                                        "end" : 90
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 48,
                                                        "end" : 57
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Whitespaces",
                                            "nodeType" : "Layout",
                                            "regex" : {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 10
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 13
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 9
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 12
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 32
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "=",
                                            "label" : "o1",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o1"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Literal",
                                            "regex" : {
                                              "kind" : "Char",
                                              "val" : 61
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Whitespaces",
                                            "nodeType" : "Layout",
                                            "regex" : {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 10
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 13
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 9
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 12
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 32
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "kind" : "Nonterminal",
                                            "name" : "Exp",
                                            "label" : "o2",
                                            "arguments" : [
                                              {
                                                "kind" : "AndIndent",
                                                "index" : {
                                                  "kind" : "Name",
                                                  "name" : "i",
                                                  "i" : -1
                                                },
                                                "first" : {
                                                  "kind" : "Name",
                                                  "name" : "fst",
                                                  "i" : -1
                                                },
                                                "lExt" : {
                                                  "kind" : "LeftExtent",
                                                  "label" : "o2"
                                                },
                                                "returnIndex" : true
                                              },
                                              {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              {
                                                "kind" : "AndIndent",
                                                "index" : {
                                                  "kind" : "Name",
                                                  "name" : "i",
                                                  "i" : -1
                                                },
                                                "first" : {
                                                  "kind" : "Name",
                                                  "name" : "fst",
                                                  "i" : -1
                                                },
                                                "lExt" : {
                                                  "kind" : "LeftExtent",
                                                  "label" : "o2"
                                                },
                                                "returnIndex" : false
                                              },
                                              {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            ]
                                          }
                                        ],
                                        "layout" : {
                                          "kind" : "Terminal",
                                          "name" : "Whitespaces",
                                          "nodeType" : "Layout",
                                          "regex" : {
                                            "kind" : "regex.Star",
                                            "regex" : {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "Char",
                                                  "val" : 10
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 13
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 9
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 12
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 32
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "recursion" : "NON_REC",
                                        "irecursion" : "NON_REC",
                                        "associativity" : "UNDEFINED",
                                        "precedence" : -1,
                                        "precedenceLevel" : {
                                          "lhs" : 1,
                                          "rhs" : 1,
                                          "undefined" : -1,
                                          "hasPrefixUnary" : false,
                                          "hasPostfixUnary" : false,
                                          "hasPrefixUnaryBelow" : false,
                                          "hasPostfixUnaryBelow" : false,
                                          "index" : 1,
                                          "containsAssociativityGroup" : false,
                                          "assoc_lhs" : -1,
                                          "assoc_rhs" : -1
                                        }
                                      },
                                      "children" : [
                                        {
                                          "kind" : "TerminalNode",
                                          "terminal" : {
                                            "kind" : "Terminal",
                                            "name" : "Id",
                                            "label" : "o0",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o0"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Regex",
                                            "regex" : {
                                              "kind" : "regex.Seq",
                                              "symbols" : [
                                                {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 97,
                                                      "end" : 122
                                                    },
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 65,
                                                      "end" : 90
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind" : "regex.Star",
                                                  "regex" : {
                                                    "kind" : "regex.Alt",
                                                    "symbols" : [
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 97,
                                                        "end" : 122
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 65,
                                                        "end" : 90
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 48,
                                                        "end" : 57
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "start" : 22,
                                          "end" : 23
                                        },
                                        {
                                          "kind" : "KeywordTerminalNode",
                                          "terminal" : {
                                            "kind" : "Terminal",
                                            "name" : "=",
                                            "label" : "o1",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o1"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Literal",
                                            "regex" : {
                                              "kind" : "Char",
                                              "val" : 61
                                            }
                                          },
                                          "start" : 24,
                                          "end" : 25
                                        },
                                        {
                                          "kind" : "NonterminalNode",
                                          "rule" : {
                                            "head" : {
                                              "kind" : "Nonterminal",
                                              "name" : "Exp",
                                              "parameters" : [
                                                "i",
                                                "ind",
                                                "fst",
                                                "p"
                                              ]
                                            },
                                            "body" : [
                                              {
                                                "kind" : "Terminal",
                                                "name" : "Num",
                                                "label" : "o0",
                                                "preConditions" : [
                                                  {
                                                    "kind" : "DataDependentCondition",
                                                    "type" : "DATA_DEPENDENT",
                                                    "expression" : {
                                                      "kind" : "OrIndent",
                                                      "index" : {
                                                        "kind" : "Name",
                                                        "name" : "i",
                                                        "i" : -1
                                                      },
                                                      "ind" : {
                                                        "kind" : "Name",
                                                        "name" : "ind",
                                                        "i" : -1
                                                      },
                                                      "first" : {
                                                        "kind" : "Name",
                                                        "name" : "fst",
                                                        "i" : -1
                                                      },
                                                      "lExt" : {
                                                        "kind" : "LeftExtent",
                                                        "label" : "o0"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "nodeType" : "Regex",
                                                "regex" : {
                                                  "kind" : "regex.Seq",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "regex.Alt",
                                                      "symbols" : [
                                                        {
                                                          "kind" : "CharRange",
                                                          "start" : 49,
                                                          "end" : 57
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "kind" : "regex.Star",
                                                      "regex" : {
                                                        "kind" : "regex.Alt",
                                                        "symbols" : [
                                                          {
                                                            "kind" : "CharRange",
                                                            "start" : 48,
                                                            "end" : 57
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "kind" : "Return",
                                                "name" : "{0}",
                                                "expression" : {
                                                  "kind" : "Integer",
                                                  "value" : 0
                                                }
                                              }
                                            ],
                                            "layout" : {
                                              "kind" : "Terminal",
                                              "name" : "Whitespaces",
                                              "nodeType" : "Layout",
                                              "regex" : {
                                                "kind" : "regex.Star",
                                                "regex" : {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 10
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 13
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 9
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 12
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 32
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "recursion" : "NON_REC",
                                            "irecursion" : "NON_REC",
                                            "associativity" : "UNDEFINED",
                                            "precedence" : -1,
                                            "precedenceLevel" : {
                                              "lhs" : 1,
                                              "rhs" : 1,
                                              "undefined" : 1,
                                              "hasPrefixUnary" : true,
                                              "hasPostfixUnary" : false,
                                              "hasPrefixUnaryBelow" : false,
                                              "hasPostfixUnaryBelow" : false,
                                              "index" : 2,
                                              "containsAssociativityGroup" : false,
                                              "assoc_lhs" : -1,
                                              "assoc_rhs" : -1
                                            }
                                          },
                                          "children" : [
                                            {
                                              "kind" : "TerminalNode",
                                              "terminal" : {
                                                "kind" : "Terminal",
                                                "name" : "Num",
                                                "label" : "o0",
                                                "preConditions" : [
                                                  {
                                                    "kind" : "DataDependentCondition",
                                                    "type" : "DATA_DEPENDENT",
                                                    "expression" : {
                                                      "kind" : "OrIndent",
                                                      "index" : {
                                                        "kind" : "Name",
                                                        "name" : "i",
                                                        "i" : -1
                                                      },
                                                      "ind" : {
                                                        "kind" : "Name",
                                                        "name" : "ind",
                                                        "i" : -1
                                                      },
                                                      "first" : {
                                                        "kind" : "Name",
                                                        "name" : "fst",
                                                        "i" : -1
                                                      },
                                                      "lExt" : {
                                                        "kind" : "LeftExtent",
                                                        "label" : "o0"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "nodeType" : "Regex",
                                                "regex" : {
                                                  "kind" : "regex.Seq",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "regex.Alt",
                                                      "symbols" : [
                                                        {
                                                          "kind" : "CharRange",
                                                          "start" : 49,
                                                          "end" : 57
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "kind" : "regex.Star",
                                                      "regex" : {
                                                        "kind" : "regex.Alt",
                                                        "symbols" : [
                                                          {
                                                            "kind" : "CharRange",
                                                            "start" : 48,
                                                            "end" : 57
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "start" : 26,
                                              "end" : 27
                                            }
                                          ],
                                          "start" : 26,
                                          "end" : 27
                                        }
                                      ],
                                      "start" : 22,
                                      "end" : 27
                                    },
                                    {
                                      "kind" : "NonterminalNode",
                                      "rule" : {
                                        "head" : {
                                          "kind" : "Nonterminal",
                                          "name" : "Decl",
                                          "parameters" : [
                                            "i",
                                            "ind",
                                            "fst"
                                          ]
                                        },
                                        "body" : [
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Id",
                                            "label" : "o0",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o0"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Regex",
                                            "regex" : {
                                              "kind" : "regex.Seq",
                                              "symbols" : [
                                                {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 97,
                                                      "end" : 122
                                                    },
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 65,
                                                      "end" : 90
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind" : "regex.Star",
                                                  "regex" : {
                                                    "kind" : "regex.Alt",
                                                    "symbols" : [
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 97,
                                                        "end" : 122
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 65,
                                                        "end" : 90
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 48,
                                                        "end" : 57
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Whitespaces",
                                            "nodeType" : "Layout",
                                            "regex" : {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 10
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 13
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 9
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 12
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 32
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "=",
                                            "label" : "o1",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o1"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Literal",
                                            "regex" : {
                                              "kind" : "Char",
                                              "val" : 61
                                            }
                                          },
                                          {
                                            "kind" : "Terminal",
                                            "name" : "Whitespaces",
                                            "nodeType" : "Layout",
                                            "regex" : {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 10
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 13
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 9
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 12
                                                  },
                                                  {
                                                    "kind" : "Char",
                                                    "val" : 32
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "kind" : "Nonterminal",
                                            "name" : "Exp",
                                            "label" : "o2",
                                            "arguments" : [
                                              {
                                                "kind" : "AndIndent",
                                                "index" : {
                                                  "kind" : "Name",
                                                  "name" : "i",
                                                  "i" : -1
                                                },
                                                "first" : {
                                                  "kind" : "Name",
                                                  "name" : "fst",
                                                  "i" : -1
                                                },
                                                "lExt" : {
                                                  "kind" : "LeftExtent",
                                                  "label" : "o2"
                                                },
                                                "returnIndex" : true
                                              },
                                              {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              {
                                                "kind" : "AndIndent",
                                                "index" : {
                                                  "kind" : "Name",
                                                  "name" : "i",
                                                  "i" : -1
                                                },
                                                "first" : {
                                                  "kind" : "Name",
                                                  "name" : "fst",
                                                  "i" : -1
                                                },
                                                "lExt" : {
                                                  "kind" : "LeftExtent",
                                                  "label" : "o2"
                                                },
                                                "returnIndex" : false
                                              },
                                              {
                                                "kind" : "Integer",
                                                "value" : 0
                                              }
                                            ]
                                          }
                                        ],
                                        "layout" : {
                                          "kind" : "Terminal",
                                          "name" : "Whitespaces",
                                          "nodeType" : "Layout",
                                          "regex" : {
                                            "kind" : "regex.Star",
                                            "regex" : {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "Char",
                                                  "val" : 10
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 13
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 9
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 12
                                                },
                                                {
                                                  "kind" : "Char",
                                                  "val" : 32
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "recursion" : "NON_REC",
                                        "irecursion" : "NON_REC",
                                        "associativity" : "UNDEFINED",
                                        "precedence" : -1,
                                        "precedenceLevel" : {
                                          "lhs" : 1,
                                          "rhs" : 1,
                                          "undefined" : -1,
                                          "hasPrefixUnary" : false,
                                          "hasPostfixUnary" : false,
                                          "hasPrefixUnaryBelow" : false,
                                          "hasPostfixUnaryBelow" : false,
                                          "index" : 1,
                                          "containsAssociativityGroup" : false,
                                          "assoc_lhs" : -1,
                                          "assoc_rhs" : -1
                                        }
                                      },
                                      "children" : [
                                        {
                                          "kind" : "TerminalNode",
                                          "terminal" : {
                                            "kind" : "Terminal",
                                            "name" : "Id",
                                            "label" : "o0",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o0"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Regex",
                                            "regex" : {
                                              "kind" : "regex.Seq",
                                              "symbols" : [
                                                {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 97,
                                                      "end" : 122
                                                    },
                                                    {
                                                      "kind" : "CharRange",
                                                      "start" : 65,
                                                      "end" : 90
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind" : "regex.Star",
                                                  "regex" : {
                                                    "kind" : "regex.Alt",
                                                    "symbols" : [
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 97,
                                                        "end" : 122
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 65,
                                                        "end" : 90
                                                      },
                                                      {
                                                        "kind" : "CharRange",
                                                        "start" : 48,
                                                        "end" : 57
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "start" : 40,
                                          "end" : 41
                                        },
                                        {
                                          "kind" : "KeywordTerminalNode",
                                          "terminal" : {
                                            "kind" : "Terminal",
                                            "name" : "=",
                                            "label" : "o1",
                                            "preConditions" : [
                                              {
                                                "kind" : "DataDependentCondition",
                                                "type" : "DATA_DEPENDENT",
                                                "expression" : {
                                                  "kind" : "OrIndent",
                                                  "index" : {
                                                    "kind" : "Name",
                                                    "name" : "i",
                                                    "i" : -1
                                                  },
                                                  "ind" : {
                                                    "kind" : "Name",
                                                    "name" : "ind",
                                                    "i" : -1
                                                  },
                                                  "first" : {
                                                    "kind" : "Name",
                                                    "name" : "fst",
                                                    "i" : -1
                                                  },
                                                  "lExt" : {
                                                    "kind" : "LeftExtent",
                                                    "label" : "o1"
                                                  }
                                                }
                                              }
                                            ],
                                            "nodeType" : "Literal",
                                            "regex" : {
                                              "kind" : "Char",
                                              "val" : 61
                                            }
                                          },
                                          "start" : 42,
                                          "end" : 43
                                        },
                                        {
                                          "kind" : "NonterminalNode",
                                          "rule" : {
                                            "head" : {
                                              "kind" : "Nonterminal",
                                              "name" : "Exp",
                                              "parameters" : [
                                                "i",
                                                "ind",
                                                "fst",
                                                "p"
                                              ]
                                            },
                                            "body" : [
                                              {
                                                "kind" : "Terminal",
                                                "name" : "Num",
                                                "label" : "o0",
                                                "preConditions" : [
                                                  {
                                                    "kind" : "DataDependentCondition",
                                                    "type" : "DATA_DEPENDENT",
                                                    "expression" : {
                                                      "kind" : "OrIndent",
                                                      "index" : {
                                                        "kind" : "Name",
                                                        "name" : "i",
                                                        "i" : -1
                                                      },
                                                      "ind" : {
                                                        "kind" : "Name",
                                                        "name" : "ind",
                                                        "i" : -1
                                                      },
                                                      "first" : {
                                                        "kind" : "Name",
                                                        "name" : "fst",
                                                        "i" : -1
                                                      },
                                                      "lExt" : {
                                                        "kind" : "LeftExtent",
                                                        "label" : "o0"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "nodeType" : "Regex",
                                                "regex" : {
                                                  "kind" : "regex.Seq",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "regex.Alt",
                                                      "symbols" : [
                                                        {
                                                          "kind" : "CharRange",
                                                          "start" : 49,
                                                          "end" : 57
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "kind" : "regex.Star",
                                                      "regex" : {
                                                        "kind" : "regex.Alt",
                                                        "symbols" : [
                                                          {
                                                            "kind" : "CharRange",
                                                            "start" : 48,
                                                            "end" : 57
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "kind" : "Return",
                                                "name" : "{0}",
                                                "expression" : {
                                                  "kind" : "Integer",
                                                  "value" : 0
                                                }
                                              }
                                            ],
                                            "layout" : {
                                              "kind" : "Terminal",
                                              "name" : "Whitespaces",
                                              "nodeType" : "Layout",
                                              "regex" : {
                                                "kind" : "regex.Star",
                                                "regex" : {
                                                  "kind" : "regex.Alt",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 10
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 13
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 9
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 12
                                                    },
                                                    {
                                                      "kind" : "Char",
                                                      "val" : 32
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "recursion" : "NON_REC",
                                            "irecursion" : "NON_REC",
                                            "associativity" : "UNDEFINED",
                                            "precedence" : -1,
                                            "precedenceLevel" : {
                                              "lhs" : 1,
                                              "rhs" : 1,
                                              "undefined" : 1,
                                              "hasPrefixUnary" : true,
                                              "hasPostfixUnary" : false,
                                              "hasPrefixUnaryBelow" : false,
                                              "hasPostfixUnaryBelow" : false,
                                              "index" : 2,
                                              "containsAssociativityGroup" : false,
                                              "assoc_lhs" : -1,
                                              "assoc_rhs" : -1
                                            }
                                          },
                                          "children" : [
                                            {
                                              "kind" : "TerminalNode",
                                              "terminal" : {
                                                "kind" : "Terminal",
                                                "name" : "Num",
                                                "label" : "o0",
                                                "preConditions" : [
                                                  {
                                                    "kind" : "DataDependentCondition",
                                                    "type" : "DATA_DEPENDENT",
                                                    "expression" : {
                                                      "kind" : "OrIndent",
                                                      "index" : {
                                                        "kind" : "Name",
                                                        "name" : "i",
                                                        "i" : -1
                                                      },
                                                      "ind" : {
                                                        "kind" : "Name",
                                                        "name" : "ind",
                                                        "i" : -1
                                                      },
                                                      "first" : {
                                                        "kind" : "Name",
                                                        "name" : "fst",
                                                        "i" : -1
                                                      },
                                                      "lExt" : {
                                                        "kind" : "LeftExtent",
                                                        "label" : "o0"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "nodeType" : "Regex",
                                                "regex" : {
                                                  "kind" : "regex.Seq",
                                                  "symbols" : [
                                                    {
                                                      "kind" : "regex.Alt",
                                                      "symbols" : [
                                                        {
                                                          "kind" : "CharRange",
                                                          "start" : 49,
                                                          "end" : 57
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "kind" : "regex.Star",
                                                      "regex" : {
                                                        "kind" : "regex.Alt",
                                                        "symbols" : [
                                                          {
                                                            "kind" : "CharRange",
                                                            "start" : 48,
                                                            "end" : 57
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "start" : 44,
                                              "end" : 45
                                            }
                                          ],
                                          "start" : 44,
                                          "end" : 45
                                        }
                                      ],
                                      "start" : 40,
                                      "end" : 45
                                    }
                                  ]
                                }
                              ],
                              "start" : 22,
                              "end" : 45
                            },
                            {
                              "kind" : "KeywordTerminalNode",
                              "terminal" : {
                                "kind" : "Terminal",
                                "name" : "in",
                                "label" : "o2",
                                "preConditions" : [
                                  {
                                    "kind" : "DataDependentCondition",
                                    "type" : "DATA_DEPENDENT",
                                    "expression" : {
                                      "kind" : "OrIndent",
                                      "index" : {
                                        "kind" : "Name",
                                        "name" : "i",
                                        "i" : -1
                                      },
                                      "ind" : {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      "first" : {
                                        "kind" : "Name",
                                        "name" : "fst",
                                        "i" : -1
                                      },
                                      "lExt" : {
                                        "kind" : "LeftExtent",
                                        "label" : "o2"
                                      }
                                    }
                                  }
                                ],
                                "nodeType" : "Literal",
                                "regex" : {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 105
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 110
                                    }
                                  ]
                                }
                              },
                              "start" : 52,
                              "end" : 54
                            },
                            {
                              "kind" : "NonterminalNode",
                              "rule" : {
                                "head" : {
                                  "kind" : "Nonterminal",
                                  "name" : "Exp",
                                  "parameters" : [
                                    "i",
                                    "ind",
                                    "fst",
                                    "p"
                                  ]
                                },
                                "body" : [
                                  {
                                    "kind" : "Nonterminal",
                                    "name" : "Exp",
                                    "label" : "o0",
                                    "preConditions" : [
                                      {
                                        "kind" : "DataDependentCondition",
                                        "type" : "DATA_DEPENDENT",
                                        "expression" : {
                                          "kind" : "GreaterThanEqual",
                                          "lhs" : {
                                            "kind" : "Integer",
                                            "value" : 2
                                          },
                                          "rhs" : {
                                            "kind" : "Name",
                                            "name" : "p",
                                            "i" : -1
                                          }
                                        }
                                      }
                                    ],
                                    "postConditions" : [
                                      {
                                        "kind" : "DataDependentCondition",
                                        "type" : "DATA_DEPENDENT",
                                        "expression" : {
                                          "kind" : "Or",
                                          "lhs" : {
                                            "kind" : "LessThanEqual",
                                            "lhs" : {
                                              "kind" : "Name",
                                              "name" : "l",
                                              "i" : -1
                                            },
                                            "rhs" : {
                                              "kind" : "Integer",
                                              "value" : 0
                                            }
                                          },
                                          "rhs" : {
                                            "kind" : "GreaterThanEqual",
                                            "lhs" : {
                                              "kind" : "Name",
                                              "name" : "l",
                                              "i" : -1
                                            },
                                            "rhs" : {
                                              "kind" : "Integer",
                                              "value" : 2
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "variable" : "l",
                                    "arguments" : [
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "o0"
                                        },
                                        "returnIndex" : true
                                      },
                                      {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "o0"
                                        },
                                        "returnIndex" : false
                                      },
                                      {
                                        "kind" : "Name",
                                        "name" : "p",
                                        "i" : -1
                                      }
                                    ]
                                  },
                                  {
                                    "kind" : "Terminal",
                                    "name" : "Whitespaces",
                                    "nodeType" : "Layout",
                                    "regex" : {
                                      "kind" : "regex.Star",
                                      "regex" : {
                                        "kind" : "regex.Alt",
                                        "symbols" : [
                                          {
                                            "kind" : "Char",
                                            "val" : 10
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 13
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 9
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 12
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 32
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "kind" : "Terminal",
                                    "name" : "+",
                                    "label" : "o1",
                                    "preConditions" : [
                                      {
                                        "kind" : "DataDependentCondition",
                                        "type" : "DATA_DEPENDENT",
                                        "expression" : {
                                          "kind" : "OrIndent",
                                          "index" : {
                                            "kind" : "Name",
                                            "name" : "i",
                                            "i" : -1
                                          },
                                          "ind" : {
                                            "kind" : "Name",
                                            "name" : "ind",
                                            "i" : -1
                                          },
                                          "first" : {
                                            "kind" : "Name",
                                            "name" : "fst",
                                            "i" : -1
                                          },
                                          "lExt" : {
                                            "kind" : "LeftExtent",
                                            "label" : "o1"
                                          }
                                        }
                                      }
                                    ],
                                    "nodeType" : "Literal",
                                    "regex" : {
                                      "kind" : "Char",
                                      "val" : 43
                                    }
                                  },
                                  {
                                    "kind" : "Terminal",
                                    "name" : "Whitespaces",
                                    "nodeType" : "Layout",
                                    "regex" : {
                                      "kind" : "regex.Star",
                                      "regex" : {
                                        "kind" : "regex.Alt",
                                        "symbols" : [
                                          {
                                            "kind" : "Char",
                                            "val" : 10
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 13
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 9
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 12
                                          },
                                          {
                                            "kind" : "Char",
                                            "val" : 32
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "kind" : "Nonterminal",
                                    "name" : "Exp",
                                    "label" : "o2",
                                    "variable" : "r",
                                    "arguments" : [
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "o2"
                                        },
                                        "returnIndex" : true
                                      },
                                      {
                                        "kind" : "Name",
                                        "name" : "ind",
                                        "i" : -1
                                      },
                                      {
                                        "kind" : "AndIndent",
                                        "index" : {
                                          "kind" : "Name",
                                          "name" : "i",
                                          "i" : -1
                                        },
                                        "first" : {
                                          "kind" : "Name",
                                          "name" : "fst",
                                          "i" : -1
                                        },
                                        "lExt" : {
                                          "kind" : "LeftExtent",
                                          "label" : "o2"
                                        },
                                        "returnIndex" : false
                                      },
                                      {
                                        "kind" : "Integer",
                                        "value" : 3
                                      }
                                    ]
                                  },
                                  {
                                    "kind" : "Return",
                                    "name" : "{(r <= 0)? 2 : min(r,2)}",
                                    "expression" : {
                                      "kind" : "IfThenElse",
                                      "condition" : {
                                        "kind" : "LessThanEqual",
                                        "lhs" : {
                                          "kind" : "Name",
                                          "name" : "r",
                                          "i" : -1
                                        },
                                        "rhs" : {
                                          "kind" : "Integer",
                                          "value" : 0
                                        }
                                      },
                                      "thenPart" : {
                                        "kind" : "Integer",
                                        "value" : 2
                                      },
                                      "elsePart" : {
                                        "kind" : "Min",
                                        "arguments" : [
                                          {
                                            "kind" : "Name",
                                            "name" : "r",
                                            "i" : -1
                                          },
                                          {
                                            "kind" : "Integer",
                                            "value" : 2
                                          }
                                        ],
                                        "fun" : "min"
                                      }
                                    }
                                  }
                                ],
                                "layout" : {
                                  "kind" : "Terminal",
                                  "name" : "Whitespaces",
                                  "nodeType" : "Layout",
                                  "regex" : {
                                    "kind" : "regex.Star",
                                    "regex" : {
                                      "kind" : "regex.Alt",
                                      "symbols" : [
                                        {
                                          "kind" : "Char",
                                          "val" : 10
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 13
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 9
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 12
                                        },
                                        {
                                          "kind" : "Char",
                                          "val" : 32
                                        }
                                      ]
                                    }
                                  }
                                },
                                "recursion" : "LEFT_RIGHT_REC",
                                "irecursion" : "NON_REC",
                                "associativity" : "LEFT",
                                "precedence" : 2,
                                "precedenceLevel" : {
                                  "lhs" : 2,
                                  "rhs" : 2,
                                  "undefined" : -1,
                                  "hasPrefixUnary" : false,
                                  "hasPostfixUnary" : false,
                                  "hasPrefixUnaryBelow" : true,
                                  "prefixUnaryBelow" : [
                                    1
                                  ],
                                  "hasPostfixUnaryBelow" : false,
                                  "index" : 3,
                                  "containsAssociativityGroup" : false,
                                  "assoc_lhs" : -1,
                                  "assoc_rhs" : -1
                                }
                              },
                              "children" : [
                                {
                                  "kind" : "NonterminalNode",
                                  "rule" : {
                                    "head" : {
                                      "kind" : "Nonterminal",
                                      "name" : "Exp",
                                      "parameters" : [
                                        "i",
                                        "ind",
                                        "fst",
                                        "p"
                                      ]
                                    },
                                    "body" : [
                                      {
                                        "kind" : "Terminal",
                                        "name" : "Num",
                                        "label" : "o0",
                                        "preConditions" : [
                                          {
                                            "kind" : "DataDependentCondition",
                                            "type" : "DATA_DEPENDENT",
                                            "expression" : {
                                              "kind" : "OrIndent",
                                              "index" : {
                                                "kind" : "Name",
                                                "name" : "i",
                                                "i" : -1
                                              },
                                              "ind" : {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              "first" : {
                                                "kind" : "Name",
                                                "name" : "fst",
                                                "i" : -1
                                              },
                                              "lExt" : {
                                                "kind" : "LeftExtent",
                                                "label" : "o0"
                                              }
                                            }
                                          }
                                        ],
                                        "nodeType" : "Regex",
                                        "regex" : {
                                          "kind" : "regex.Seq",
                                          "symbols" : [
                                            {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "CharRange",
                                                  "start" : 49,
                                                  "end" : 57
                                                }
                                              ]
                                            },
                                            {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "CharRange",
                                                    "start" : 48,
                                                    "end" : 57
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "kind" : "Return",
                                        "name" : "{0}",
                                        "expression" : {
                                          "kind" : "Integer",
                                          "value" : 0
                                        }
                                      }
                                    ],
                                    "layout" : {
                                      "kind" : "Terminal",
                                      "name" : "Whitespaces",
                                      "nodeType" : "Layout",
                                      "regex" : {
                                        "kind" : "regex.Star",
                                        "regex" : {
                                          "kind" : "regex.Alt",
                                          "symbols" : [
                                            {
                                              "kind" : "Char",
                                              "val" : 10
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 13
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 9
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 12
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 32
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "recursion" : "NON_REC",
                                    "irecursion" : "NON_REC",
                                    "associativity" : "UNDEFINED",
                                    "precedence" : -1,
                                    "precedenceLevel" : {
                                      "lhs" : 1,
                                      "rhs" : 1,
                                      "undefined" : 1,
                                      "hasPrefixUnary" : true,
                                      "hasPostfixUnary" : false,
                                      "hasPrefixUnaryBelow" : false,
                                      "hasPostfixUnaryBelow" : false,
                                      "index" : 2,
                                      "containsAssociativityGroup" : false,
                                      "assoc_lhs" : -1,
                                      "assoc_rhs" : -1
                                    }
                                  },
                                  "children" : [
                                    {
                                      "kind" : "TerminalNode",
                                      "terminal" : {
                                        "kind" : "Terminal",
                                        "name" : "Num",
                                        "label" : "o0",
                                        "preConditions" : [
                                          {
                                            "kind" : "DataDependentCondition",
                                            "type" : "DATA_DEPENDENT",
                                            "expression" : {
                                              "kind" : "OrIndent",
                                              "index" : {
                                                "kind" : "Name",
                                                "name" : "i",
                                                "i" : -1
                                              },
                                              "ind" : {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              "first" : {
                                                "kind" : "Name",
                                                "name" : "fst",
                                                "i" : -1
                                              },
                                              "lExt" : {
                                                "kind" : "LeftExtent",
                                                "label" : "o0"
                                              }
                                            }
                                          }
                                        ],
                                        "nodeType" : "Regex",
                                        "regex" : {
                                          "kind" : "regex.Seq",
                                          "symbols" : [
                                            {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "CharRange",
                                                  "start" : 49,
                                                  "end" : 57
                                                }
                                              ]
                                            },
                                            {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "CharRange",
                                                    "start" : 48,
                                                    "end" : 57
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "start" : 55,
                                      "end" : 56
                                    }
                                  ],
                                  "start" : 55,
                                  "end" : 56
                                },
                                {
                                  "kind" : "KeywordTerminalNode",
                                  "terminal" : {
                                    "kind" : "Terminal",
                                    "name" : "+",
                                    "label" : "o1",
                                    "preConditions" : [
                                      {
                                        "kind" : "DataDependentCondition",
                                        "type" : "DATA_DEPENDENT",
                                        "expression" : {
                                          "kind" : "OrIndent",
                                          "index" : {
                                            "kind" : "Name",
                                            "name" : "i",
                                            "i" : -1
                                          },
                                          "ind" : {
                                            "kind" : "Name",
                                            "name" : "ind",
                                            "i" : -1
                                          },
                                          "first" : {
                                            "kind" : "Name",
                                            "name" : "fst",
                                            "i" : -1
                                          },
                                          "lExt" : {
                                            "kind" : "LeftExtent",
                                            "label" : "o1"
                                          }
                                        }
                                      }
                                    ],
                                    "nodeType" : "Literal",
                                    "regex" : {
                                      "kind" : "Char",
                                      "val" : 43
                                    }
                                  },
                                  "start" : 57,
                                  "end" : 58
                                },
                                {
                                  "kind" : "NonterminalNode",
                                  "rule" : {
                                    "head" : {
                                      "kind" : "Nonterminal",
                                      "name" : "Exp",
                                      "parameters" : [
                                        "i",
                                        "ind",
                                        "fst",
                                        "p"
                                      ]
                                    },
                                    "body" : [
                                      {
                                        "kind" : "Terminal",
                                        "name" : "Num",
                                        "label" : "o0",
                                        "preConditions" : [
                                          {
                                            "kind" : "DataDependentCondition",
                                            "type" : "DATA_DEPENDENT",
                                            "expression" : {
                                              "kind" : "OrIndent",
                                              "index" : {
                                                "kind" : "Name",
                                                "name" : "i",
                                                "i" : -1
                                              },
                                              "ind" : {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              "first" : {
                                                "kind" : "Name",
                                                "name" : "fst",
                                                "i" : -1
                                              },
                                              "lExt" : {
                                                "kind" : "LeftExtent",
                                                "label" : "o0"
                                              }
                                            }
                                          }
                                        ],
                                        "nodeType" : "Regex",
                                        "regex" : {
                                          "kind" : "regex.Seq",
                                          "symbols" : [
                                            {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "CharRange",
                                                  "start" : 49,
                                                  "end" : 57
                                                }
                                              ]
                                            },
                                            {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "CharRange",
                                                    "start" : 48,
                                                    "end" : 57
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "kind" : "Return",
                                        "name" : "{0}",
                                        "expression" : {
                                          "kind" : "Integer",
                                          "value" : 0
                                        }
                                      }
                                    ],
                                    "layout" : {
                                      "kind" : "Terminal",
                                      "name" : "Whitespaces",
                                      "nodeType" : "Layout",
                                      "regex" : {
                                        "kind" : "regex.Star",
                                        "regex" : {
                                          "kind" : "regex.Alt",
                                          "symbols" : [
                                            {
                                              "kind" : "Char",
                                              "val" : 10
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 13
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 9
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 12
                                            },
                                            {
                                              "kind" : "Char",
                                              "val" : 32
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "recursion" : "NON_REC",
                                    "irecursion" : "NON_REC",
                                    "associativity" : "UNDEFINED",
                                    "precedence" : -1,
                                    "precedenceLevel" : {
                                      "lhs" : 1,
                                      "rhs" : 1,
                                      "undefined" : 1,
                                      "hasPrefixUnary" : true,
                                      "hasPostfixUnary" : false,
                                      "hasPrefixUnaryBelow" : false,
                                      "hasPostfixUnaryBelow" : false,
                                      "index" : 2,
                                      "containsAssociativityGroup" : false,
                                      "assoc_lhs" : -1,
                                      "assoc_rhs" : -1
                                    }
                                  },
                                  "children" : [
                                    {
                                      "kind" : "TerminalNode",
                                      "terminal" : {
                                        "kind" : "Terminal",
                                        "name" : "Num",
                                        "label" : "o0",
                                        "preConditions" : [
                                          {
                                            "kind" : "DataDependentCondition",
                                            "type" : "DATA_DEPENDENT",
                                            "expression" : {
                                              "kind" : "OrIndent",
                                              "index" : {
                                                "kind" : "Name",
                                                "name" : "i",
                                                "i" : -1
                                              },
                                              "ind" : {
                                                "kind" : "Name",
                                                "name" : "ind",
                                                "i" : -1
                                              },
                                              "first" : {
                                                "kind" : "Name",
                                                "name" : "fst",
                                                "i" : -1
                                              },
                                              "lExt" : {
                                                "kind" : "LeftExtent",
                                                "label" : "o0"
                                              }
                                            }
                                          }
                                        ],
                                        "nodeType" : "Regex",
                                        "regex" : {
                                          "kind" : "regex.Seq",
                                          "symbols" : [
                                            {
                                              "kind" : "regex.Alt",
                                              "symbols" : [
                                                {
                                                  "kind" : "CharRange",
                                                  "start" : 49,
                                                  "end" : 57
                                                }
                                              ]
                                            },
                                            {
                                              "kind" : "regex.Star",
                                              "regex" : {
                                                "kind" : "regex.Alt",
                                                "symbols" : [
                                                  {
                                                    "kind" : "CharRange",
                                                    "start" : 48,
                                                    "end" : 57
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "start" : 59,
                                      "end" : 60
                                    }
                                  ],
                                  "start" : 59,
                                  "end" : 60
                                }
                              ],
                              "start" : 55,
                              "end" : 60
                            }
                          ],
                          "start" : 18,
                          "end" : 60
                        }
                      ],
                      "start" : 14,
                      "end" : 60
                    }
                  ]
                }
              ],
              "start" : 4,
              "end" : 60
            },
            {
              "kind" : "KeywordTerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "in",
                "label" : "o2",
                "preConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "OrIndent",
                      "index" : {
                        "kind" : "Name",
                        "name" : "i",
                        "i" : -1
                      },
                      "ind" : {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      "first" : {
                        "kind" : "Name",
                        "name" : "fst",
                        "i" : -1
                      },
                      "lExt" : {
                        "kind" : "LeftExtent",
                        "label" : "o2"
                      }
                    }
                  }
                ],
                "nodeType" : "Literal",
                "regex" : {
                  "kind" : "regex.Seq",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 105
                    },
                    {
                      "kind" : "Char",
                      "val" : 110
                    }
                  ]
                }
              },
              "start" : 61,
              "end" : 63
            },
            {
              "kind" : "NonterminalNode",
              "rule" : {
                "head" : {
                  "kind" : "Nonterminal",
                  "name" : "Exp",
                  "parameters" : [
                    "i",
                    "ind",
                    "fst",
                    "p"
                  ]
                },
                "body" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Exp",
                    "label" : "o0",
                    "preConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "GreaterThanEqual",
                          "lhs" : {
                            "kind" : "Integer",
                            "value" : 2
                          },
                          "rhs" : {
                            "kind" : "Name",
                            "name" : "p",
                            "i" : -1
                          }
                        }
                      }
                    ],
                    "postConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "Or",
                          "lhs" : {
                            "kind" : "LessThanEqual",
                            "lhs" : {
                              "kind" : "Name",
                              "name" : "l",
                              "i" : -1
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          },
                          "rhs" : {
                            "kind" : "GreaterThanEqual",
                            "lhs" : {
                              "kind" : "Name",
                              "name" : "l",
                              "i" : -1
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 2
                            }
                          }
                        }
                      }
                    ],
                    "variable" : "l",
                    "arguments" : [
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "o0"
                        },
                        "returnIndex" : true
                      },
                      {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "o0"
                        },
                        "returnIndex" : false
                      },
                      {
                        "kind" : "Name",
                        "name" : "p",
                        "i" : -1
                      }
                    ]
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "Whitespaces",
                    "nodeType" : "Layout",
                    "regex" : {
                      "kind" : "regex.Star",
                      "regex" : {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 10
                          },
                          {
                            "kind" : "Char",
                            "val" : 13
                          },
                          {
                            "kind" : "Char",
                            "val" : 9
                          },
                          {
                            "kind" : "Char",
                            "val" : 12
                          },
                          {
                            "kind" : "Char",
                            "val" : 32
                          }
                        ]
                      }
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "+",
                    "label" : "o1",
                    "preConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "OrIndent",
                          "index" : {
                            "kind" : "Name",
                            "name" : "i",
                            "i" : -1
                          },
                          "ind" : {
                            "kind" : "Name",
                            "name" : "ind",
                            "i" : -1
                          },
                          "first" : {
                            "kind" : "Name",
                            "name" : "fst",
                            "i" : -1
                          },
                          "lExt" : {
                            "kind" : "LeftExtent",
                            "label" : "o1"
                          }
                        }
                      }
                    ],
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 43
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "Whitespaces",
                    "nodeType" : "Layout",
                    "regex" : {
                      "kind" : "regex.Star",
                      "regex" : {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 10
                          },
                          {
                            "kind" : "Char",
                            "val" : 13
                          },
                          {
                            "kind" : "Char",
                            "val" : 9
                          },
                          {
                            "kind" : "Char",
                            "val" : 12
                          },
                          {
                            "kind" : "Char",
                            "val" : 32
                          }
                        ]
                      }
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "Exp",
                    "label" : "o2",
                    "variable" : "r",
                    "arguments" : [
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "o2"
                        },
                        "returnIndex" : true
                      },
                      {
                        "kind" : "Name",
                        "name" : "ind",
                        "i" : -1
                      },
                      {
                        "kind" : "AndIndent",
                        "index" : {
                          "kind" : "Name",
                          "name" : "i",
                          "i" : -1
                        },
                        "first" : {
                          "kind" : "Name",
                          "name" : "fst",
                          "i" : -1
                        },
                        "lExt" : {
                          "kind" : "LeftExtent",
                          "label" : "o2"
                        },
                        "returnIndex" : false
                      },
                      {
                        "kind" : "Integer",
                        "value" : 3
                      }
                    ]
                  },
                  {
                    "kind" : "Return",
                    "name" : "{(r <= 0)? 2 : min(r,2)}",
                    "expression" : {
                      "kind" : "IfThenElse",
                      "condition" : {
                        "kind" : "LessThanEqual",
                        "lhs" : {
                          "kind" : "Name",
                          "name" : "r",
                          "i" : -1
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 0
                        }
                      },
                      "thenPart" : {
                        "kind" : "Integer",
                        "value" : 2
                      },
                      "elsePart" : {
                        "kind" : "Min",
                        "arguments" : [
                          {
                            "kind" : "Name",
                            "name" : "r",
                            "i" : -1
                          },
                          {
                            "kind" : "Integer",
                            "value" : 2
                          }
                        ],
                        "fun" : "min"
                      }
                    }
                  }
                ],
                "layout" : {
                  "kind" : "Terminal",
                  "name" : "Whitespaces",
                  "nodeType" : "Layout",
                  "regex" : {
                    "kind" : "regex.Star",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 10
                        },
                        {
                          "kind" : "Char",
                          "val" : 13
                        },
                        {
                          "kind" : "Char",
                          "val" : 9
                        },
                        {
                          "kind" : "Char",
                          "val" : 12
                        },
                        {
                          "kind" : "Char",
                          "val" : 32
                        }
                      ]
                    }
                  }
                },
                "recursion" : "LEFT_RIGHT_REC",
                "irecursion" : "NON_REC",
                "associativity" : "LEFT",
                "precedence" : 2,
                "precedenceLevel" : {
                  "lhs" : 2,
                  "rhs" : 2,
                  "undefined" : -1,
                  "hasPrefixUnary" : false,
                  "hasPostfixUnary" : false,
                  "hasPrefixUnaryBelow" : true,
                  "prefixUnaryBelow" : [
                    1
                  ],
                  "hasPostfixUnaryBelow" : false,
                  "index" : 3,
                  "containsAssociativityGroup" : false,
                  "assoc_lhs" : -1,
                  "assoc_rhs" : -1
                }
              },
              "children" : [
                {
                  "kind" : "NonterminalNode",
                  "rule" : {
                    "head" : {
                      "kind" : "Nonterminal",
                      "name" : "Exp",
                      "parameters" : [
                        "i",
                        "ind",
                        "fst",
                        "p"
                      ]
                    },
                    "body" : [
                      {
                        "kind" : "Nonterminal",
                        "name" : "Exp",
                        "label" : "o0",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "GreaterThanEqual",
                              "lhs" : {
                                "kind" : "Integer",
                                "value" : 2
                              },
                              "rhs" : {
                                "kind" : "Name",
                                "name" : "p",
                                "i" : -1
                              }
                            }
                          }
                        ],
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "Or",
                              "lhs" : {
                                "kind" : "LessThanEqual",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "l",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              },
                              "rhs" : {
                                "kind" : "GreaterThanEqual",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "l",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              }
                            }
                          }
                        ],
                        "variable" : "l",
                        "arguments" : [
                          {
                            "kind" : "AndIndent",
                            "index" : {
                              "kind" : "Name",
                              "name" : "i",
                              "i" : -1
                            },
                            "first" : {
                              "kind" : "Name",
                              "name" : "fst",
                              "i" : -1
                            },
                            "lExt" : {
                              "kind" : "LeftExtent",
                              "label" : "o0"
                            },
                            "returnIndex" : true
                          },
                          {
                            "kind" : "Name",
                            "name" : "ind",
                            "i" : -1
                          },
                          {
                            "kind" : "AndIndent",
                            "index" : {
                              "kind" : "Name",
                              "name" : "i",
                              "i" : -1
                            },
                            "first" : {
                              "kind" : "Name",
                              "name" : "fst",
                              "i" : -1
                            },
                            "lExt" : {
                              "kind" : "LeftExtent",
                              "label" : "o0"
                            },
                            "returnIndex" : false
                          },
                          {
                            "kind" : "Name",
                            "name" : "p",
                            "i" : -1
                          }
                        ]
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "Whitespaces",
                        "nodeType" : "Layout",
                        "regex" : {
                          "kind" : "regex.Star",
                          "regex" : {
                            "kind" : "regex.Alt",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 10
                              },
                              {
                                "kind" : "Char",
                                "val" : 13
                              },
                              {
                                "kind" : "Char",
                                "val" : 9
                              },
                              {
                                "kind" : "Char",
                                "val" : 12
                              },
                              {
                                "kind" : "Char",
                                "val" : 32
                              }
                            ]
                          }
                        }
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "+",
                        "label" : "o1",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "OrIndent",
                              "index" : {
                                "kind" : "Name",
                                "name" : "i",
                                "i" : -1
                              },
                              "ind" : {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              "first" : {
                                "kind" : "Name",
                                "name" : "fst",
                                "i" : -1
                              },
                              "lExt" : {
                                "kind" : "LeftExtent",
                                "label" : "o1"
                              }
                            }
                          }
                        ],
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 43
                        }
                      },
                      {
                        "kind" : "Terminal",
                        "name" : "Whitespaces",
                        "nodeType" : "Layout",
                        "regex" : {
                          "kind" : "regex.Star",
                          "regex" : {
                            "kind" : "regex.Alt",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 10
                              },
                              {
                                "kind" : "Char",
                                "val" : 13
                              },
                              {
                                "kind" : "Char",
                                "val" : 9
                              },
                              {
                                "kind" : "Char",
                                "val" : 12
                              },
                              {
                                "kind" : "Char",
                                "val" : 32
                              }
                            ]
                          }
                        }
                      },
                      {
                        "kind" : "Nonterminal",
                        "name" : "Exp",
                        "label" : "o2",
                        "variable" : "r",
                        "arguments" : [
                          {
                            "kind" : "AndIndent",
                            "index" : {
                              "kind" : "Name",
                              "name" : "i",
                              "i" : -1
                            },
                            "first" : {
                              "kind" : "Name",
                              "name" : "fst",
                              "i" : -1
                            },
                            "lExt" : {
                              "kind" : "LeftExtent",
                              "label" : "o2"
                            },
                            "returnIndex" : true
                          },
                          {
                            "kind" : "Name",
                            "name" : "ind",
                            "i" : -1
                          },
                          {
                            "kind" : "AndIndent",
                            "index" : {
                              "kind" : "Name",
                              "name" : "i",
                              "i" : -1
                            },
                            "first" : {
                              "kind" : "Name",
                              "name" : "fst",
                              "i" : -1
                            },
                            "lExt" : {
                              "kind" : "LeftExtent",
                              "label" : "o2"
                            },
                            "returnIndex" : false
                          },
                          {
                            "kind" : "Integer",
                            "value" : 3
                          }
                        ]
                      },
                      {
                        "kind" : "Return",
                        "name" : "{(r <= 0)? 2 : min(r,2)}",
                        "expression" : {
                          "kind" : "IfThenElse",
                          "condition" : {
                            "kind" : "LessThanEqual",
                            "lhs" : {
                              "kind" : "Name",
                              "name" : "r",
                              "i" : -1
                            },
                            "rhs" : {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          },
                          "thenPart" : {
                            "kind" : "Integer",
                            "value" : 2
                          },
                          "elsePart" : {
                            "kind" : "Min",
                            "arguments" : [
                              {
                                "kind" : "Name",
                                "name" : "r",
                                "i" : -1
                              },
                              {
                                "kind" : "Integer",
                                "value" : 2
                              }
                            ],
                            "fun" : "min"
                          }
                        }
                      }
                    ],
                    "layout" : {
                      "kind" : "Terminal",
                      "name" : "Whitespaces",
                      "nodeType" : "Layout",
                      "regex" : {
                        "kind" : "regex.Star",
                        "regex" : {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 10
                            },
                            {
                              "kind" : "Char",
                              "val" : 13
                            },
                            {
                              "kind" : "Char",
                              "val" : 9
                            },
                            {
                              "kind" : "Char",
                              "val" : 12
                            },
                            {
                              "kind" : "Char",
                              "val" : 32
                            }
                          ]
                        }
                      }
                    },
                    "recursion" : "LEFT_RIGHT_REC",
                    "irecursion" : "NON_REC",
                    "associativity" : "LEFT",
                    "precedence" : 2,
                    "precedenceLevel" : {
                      "lhs" : 2,
                      "rhs" : 2,
                      "undefined" : -1,
                      "hasPrefixUnary" : false,
                      "hasPostfixUnary" : false,
                      "hasPrefixUnaryBelow" : true,
                      "prefixUnaryBelow" : [
                        1
                      ],
                      "hasPostfixUnaryBelow" : false,
                      "index" : 3,
                      "containsAssociativityGroup" : false,
                      "assoc_lhs" : -1,
                      "assoc_rhs" : -1
                    }
                  },
                  "children" : [
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Exp",
                          "parameters" : [
                            "i",
                            "ind",
                            "fst",
                            "p"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Terminal",
                            "name" : "Num",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 49,
                                      "end" : 57
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "Return",
                            "name" : "{0}",
                            "expression" : {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "Whitespaces",
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 12
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 32
                                }
                              ]
                            }
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : 1,
                          "hasPrefixUnary" : true,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 2,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "TerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "Num",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 49,
                                      "end" : 57
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "start" : 64,
                          "end" : 65
                        }
                      ],
                      "start" : 64,
                      "end" : 65
                    },
                    {
                      "kind" : "KeywordTerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "+",
                        "label" : "o1",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "OrIndent",
                              "index" : {
                                "kind" : "Name",
                                "name" : "i",
                                "i" : -1
                              },
                              "ind" : {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              "first" : {
                                "kind" : "Name",
                                "name" : "fst",
                                "i" : -1
                              },
                              "lExt" : {
                                "kind" : "LeftExtent",
                                "label" : "o1"
                              }
                            }
                          }
                        ],
                        "nodeType" : "Literal",
                        "regex" : {
                          "kind" : "Char",
                          "val" : 43
                        }
                      },
                      "start" : 66,
                      "end" : 67
                    },
                    {
                      "kind" : "NonterminalNode",
                      "rule" : {
                        "head" : {
                          "kind" : "Nonterminal",
                          "name" : "Exp",
                          "parameters" : [
                            "i",
                            "ind",
                            "fst",
                            "p"
                          ]
                        },
                        "body" : [
                          {
                            "kind" : "Terminal",
                            "name" : "Num",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 49,
                                      "end" : 57
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "Return",
                            "name" : "{0}",
                            "expression" : {
                              "kind" : "Integer",
                              "value" : 0
                            }
                          }
                        ],
                        "layout" : {
                          "kind" : "Terminal",
                          "name" : "Whitespaces",
                          "nodeType" : "Layout",
                          "regex" : {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 10
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 13
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 9
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 12
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 32
                                }
                              ]
                            }
                          }
                        },
                        "recursion" : "NON_REC",
                        "irecursion" : "NON_REC",
                        "associativity" : "UNDEFINED",
                        "precedence" : -1,
                        "precedenceLevel" : {
                          "lhs" : 1,
                          "rhs" : 1,
                          "undefined" : 1,
                          "hasPrefixUnary" : true,
                          "hasPostfixUnary" : false,
                          "hasPrefixUnaryBelow" : false,
                          "hasPostfixUnaryBelow" : false,
                          "index" : 2,
                          "containsAssociativityGroup" : false,
                          "assoc_lhs" : -1,
                          "assoc_rhs" : -1
                        }
                      },
                      "children" : [
                        {
                          "kind" : "TerminalNode",
                          "terminal" : {
                            "kind" : "Terminal",
                            "name" : "Num",
                            "label" : "o0",
                            "preConditions" : [
                              {
                                "kind" : "DataDependentCondition",
                                "type" : "DATA_DEPENDENT",
                                "expression" : {
                                  "kind" : "OrIndent",
                                  "index" : {
                                    "kind" : "Name",
                                    "name" : "i",
                                    "i" : -1
                                  },
                                  "ind" : {
                                    "kind" : "Name",
                                    "name" : "ind",
                                    "i" : -1
                                  },
                                  "first" : {
                                    "kind" : "Name",
                                    "name" : "fst",
                                    "i" : -1
                                  },
                                  "lExt" : {
                                    "kind" : "LeftExtent",
                                    "label" : "o0"
                                  }
                                }
                              }
                            ],
                            "nodeType" : "Regex",
                            "regex" : {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "CharRange",
                                      "start" : 49,
                                      "end" : 57
                                    }
                                  ]
                                },
                                {
                                  "kind" : "regex.Star",
                                  "regex" : {
                                    "kind" : "regex.Alt",
                                    "symbols" : [
                                      {
                                        "kind" : "CharRange",
                                        "start" : 48,
                                        "end" : 57
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "start" : 68,
                          "end" : 69
                        }
                      ],
                      "start" : 68,
                      "end" : 69
                    }
                  ],
                  "start" : 64,
                  "end" : 69
                },
                {
                  "kind" : "KeywordTerminalNode",
                  "terminal" : {
                    "kind" : "Terminal",
                    "name" : "+",
                    "label" : "o1",
                    "preConditions" : [
                      {
                        "kind" : "DataDependentCondition",
                        "type" : "DATA_DEPENDENT",
                        "expression" : {
                          "kind" : "OrIndent",
                          "index" : {
                            "kind" : "Name",
                            "name" : "i",
                            "i" : -1
                          },
                          "ind" : {
                            "kind" : "Name",
                            "name" : "ind",
                            "i" : -1
                          },
                          "first" : {
                            "kind" : "Name",
                            "name" : "fst",
                            "i" : -1
                          },
                          "lExt" : {
                            "kind" : "LeftExtent",
                            "label" : "o1"
                          }
                        }
                      }
                    ],
                    "nodeType" : "Literal",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 43
                    }
                  },
                  "start" : 70,
                  "end" : 71
                },
                {
                  "kind" : "NonterminalNode",
                  "rule" : {
                    "head" : {
                      "kind" : "Nonterminal",
                      "name" : "Exp",
                      "parameters" : [
                        "i",
                        "ind",
                        "fst",
                        "p"
                      ]
                    },
                    "body" : [
                      {
                        "kind" : "Terminal",
                        "name" : "Num",
                        "label" : "o0",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "OrIndent",
                              "index" : {
                                "kind" : "Name",
                                "name" : "i",
                                "i" : -1
                              },
                              "ind" : {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              "first" : {
                                "kind" : "Name",
                                "name" : "fst",
                                "i" : -1
                              },
                              "lExt" : {
                                "kind" : "LeftExtent",
                                "label" : "o0"
                              }
                            }
                          }
                        ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 49,
                                  "end" : 57
                                }
                              ]
                            },
                            {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "CharRange",
                                    "start" : 48,
                                    "end" : 57
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind" : "Return",
                        "name" : "{0}",
                        "expression" : {
                          "kind" : "Integer",
                          "value" : 0
                        }
                      }
                    ],
                    "layout" : {
                      "kind" : "Terminal",
                      "name" : "Whitespaces",
                      "nodeType" : "Layout",
                      "regex" : {
                        "kind" : "regex.Star",
                        "regex" : {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 10
                            },
                            {
                              "kind" : "Char",
                              "val" : 13
                            },
                            {
                              "kind" : "Char",
                              "val" : 9
                            },
                            {
                              "kind" : "Char",
                              "val" : 12
                            },
                            {
                              "kind" : "Char",
                              "val" : 32
                            }
                          ]
                        }
                      }
                    },
                    "recursion" : "NON_REC",
                    "irecursion" : "NON_REC",
                    "associativity" : "UNDEFINED",
                    "precedence" : -1,
                    "precedenceLevel" : {
                      "lhs" : 1,
                      "rhs" : 1,
                      "undefined" : 1,
                      "hasPrefixUnary" : true,
                      "hasPostfixUnary" : false,
                      "hasPrefixUnaryBelow" : false,
                      "hasPostfixUnaryBelow" : false,
                      "index" : 2,
                      "containsAssociativityGroup" : false,
                      "assoc_lhs" : -1,
                      "assoc_rhs" : -1
                    }
                  },
                  "children" : [
                    {
                      "kind" : "TerminalNode",
                      "terminal" : {
                        "kind" : "Terminal",
                        "name" : "Num",
                        "label" : "o0",
                        "preConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "OrIndent",
                              "index" : {
                                "kind" : "Name",
                                "name" : "i",
                                "i" : -1
                              },
                              "ind" : {
                                "kind" : "Name",
                                "name" : "ind",
                                "i" : -1
                              },
                              "first" : {
                                "kind" : "Name",
                                "name" : "fst",
                                "i" : -1
                              },
                              "lExt" : {
                                "kind" : "LeftExtent",
                                "label" : "o0"
                              }
                            }
                          }
                        ],
                        "nodeType" : "Regex",
                        "regex" : {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 49,
                                  "end" : 57
                                }
                              ]
                            },
                            {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "regex.Alt",
                                "symbols" : [
                                  {
                                    "kind" : "CharRange",
                                    "start" : 48,
                                    "end" : 57
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "start" : 72,
                      "end" : 73
                    }
                  ],
                  "start" : 72,
                  "end" : 73
                }
              ],
              "start" : 64,
              "end" : 73
            }
          ],
          "start" : 0,
          "end" : 73
        }
      ],
      "start" : 0,
      "end" : 73
    }
  ]
}