{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "X"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Nonterminal",
                      "name" : "S",
                      "arguments" : [
                        {
                          "kind" : "Integer",
                          "value" : 1
                        },
                        {
                          "kind" : "Integer",
                          "value" : 2
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S",
        "parameters" : [
          "a",
          "b"
        ]
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "l1:A {println(l1,a,b)} {org.iguana.datadependent.ast.AST$Assert@26d9c23e}",
                      "symbol" : {
                        "kind" : "Code",
                        "name" : "l1:A {println(l1,a,b)}",
                        "symbol" : {
                          "kind" : "Identifier",
                          "name" : "A",
                          "label" : "l1"
                        },
                        "statements" : [
                          {
                            "kind" : "ExpressionStatement",
                            "exp" : {
                              "kind" : "Println",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "l1",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Name",
                                  "name" : "a",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Name",
                                  "name" : "b",
                                  "i" : -1
                                }
                              ],
                              "fun" : "println"
                            }
                          }
                        ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "LeftExtent",
                                  "label" : "l1"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              },
                              {
                                "kind" : "Or",
                                "lhs" : {
                                  "kind" : "Equal",
                                  "lhs" : {
                                    "kind" : "RightExtent",
                                    "label" : "l1"
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 1
                                  }
                                },
                                "rhs" : {
                                  "kind" : "Equal",
                                  "lhs" : {
                                    "kind" : "RightExtent",
                                    "label" : "l1"
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 2
                                  }
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "a",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "b",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Code",
                      "name" : "l2:B {org.iguana.datadependent.ast.AST$Assert@6f2956aa}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "B",
                        "label" : "l2"
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Or",
                                "lhs" : {
                                  "kind" : "Equal",
                                  "lhs" : {
                                    "kind" : "LeftExtent",
                                    "label" : "l2"
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 1
                                  }
                                },
                                "rhs" : {
                                  "kind" : "Equal",
                                  "lhs" : {
                                    "kind" : "LeftExtent",
                                    "label" : "l2"
                                  },
                                  "rhs" : {
                                    "kind" : "Integer",
                                    "value" : 2
                                  }
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "RightExtent",
                                  "label" : "l2"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 3
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Identifier",
                      "name" : "C",
                      "label" : "l1"
                    },
                    {
                      "kind" : "Code",
                      "name" : "l2:A {println(l1,l2,a,b)} {org.iguana.datadependent.ast.AST$Assert@1352a202}",
                      "symbol" : {
                        "kind" : "Code",
                        "name" : "l2:A {println(l1,l2,a,b)}",
                        "symbol" : {
                          "kind" : "Identifier",
                          "name" : "A",
                          "label" : "l2"
                        },
                        "statements" : [
                          {
                            "kind" : "ExpressionStatement",
                            "exp" : {
                              "kind" : "Println",
                              "arguments" : [
                                {
                                  "kind" : "Name",
                                  "name" : "l1",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Name",
                                  "name" : "l2",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Name",
                                  "name" : "a",
                                  "i" : -1
                                },
                                {
                                  "kind" : "Name",
                                  "name" : "b",
                                  "i" : -1
                                }
                              ],
                              "fun" : "println"
                            }
                          }
                        ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "LeftExtent",
                                  "label" : "l1"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 0
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "RightExtent",
                                  "label" : "l1"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "LeftExtent",
                                  "label" : "l2"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "RightExtent",
                                  "label" : "l2"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "a",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Name",
                                  "name" : "b",
                                  "i" : -1
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "D"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "A"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    }
                  ]
                }
              ]
            },
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "B"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "b",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 98
                      }
                    }
                  ]
                }
              ]
            },
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    },
                    {
                      "kind" : "Terminal",
                      "name" : "b",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 98
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "C"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "a",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "D"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "b",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 98
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(X)",
    "startSymbol" : "X"
  }
}