{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "X",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "S",
          "preConditions" : [ ],
          "postConditions" : [ ]
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S",
        "preConditions" : [ ],
        "postConditions" : [ ]
      },
      "body" : [
        {
          "kind" : "Code",
          "name" : "'a' {assert(a.rExt == 1,indent(a.rExt) == 2)}",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Terminal",
            "name" : "'a'",
            "label" : "a",
            "preConditions" : [ ],
            "postConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "LeftExtent",
                    "label" : "a"
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                }
              }
            ],
            "nodeType" : "Literal",
            "regex" : {
              "kind" : "Char",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "val" : 97
            }
          },
          "statements" : [
            {
              "kind" : "ExpressionStatement",
              "exp" : {
                "kind" : "Assert",
                "arguments" : [
                  {
                    "kind" : "Equal",
                    "lhs" : {
                      "kind" : "RightExtent",
                      "label" : "a"
                    },
                    "rhs" : {
                      "kind" : "Integer",
                      "value" : 1
                    }
                  },
                  {
                    "kind" : "Equal",
                    "lhs" : {
                      "kind" : "Indent",
                      "fun" : "indent",
                      "arguments" : [
                        {
                          "kind" : "RightExtent",
                          "label" : "a"
                        }
                      ]
                    },
                    "rhs" : {
                      "kind" : "Integer",
                      "value" : 2
                    }
                  }
                ],
                "fun" : "assert"
              }
            }
          ]
        },
        {
          "kind" : "Terminal",
          "name" : "Layout",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "nodeType" : "Regex",
          "regex" : {
            "kind" : "regex.Star",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "regex" : {
              "kind" : "regex.Alt",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "symbols" : [
                {
                  "kind" : "Char",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "val" : 32
                }
              ]
            },
            "separators" : [ ]
          }
        },
        {
          "kind" : "Code",
          "name" : "'b' {assert(b.lExt == 5,b.rExt == 6,indent(b.rExt) == 7)}",
          "preConditions" : [ ],
          "postConditions" : [ ],
          "symbol" : {
            "kind" : "Terminal",
            "name" : "'b'",
            "label" : "b",
            "preConditions" : [ ],
            "postConditions" : [
              {
                "kind" : "DataDependentCondition",
                "type" : "DATA_DEPENDENT",
                "expression" : {
                  "kind" : "Equal",
                  "lhs" : {
                    "kind" : "LeftExtent",
                    "label" : "b"
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 5
                  }
                }
              }
            ],
            "nodeType" : "Literal",
            "regex" : {
              "kind" : "Char",
              "lookaheads" : [ ],
              "lookbehinds" : [ ],
              "val" : 98
            }
          },
          "statements" : [
            {
              "kind" : "ExpressionStatement",
              "exp" : {
                "kind" : "Assert",
                "arguments" : [
                  {
                    "kind" : "Equal",
                    "lhs" : {
                      "kind" : "LeftExtent",
                      "label" : "b"
                    },
                    "rhs" : {
                      "kind" : "Integer",
                      "value" : 5
                    }
                  },
                  {
                    "kind" : "Equal",
                    "lhs" : {
                      "kind" : "RightExtent",
                      "label" : "b"
                    },
                    "rhs" : {
                      "kind" : "Integer",
                      "value" : 6
                    }
                  },
                  {
                    "kind" : "Equal",
                    "lhs" : {
                      "kind" : "Indent",
                      "fun" : "indent",
                      "arguments" : [
                        {
                          "kind" : "RightExtent",
                          "label" : "b"
                        }
                      ]
                    },
                    "rhs" : {
                      "kind" : "Integer",
                      "value" : 7
                    }
                  }
                ],
                "fun" : "assert"
              }
            }
          ]
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start(X)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "nodeType" : "Start"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "X",
          "label" : "top",
          "preConditions" : [ ],
          "postConditions" : [ ]
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "leftEnd" : "",
      "rightEnd" : "",
      "leftEnds" : [ ],
      "rightEnds" : [ ],
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "prefixUnaryBelow" : [ ],
        "hasPostfixUnaryBelow" : false,
        "postfixUnaryBelow" : [ ],
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      },
      "definition" : {
        "kind" : "Start",
        "name" : "Start(X)",
        "preConditions" : [ ],
        "postConditions" : [ ],
        "startSymbol" : "X"
      }
    }
  ],
  "regularExpressionDefinitions" : {
    "Layout" : {
      "kind" : "regex.Star",
      "lookaheads" : [ ],
      "lookbehinds" : [ ],
      "regex" : {
        "kind" : "regex.Alt",
        "lookaheads" : [ ],
        "lookbehinds" : [ ],
        "symbols" : [
          {
            "kind" : "Char",
            "lookaheads" : [ ],
            "lookbehinds" : [ ],
            "val" : 32
          }
        ]
      },
      "separators" : [ ]
    }
  },
  "ebnfLefts" : { },
  "ebnfRights" : { },
  "startSymbols" : [
    {
      "kind" : "Start",
      "name" : "Start(X)",
      "preConditions" : [ ],
      "postConditions" : [ ],
      "startSymbol" : "X"
    },
    {
      "kind" : "Start",
      "name" : "Start(X)",
      "preConditions" : [ ],
      "postConditions" : [ ],
      "startSymbol" : "X"
    }
  ],
  "globals" : { }
}