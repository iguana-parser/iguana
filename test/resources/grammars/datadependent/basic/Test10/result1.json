{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(X)",
    "startSymbol" : "X"
  },
  "child" : {
    "kind" : "NonterminalNode",
    "rule" : {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "X"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "S"
        }
      ],
      "recursion" : "NON_REC",
      "irecursion" : "NON_REC",
      "associativity" : "UNDEFINED",
      "precedence" : -1,
      "precedenceLevel" : {
        "lhs" : 1,
        "rhs" : 1,
        "undefined" : -1,
        "hasPrefixUnary" : false,
        "hasPostfixUnary" : false,
        "hasPrefixUnaryBelow" : false,
        "hasPostfixUnaryBelow" : false,
        "index" : 1,
        "containsAssociativityGroup" : false,
        "assoc_lhs" : -1,
        "assoc_rhs" : -1
      }
    },
    "children" : [
      {
        "kind" : "NonterminalNode",
        "rule" : {
          "head" : {
            "kind" : "Nonterminal",
            "name" : "S"
          },
          "body" : [
            {
              "kind" : "Code",
              "name" : "a:A[a.lExt == 0] {assert(a.rExt == 1,indent(a.rExt) == 2)}",
              "symbol" : {
                "kind" : "Nonterminal",
                "name" : "A",
                "label" : "a",
                "postConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "Equal",
                      "lhs" : {
                        "kind" : "LeftExtent",
                        "label" : "a"
                      },
                      "rhs" : {
                        "kind" : "Integer",
                        "value" : 0
                      }
                    }
                  }
                ]
              },
              "statements" : [
                {
                  "kind" : "ExpressionStatement",
                  "exp" : {
                    "kind" : "Assert",
                    "arguments" : [
                      {
                        "kind" : "Equal",
                        "lhs" : {
                          "kind" : "RightExtent",
                          "label" : "a"
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 1
                        }
                      },
                      {
                        "kind" : "Equal",
                        "lhs" : {
                          "kind" : "Indent",
                          "fun" : "indent",
                          "arguments" : [
                            {
                              "kind" : "RightExtent",
                              "label" : "a"
                            }
                          ]
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 2
                        }
                      }
                    ],
                    "fun" : "assert"
                  }
                }
              ]
            },
            {
              "kind" : "Terminal",
              "name" : "Layout",
              "nodeType" : "Regex",
              "regex" : {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 32
                    }
                  ]
                }
              }
            },
            {
              "kind" : "Code",
              "name" : "b:B[b.lExt == 5] {assert(b.lExt == 5,b.rExt == 6,indent(b.rExt) == 7)}",
              "symbol" : {
                "kind" : "Nonterminal",
                "name" : "B",
                "label" : "b",
                "postConditions" : [
                  {
                    "kind" : "DataDependentCondition",
                    "type" : "DATA_DEPENDENT",
                    "expression" : {
                      "kind" : "Equal",
                      "lhs" : {
                        "kind" : "LeftExtent",
                        "label" : "b"
                      },
                      "rhs" : {
                        "kind" : "Integer",
                        "value" : 5
                      }
                    }
                  }
                ]
              },
              "statements" : [
                {
                  "kind" : "ExpressionStatement",
                  "exp" : {
                    "kind" : "Assert",
                    "arguments" : [
                      {
                        "kind" : "Equal",
                        "lhs" : {
                          "kind" : "LeftExtent",
                          "label" : "b"
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 5
                        }
                      },
                      {
                        "kind" : "Equal",
                        "lhs" : {
                          "kind" : "RightExtent",
                          "label" : "b"
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 6
                        }
                      },
                      {
                        "kind" : "Equal",
                        "lhs" : {
                          "kind" : "Indent",
                          "fun" : "indent",
                          "arguments" : [
                            {
                              "kind" : "RightExtent",
                              "label" : "b"
                            }
                          ]
                        },
                        "rhs" : {
                          "kind" : "Integer",
                          "value" : 7
                        }
                      }
                    ],
                    "fun" : "assert"
                  }
                }
              ]
            }
          ],
          "recursion" : "NON_REC",
          "irecursion" : "NON_REC",
          "associativity" : "UNDEFINED",
          "precedence" : -1,
          "precedenceLevel" : {
            "lhs" : 1,
            "rhs" : 1,
            "undefined" : -1,
            "hasPrefixUnary" : false,
            "hasPostfixUnary" : false,
            "hasPrefixUnaryBelow" : false,
            "hasPostfixUnaryBelow" : false,
            "index" : 1,
            "containsAssociativityGroup" : false,
            "assoc_lhs" : -1,
            "assoc_rhs" : -1
          }
        },
        "children" : [
          {
            "kind" : "NonterminalNode",
            "rule" : {
              "head" : {
                "kind" : "Nonterminal",
                "name" : "A"
              },
              "body" : [
                {
                  "kind" : "Terminal",
                  "name" : "a",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 97
                  }
                }
              ],
              "recursion" : "NON_REC",
              "irecursion" : "NON_REC",
              "associativity" : "UNDEFINED",
              "precedence" : -1,
              "precedenceLevel" : {
                "lhs" : 1,
                "rhs" : 1,
                "undefined" : -1,
                "hasPrefixUnary" : false,
                "hasPostfixUnary" : false,
                "hasPrefixUnaryBelow" : false,
                "hasPostfixUnaryBelow" : false,
                "index" : 1,
                "containsAssociativityGroup" : false,
                "assoc_lhs" : -1,
                "assoc_rhs" : -1
              }
            },
            "children" : [
              {
                "kind" : "KeywordTerminalNode",
                "terminal" : {
                  "kind" : "Terminal",
                  "name" : "a",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 97
                  }
                },
                "start" : 0,
                "end" : 1
              }
            ],
            "start" : 0,
            "end" : 1
          },
          {
            "kind" : "TerminalNode",
            "terminal" : {
              "kind" : "Terminal",
              "name" : "Layout",
              "nodeType" : "Regex",
              "regex" : {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "Char",
                      "val" : 32
                    }
                  ]
                }
              }
            },
            "start" : 1,
            "end" : 5
          },
          {
            "kind" : "NonterminalNode",
            "rule" : {
              "head" : {
                "kind" : "Nonterminal",
                "name" : "B"
              },
              "body" : [
                {
                  "kind" : "Terminal",
                  "name" : "b",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 98
                  }
                }
              ],
              "recursion" : "NON_REC",
              "irecursion" : "NON_REC",
              "associativity" : "UNDEFINED",
              "precedence" : -1,
              "precedenceLevel" : {
                "lhs" : 1,
                "rhs" : 1,
                "undefined" : -1,
                "hasPrefixUnary" : false,
                "hasPostfixUnary" : false,
                "hasPrefixUnaryBelow" : false,
                "hasPostfixUnaryBelow" : false,
                "index" : 1,
                "containsAssociativityGroup" : false,
                "assoc_lhs" : -1,
                "assoc_rhs" : -1
              }
            },
            "children" : [
              {
                "kind" : "KeywordTerminalNode",
                "terminal" : {
                  "kind" : "Terminal",
                  "name" : "b",
                  "nodeType" : "Literal",
                  "regex" : {
                    "kind" : "Char",
                    "val" : 98
                  }
                },
                "start" : 5,
                "end" : 6
              }
            ],
            "start" : 5,
            "end" : 6
          }
        ],
        "start" : 0,
        "end" : 6
      }
    ],
    "start" : 0,
    "end" : 6
  },
  "start" : 0,
  "end" : 6
}