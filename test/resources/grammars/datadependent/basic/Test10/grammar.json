{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "X"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Identifier",
                      "name" : "S"
                    }
                  ]
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Code",
                      "name" : "a:A [a.lExt == 0] {assert(a.rExt == 1,indent(a.rExt) == 2)}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "A",
                        "label" : "a",
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "Equal",
                              "lhs" : {
                                "kind" : "LeftExtent",
                                "label" : "a"
                              },
                              "rhs" : {
                                "kind" : "Integer",
                                "value" : 0
                              }
                            }
                          }
                        ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "RightExtent",
                                  "label" : "a"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 1
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Indent",
                                  "fun" : "indent",
                                  "arguments" : [
                                    {
                                      "kind" : "RightExtent",
                                      "label" : "a"
                                    }
                                  ]
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 2
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    },
                    {
                      "kind" : "Identifier",
                      "name" : "Layout"
                    },
                    {
                      "kind" : "Code",
                      "name" : "b:B [b.lExt == 5] {assert(b.lExt == 5,b.rExt == 6,indent(b.rExt) == 7)}",
                      "symbol" : {
                        "kind" : "Identifier",
                        "name" : "B",
                        "label" : "b",
                        "postConditions" : [
                          {
                            "kind" : "DataDependentCondition",
                            "type" : "DATA_DEPENDENT",
                            "expression" : {
                              "kind" : "Equal",
                              "lhs" : {
                                "kind" : "LeftExtent",
                                "label" : "b"
                              },
                              "rhs" : {
                                "kind" : "Integer",
                                "value" : 5
                              }
                            }
                          }
                        ]
                      },
                      "statements" : [
                        {
                          "kind" : "ExpressionStatement",
                          "exp" : {
                            "kind" : "Assert",
                            "arguments" : [
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "LeftExtent",
                                  "label" : "b"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 5
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "RightExtent",
                                  "label" : "b"
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 6
                                }
                              },
                              {
                                "kind" : "Equal",
                                "lhs" : {
                                  "kind" : "Indent",
                                  "fun" : "indent",
                                  "arguments" : [
                                    {
                                      "kind" : "RightExtent",
                                      "label" : "b"
                                    }
                                  ]
                                },
                                "rhs" : {
                                  "kind" : "Integer",
                                  "value" : 7
                                }
                              }
                            ],
                            "fun" : "assert"
                          }
                        }
                      ]
                    }
                  ],
                  "associativity" : "UNDEFINED"
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "A"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'a'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 97
                      }
                    }
                  ]
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "B"
      },
      "priorityLevels" : [
        {
          "alternatives" : [
            {
              "seqs" : [
                {
                  "symbols" : [
                    {
                      "kind" : "Terminal",
                      "name" : "'b'",
                      "nodeType" : "Literal",
                      "regex" : {
                        "kind" : "Char",
                        "val" : 98
                      }
                    }
                  ]
                }
              ],
              "associativity" : "UNDEFINED"
            }
          ]
        }
      ],
      "layoutStrategy" : "INHERITED"
    }
  ],
  "regularExpressions" : {
    "Layout" : {
      "kind" : "regex.Star",
      "regex" : {
        "kind" : "regex.Alt",
        "symbols" : [
          {
            "kind" : "Char",
            "val" : 32
          }
        ]
      }
    }
  },
  "literals" : {
    "a" : {
      "kind" : "Char",
      "val" : 97
    },
    "b" : {
      "kind" : "Char",
      "val" : 98
    }
  },
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(X)",
    "startSymbol" : "X"
  }
}