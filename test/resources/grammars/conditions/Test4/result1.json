{
  "kind" : "StartNode",
  "symbol" : {
    "kind" : "Start",
    "name" : "Start(Id)",
    "preConditions" : [ ],
    "postConditions" : [ ],
    "startSymbol" : "Id"
  },
  "children" : [
    {
      "kind" : "NonterminalNode",
      "rule" : {
        "head" : {
          "kind" : "Nonterminal",
          "name" : "Id",
          "preConditions" : [ ],
          "postConditions" : [ ]
        },
        "body" : [
          {
            "kind" : "Nonterminal",
            "name" : "Char+",
            "preConditions" : [ ],
            "postConditions" : [
              {
                "kind" : "RegularExpressionCondition",
                "type" : "NOT_FOLLOW",
                "regularExpression" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              {
                "kind" : "RegularExpressionCondition",
                "type" : "NOT_MATCH",
                "regularExpression" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 105
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 102
                        }
                      ]
                    },
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 119
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 104
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 105
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 108
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 101
                        }
                      ]
                    },
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 100
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 111
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "nodeType" : "Plus"
          }
        ],
        "recursion" : "NON_REC",
        "irecursion" : "NON_REC",
        "leftEnd" : "",
        "rightEnd" : "",
        "leftEnds" : [ ],
        "rightEnds" : [ ],
        "associativity" : "UNDEFINED",
        "precedence" : -1,
        "precedenceLevel" : {
          "lhs" : 1,
          "rhs" : 1,
          "undefined" : -1,
          "hasPrefixUnary" : false,
          "hasPostfixUnary" : false,
          "hasPrefixUnaryBelow" : false,
          "prefixUnaryBelow" : [ ],
          "hasPostfixUnaryBelow" : false,
          "postfixUnaryBelow" : [ ],
          "index" : 1,
          "containsAssociativityGroup" : false,
          "assoc_lhs" : -1,
          "assoc_rhs" : -1
        }
      },
      "children" : [
        {
          "kind" : "PlusNode",
          "symbol" : {
            "kind" : "Plus",
            "name" : "Char+",
            "preConditions" : [ ],
            "postConditions" : [
              {
                "kind" : "RegularExpressionCondition",
                "type" : "NOT_FOLLOW",
                "regularExpression" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              {
                "kind" : "RegularExpressionCondition",
                "type" : "NOT_MATCH",
                "regularExpression" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 105
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 102
                        }
                      ]
                    },
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 119
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 104
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 105
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 108
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 101
                        }
                      ]
                    },
                    {
                      "kind" : "regex.Seq",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 100
                        },
                        {
                          "kind" : "Char",
                          "lookaheads" : [ ],
                          "lookbehinds" : [ ],
                          "val" : 111
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "s" : {
              "kind" : "Terminal",
              "name" : "Char",
              "preConditions" : [ ],
              "postConditions" : [ ],
              "nodeType" : "Regex",
              "regex" : {
                "kind" : "regex.Alt",
                "lookaheads" : [ ],
                "lookbehinds" : [ ],
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "lookaheads" : [ ],
                    "lookbehinds" : [ ],
                    "start" : 97,
                    "end" : 122
                  }
                ]
              }
            },
            "separators" : [ ]
          },
          "children" : [
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Char",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              "start" : 0,
              "end" : 1
            },
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Char",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              "start" : 1,
              "end" : 2
            },
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Char",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              "start" : 2,
              "end" : 3
            },
            {
              "kind" : "TerminalNode",
              "terminal" : {
                "kind" : "Terminal",
                "name" : "Char",
                "preConditions" : [ ],
                "postConditions" : [ ],
                "nodeType" : "Regex",
                "regex" : {
                  "kind" : "regex.Alt",
                  "lookaheads" : [ ],
                  "lookbehinds" : [ ],
                  "symbols" : [
                    {
                      "kind" : "CharRange",
                      "lookaheads" : [ ],
                      "lookbehinds" : [ ],
                      "start" : 97,
                      "end" : 122
                    }
                  ]
                }
              },
              "start" : 3,
              "end" : 4
            }
          ],
          "start" : 0,
          "end" : 4
        }
      ],
      "start" : 0,
      "end" : 4
    }
  ],
  "start" : 0,
  "end" : 4
}