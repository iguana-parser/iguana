{
  "rules" : [
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start(S)",
        "nodeType" : "Start"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "S"
        }
      ],
      "definition" : {
        "kind" : "Start",
        "name" : "Start(S)",
        "startSymbol" : "S"
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "L?",
        "nodeType" : "Opt"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "L"
        }
      ],
      "definition" : {
        "kind" : "Opt",
        "name" : "L?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "L"
        }
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "L?",
        "nodeType" : "Opt"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "L?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "L"
        }
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "for",
          "regex" : {
            "kind" : "regex.Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 114
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "L?",
          "nodeType" : "Opt"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Id"
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "S"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "forall",
          "regex" : {
            "kind" : "regex.Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 108
              },
              {
                "kind" : "Char",
                "val" : 108
              }
            ]
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Id"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(a-z)+",
          "preConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_PRECEDE",
              "regularExpression" : {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 97,
                    "end" : 122
                  }
                ]
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_FOLLOW",
              "regularExpression" : {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 97,
                    "end" : 122
                  }
                ]
              }
            }
          ],
          "nodeType" : "Plus"
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "L"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "\\u0020",
          "regex" : {
            "kind" : "Char",
            "val" : 32
          }
        }
      ]
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(a-z)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(a-z)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Terminal",
          "name" : "(a-z)",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "CharRange",
                "start" : 97,
                "end" : 122
              }
            ]
          }
        }
      ],
      "definition" : {
        "kind" : "Plus",
        "name" : "(a-z)+",
        "preConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_PRECEDE",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 97,
                  "end" : 122
                }
              ]
            }
          }
        ],
        "postConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 97,
                  "end" : 122
                }
              ]
            }
          }
        ],
        "s" : {
          "kind" : "Terminal",
          "name" : "(a-z)",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "CharRange",
                "start" : 97,
                "end" : 122
              }
            ]
          }
        }
      }
    },
    {
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(a-z)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(a-z)",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "CharRange",
                "start" : 97,
                "end" : 122
              }
            ]
          }
        }
      ],
      "definition" : {
        "kind" : "Plus",
        "name" : "(a-z)+",
        "preConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_PRECEDE",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 97,
                  "end" : 122
                }
              ]
            }
          }
        ],
        "postConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 97,
                  "end" : 122
                }
              ]
            }
          }
        ],
        "s" : {
          "kind" : "Terminal",
          "name" : "(a-z)",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "CharRange",
                "start" : 97,
                "end" : 122
              }
            ]
          }
        }
      }
    }
  ],
  "ebnfLefts" : {
    "$Id+" : [
      "$Id"
    ]
  },
  "ebnfRights" : {
    "$Id+" : [
      "$Id"
    ]
  },
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(S)",
    "startSymbol" : "S"
  }
}